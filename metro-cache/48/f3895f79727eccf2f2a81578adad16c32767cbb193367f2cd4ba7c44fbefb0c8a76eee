{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"lodash/isEqual","data":{"isAsync":false}},{"name":"lodash/pick","data":{"isAsync":false}},{"name":"prop-types","data":{"isAsync":false}},{"name":"./react-native","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createToolbarAndroidComponent;\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/extends\"));\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/regenerator\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"./../../react-transform-hmr/lib/index.js\"));\n\n  var _isEqual = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"lodash/isEqual\"));\n\n  var _pick = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"lodash/pick\"));\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"prop-types\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[15], \"./react-native\");\n\n  var _jsxFileName = \"/home/miko/Wallet/node_modules/react-native-vector-icons/lib/toolbar-android.js\";\n  var _components = {\n    IconToolbarAndroid: {\n      displayName: \"IconToolbarAndroid\",\n      isInFunction: true\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/miko/Wallet/node_modules/react-native-vector-icons/lib/toolbar-android.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var ICON_PROP_NAMES = ['iconSize', 'iconColor', 'titleColor'];\n  var LOGO_ICON_PROP_NAMES = [].concat(ICON_PROP_NAMES, ['logoName']);\n  var NAV_ICON_PROP_NAMES = [].concat(ICON_PROP_NAMES, ['navIconName']);\n  var OVERFLOW_ICON_PROP_NAMES = [].concat(ICON_PROP_NAMES, ['overflowIconName']);\n  var ACTIONS_PROP_NAMES = [].concat(ICON_PROP_NAMES, ['actions']);\n\n  var arePropsEqual = function arePropsEqual(keys) {\n    return function (prevProps, nextProps) {\n      return (0, _isEqual.default)((0, _pick.default)(prevProps, keys), (0, _pick.default)(nextProps, keys));\n    };\n  };\n\n  var areLogoIconPropsEqual = arePropsEqual(LOGO_ICON_PROP_NAMES);\n  var areNavIconPropsEqual = arePropsEqual(NAV_ICON_PROP_NAMES);\n  var areOverflowIconPropsEqual = arePropsEqual(OVERFLOW_ICON_PROP_NAMES);\n  var areActionPropsEqual = arePropsEqual(ACTIONS_PROP_NAMES);\n\n  function createToolbarAndroidComponent(IconNamePropType, getImageSource) {\n    var _class, _temp;\n\n    return _wrapComponent(\"IconToolbarAndroid\")((_temp = _class = function (_PureComponent) {\n      (0, _inherits2.default)(IconToolbarAndroid, _PureComponent);\n\n      function IconToolbarAndroid() {\n        var _getPrototypeOf2;\n\n        var _this;\n\n        (0, _classCallCheck2.default)(this, IconToolbarAndroid);\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(IconToolbarAndroid)).call.apply(_getPrototypeOf2, [this].concat(args)));\n        _this.state = {\n          logo: undefined,\n          navIcon: undefined,\n          overflowIcon: undefined,\n          actions: undefined\n        };\n        return _this;\n      }\n\n      (0, _createClass2.default)(IconToolbarAndroid, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          this.updateLogoIconSource();\n          this.updateNavIconSource();\n          this.updateOverflowIconSource();\n          this.updateActionIconSources();\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate(prevProps) {\n          if (!areLogoIconPropsEqual(prevProps, this.props)) {\n            this.updateLogoIconSource();\n          }\n\n          if (!areNavIconPropsEqual(prevProps, this.props)) {\n            this.updateNavIconSource();\n          }\n\n          if (!areOverflowIconPropsEqual(prevProps, this.props)) {\n            this.updateOverflowIconSource();\n          }\n\n          if (!areActionPropsEqual(prevProps, this.props)) {\n            this.updateActionIconSources();\n          }\n        }\n      }, {\n        key: \"updateLogoIconSource\",\n        value: function updateLogoIconSource() {\n          var _this$props, logoName, iconSize, iconColor, titleColor, logo;\n\n          return _regenerator.default.async(function updateLogoIconSource$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _this$props = this.props, logoName = _this$props.logoName, iconSize = _this$props.iconSize, iconColor = _this$props.iconColor, titleColor = _this$props.titleColor;\n\n                  if (!logoName) {\n                    _context.next = 8;\n                    break;\n                  }\n\n                  _context.next = 4;\n                  return _regenerator.default.awrap(getImageSource(logoName, iconSize, iconColor || titleColor));\n\n                case 4:\n                  logo = _context.sent;\n                  this.setState({\n                    logo: logo\n                  });\n                  _context.next = 9;\n                  break;\n\n                case 8:\n                  if (this.state.logo) {\n                    this.setState({\n                      logo: undefined\n                    });\n                  }\n\n                case 9:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, null, this);\n        }\n      }, {\n        key: \"updateNavIconSource\",\n        value: function updateNavIconSource() {\n          var _this$props2, navIconName, iconSize, iconColor, titleColor, navIcon;\n\n          return _regenerator.default.async(function updateNavIconSource$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _this$props2 = this.props, navIconName = _this$props2.navIconName, iconSize = _this$props2.iconSize, iconColor = _this$props2.iconColor, titleColor = _this$props2.titleColor;\n\n                  if (!navIconName) {\n                    _context2.next = 8;\n                    break;\n                  }\n\n                  _context2.next = 4;\n                  return _regenerator.default.awrap(getImageSource(navIconName, iconSize, iconColor || titleColor));\n\n                case 4:\n                  navIcon = _context2.sent;\n                  this.setState({\n                    navIcon: navIcon\n                  });\n                  _context2.next = 9;\n                  break;\n\n                case 8:\n                  if (this.state.navIcon) {\n                    this.setState({\n                      navIcon: undefined\n                    });\n                  }\n\n                case 9:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, null, this);\n        }\n      }, {\n        key: \"updateOverflowIconSource\",\n        value: function updateOverflowIconSource() {\n          var _this$props3, overflowIconName, iconSize, iconColor, titleColor, overflowIcon;\n\n          return _regenerator.default.async(function updateOverflowIconSource$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _this$props3 = this.props, overflowIconName = _this$props3.overflowIconName, iconSize = _this$props3.iconSize, iconColor = _this$props3.iconColor, titleColor = _this$props3.titleColor;\n\n                  if (!overflowIconName) {\n                    _context3.next = 8;\n                    break;\n                  }\n\n                  _context3.next = 4;\n                  return _regenerator.default.awrap(getImageSource(overflowIconName, iconSize, iconColor || titleColor));\n\n                case 4:\n                  overflowIcon = _context3.sent;\n                  this.setState({\n                    overflowIcon: overflowIcon\n                  });\n                  _context3.next = 9;\n                  break;\n\n                case 8:\n                  if (this.state.overflowIcon) {\n                    this.setState({\n                      overflowIcon: undefined\n                    });\n                  }\n\n                case 9:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, null, this);\n        }\n      }, {\n        key: \"updateActionIconSources\",\n        value: function updateActionIconSources() {\n          var _this$props4, actions, iconSize, iconColor, titleColor, updatedActions;\n\n          return _regenerator.default.async(function updateActionIconSources$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _this$props4 = this.props, actions = _this$props4.actions, iconSize = _this$props4.iconSize, iconColor = _this$props4.iconColor, titleColor = _this$props4.titleColor;\n                  _context4.next = 3;\n                  return _regenerator.default.awrap(Promise.all((actions || []).map(function (action) {\n                    if (action.iconName) {\n                      return getImageSource(action.iconName, action.iconSize || iconSize, action.iconColor || iconColor || titleColor).then(function (icon) {\n                        return (0, _objectSpread2.default)({}, action, {\n                          icon: icon\n                        });\n                      });\n                    }\n\n                    return Promise.resolve(action);\n                  })));\n\n                case 3:\n                  updatedActions = _context4.sent;\n                  this.setState({\n                    actions: updatedActions\n                  });\n\n                case 5:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, null, this);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          return _react.default.createElement(_reactNative.ToolbarAndroid, (0, _extends2.default)({}, this.props, this.state, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142\n            }\n          }));\n        }\n      }]);\n      return IconToolbarAndroid;\n    }(_react.PureComponent), _class.propTypes = {\n      logoName: IconNamePropType,\n      navIconName: IconNamePropType,\n      overflowIconName: IconNamePropType,\n      actions: _propTypes.default.arrayOf(_propTypes.default.shape({\n        title: _propTypes.default.string.isRequired,\n        iconName: IconNamePropType,\n        iconSize: _propTypes.default.number,\n        iconColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n        show: _propTypes.default.oneOf(['always', 'ifRoom', 'never']),\n        showWithText: _propTypes.default.bool\n      })),\n      iconSize: _propTypes.default.number,\n      iconColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n      titleColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])\n    }, _class.defaultProps = {\n      iconSize: 24\n    }, _temp));\n  }\n});","map":[[27,0,4,0],[31,0,2,0],[33,0,3,0],[35,0,5,0],[37,0,6,0],[60,0,8,0],[60,6,8,6,"ICON_PROP_NAMES"],[60,21,8,21],[60,24,8,24],[60,25,8,25],[60,35,8,24],[60,37,8,37],[60,48,8,24],[60,50,8,50],[60,62,8,24],[60,63,8,0],[61,0,9,0],[61,6,9,6,"LOGO_ICON_PROP_NAMES"],[61,26,9,26],[61,39,9,33,"ICON_PROP_NAMES"],[61,54,9,26],[61,57,9,50],[61,67,9,26],[61,69,9,0],[62,0,10,0],[62,6,10,6,"NAV_ICON_PROP_NAMES"],[62,25,10,25],[62,38,10,32,"ICON_PROP_NAMES"],[62,53,10,25],[62,56,10,49],[62,69,10,25],[62,71,10,0],[63,0,11,0],[63,6,11,6,"OVERFLOW_ICON_PROP_NAMES"],[63,30,11,30],[63,43,11,37,"ICON_PROP_NAMES"],[63,58,11,30],[63,61,11,54],[63,79,11,30],[63,81,11,0],[64,0,12,0],[64,6,12,6,"ACTIONS_PROP_NAMES"],[64,24,12,24],[64,37,12,31,"ICON_PROP_NAMES"],[64,52,12,24],[64,55,12,48],[64,64,12,24],[64,66,12,0],[66,0,14,0],[66,6,14,6,"arePropsEqual"],[66,19,14,19],[66,22,14,22],[66,31,14,6,"arePropsEqual"],[66,44,14,22],[66,45,14,22,"keys"],[66,49,14,26],[67,0,14,26],[67,11,14,30],[67,21,14,31,"prevProps"],[67,30,14,30],[67,32,14,42,"nextProps"],[67,41,14,30],[68,0,14,30],[68,13,15,2],[68,35,15,10],[68,54,15,15,"prevProps"],[68,63,15,10],[68,65,15,26,"keys"],[68,69,15,10],[68,70,15,2],[68,72,15,33],[68,91,15,38,"nextProps"],[68,100,15,33],[68,102,15,49,"keys"],[68,106,15,33],[68,107,15,2],[68,108,14,30],[69,0,14,30],[69,5,14,26],[70,0,14,26],[70,3,14,0],[72,0,17,0],[72,6,17,6,"areLogoIconPropsEqual"],[72,27,17,27],[72,30,17,30,"arePropsEqual"],[72,43,17,43],[72,44,17,44,"LOGO_ICON_PROP_NAMES"],[72,64,17,43],[72,65,17,0],[73,0,18,0],[73,6,18,6,"areNavIconPropsEqual"],[73,26,18,26],[73,29,18,29,"arePropsEqual"],[73,42,18,42],[73,43,18,43,"NAV_ICON_PROP_NAMES"],[73,62,18,42],[73,63,18,0],[74,0,19,0],[74,6,19,6,"areOverflowIconPropsEqual"],[74,31,19,31],[74,34,19,34,"arePropsEqual"],[74,47,19,47],[74,48,19,48,"OVERFLOW_ICON_PROP_NAMES"],[74,72,19,47],[74,73,19,0],[75,0,20,0],[75,6,20,6,"areActionPropsEqual"],[75,25,20,25],[75,28,20,28,"arePropsEqual"],[75,41,20,41],[75,42,20,42,"ACTIONS_PROP_NAMES"],[75,60,20,41],[75,61,20,0],[77,0,22,15],[77,11,22,24,"createToolbarAndroidComponent"],[77,40,22,15],[77,41,23,2,"IconNamePropType"],[77,57,22,15],[77,59,24,2,"getImageSource"],[77,73,22,15],[77,75,25,2],[78,0,25,2],[80,0,26,2],[81,0,26,2],[83,0,26,2],[84,0,26,2],[86,0,26,2],[88,0,26,2],[90,0,26,2],[91,0,26,2],[92,0,26,2],[94,0,26,2],[95,0,26,2],[95,14,50,4,"state"],[95,19,26,2],[95,22,50,12],[96,0,51,6,"logo"],[96,10,51,6,"logo"],[96,14,51,10],[96,16,51,12,"undefined"],[96,25,50,12],[97,0,52,6,"navIcon"],[97,10,52,6,"navIcon"],[97,17,52,13],[97,19,52,15,"undefined"],[97,28,50,12],[98,0,53,6,"overflowIcon"],[98,10,53,6,"overflowIcon"],[98,22,53,18],[98,24,53,20,"undefined"],[98,33,50,12],[99,0,54,6,"actions"],[99,10,54,6,"actions"],[99,17,54,13],[99,19,54,15,"undefined"],[100,0,50,12],[100,9,26,2],[101,0,26,2],[102,0,26,2],[104,0,26,2],[105,0,26,2],[106,0,26,2],[106,44,57,24],[107,0,58,6],[107,15,58,11,"updateLogoIconSource"],[107,35,58,6],[108,0,59,6],[108,15,59,11,"updateNavIconSource"],[108,34,59,6],[109,0,60,6],[109,15,60,11,"updateOverflowIconSource"],[109,39,60,6],[110,0,61,6],[110,15,61,11,"updateActionIconSources"],[110,38,61,6],[111,0,62,5],[112,0,26,2],[113,0,26,2],[114,0,26,2],[114,43,64,23,"prevProps"],[114,52,26,2],[114,54,64,34],[115,0,65,6],[115,14,65,10],[115,15,65,11,"areLogoIconPropsEqual"],[115,36,65,32],[115,37,65,33,"prevProps"],[115,46,65,32],[115,48,65,44],[115,53,65,49,"props"],[115,58,65,32],[115,59,65,6],[115,61,65,57],[116,0,66,8],[116,17,66,13,"updateLogoIconSource"],[116,37,66,8],[117,0,67,7],[119,0,68,6],[119,14,68,10],[119,15,68,11,"areNavIconPropsEqual"],[119,35,68,31],[119,36,68,32,"prevProps"],[119,45,68,31],[119,47,68,43],[119,52,68,48,"props"],[119,57,68,31],[119,58,68,6],[119,60,68,56],[120,0,69,8],[120,17,69,13,"updateNavIconSource"],[120,36,69,8],[121,0,70,7],[123,0,71,6],[123,14,71,10],[123,15,71,11,"areOverflowIconPropsEqual"],[123,40,71,36],[123,41,71,37,"prevProps"],[123,50,71,36],[123,52,71,48],[123,57,71,53,"props"],[123,62,71,36],[123,63,71,6],[123,65,71,61],[124,0,72,8],[124,17,72,13,"updateOverflowIconSource"],[124,41,72,8],[125,0,73,7],[127,0,74,6],[127,14,74,10],[127,15,74,11,"areActionPropsEqual"],[127,34,74,30],[127,35,74,31,"prevProps"],[127,44,74,30],[127,46,74,42],[127,51,74,47,"props"],[127,56,74,30],[127,57,74,6],[127,59,74,55],[128,0,75,8],[128,17,75,13,"updateActionIconSources"],[128,40,75,8],[129,0,76,7],[130,0,77,5],[131,0,26,2],[132,0,26,2],[133,0,26,2],[134,0,26,2],[136,0,26,2],[137,0,26,2],[138,0,26,2],[139,0,26,2],[140,0,26,2],[140,32,80,60],[140,37,80,65,"props"],[140,42,26,2],[140,44,80,14,"logoName"],[140,52,26,2],[140,67,80,14,"logoName"],[140,75,26,2],[140,77,80,24,"iconSize"],[140,85,26,2],[140,100,80,24,"iconSize"],[140,108,26,2],[140,110,80,34,"iconColor"],[140,119,26,2],[140,134,80,34,"iconColor"],[140,143,26,2],[140,145,80,45,"titleColor"],[140,155,26,2],[140,170,80,45,"titleColor"],[140,180,26,2],[142,0,26,2],[142,23,81,10,"logoName"],[142,31,26,2],[143,0,26,2],[144,0,26,2],[145,0,26,2],[147,0,26,2],[148,0,26,2],[148,52,82,27,"getImageSource"],[148,66,82,41],[148,67,83,10,"logoName"],[148,75,82,41],[148,77,84,10,"iconSize"],[148,85,82,41],[148,87,85,10,"iconColor"],[148,96,85,19],[148,100,85,23,"titleColor"],[148,110,82,41],[148,111,26,2],[150,0,26,2],[151,0,82,14,"logo"],[151,18,82,14,"logo"],[151,22,26,2],[152,0,87,8],[152,23,87,13,"setState"],[152,31,87,8],[152,32,87,22],[153,0,87,24,"logo"],[153,20,87,24,"logo"],[153,24,87,28],[153,26,87,24,"logo"],[154,0,87,22],[154,19,87,8],[155,0,26,2],[156,0,26,2],[158,0,26,2],[159,0,89,13],[159,22,89,17],[159,27,89,22,"state"],[159,32,89,17],[159,33,89,28,"logo"],[159,37,89,13],[159,39,89,34],[160,0,90,8],[160,25,90,13,"setState"],[160,33,90,8],[160,34,90,22],[161,0,90,24,"logo"],[161,22,90,24,"logo"],[161,26,90,28],[161,28,90,30,"undefined"],[162,0,90,22],[162,21,90,8],[163,0,91,7],[165,0,26,2],[166,0,26,2],[167,0,26,2],[168,0,26,2],[169,0,26,2],[170,0,26,2],[171,0,26,2],[172,0,26,2],[173,0,26,2],[174,0,26,2],[175,0,26,2],[177,0,26,2],[178,0,26,2],[179,0,26,2],[180,0,26,2],[181,0,26,2],[181,33,95,63],[181,38,95,68,"props"],[181,43,26,2],[181,45,95,14,"navIconName"],[181,56,26,2],[181,72,95,14,"navIconName"],[181,83,26,2],[181,85,95,27,"iconSize"],[181,93,26,2],[181,109,95,27,"iconSize"],[181,117,26,2],[181,119,95,37,"iconColor"],[181,128,26,2],[181,144,95,37,"iconColor"],[181,153,26,2],[181,155,95,48,"titleColor"],[181,165,26,2],[181,181,95,48,"titleColor"],[181,191,26,2],[183,0,26,2],[183,23,96,10,"navIconName"],[183,34,26,2],[184,0,26,2],[185,0,26,2],[186,0,26,2],[188,0,26,2],[189,0,26,2],[189,52,97,30,"getImageSource"],[189,66,97,44],[189,67,98,10,"navIconName"],[189,78,97,44],[189,80,99,10,"iconSize"],[189,88,97,44],[189,90,100,10,"iconColor"],[189,99,100,19],[189,103,100,23,"titleColor"],[189,113,97,44],[189,114,26,2],[191,0,26,2],[192,0,97,14,"navIcon"],[192,18,97,14,"navIcon"],[192,25,26,2],[193,0,102,8],[193,23,102,13,"setState"],[193,31,102,8],[193,32,102,22],[194,0,102,24,"navIcon"],[194,20,102,24,"navIcon"],[194,27,102,31],[194,29,102,24,"navIcon"],[195,0,102,22],[195,19,102,8],[196,0,26,2],[197,0,26,2],[199,0,26,2],[200,0,104,13],[200,22,104,17],[200,27,104,22,"state"],[200,32,104,17],[200,33,104,28,"navIcon"],[200,40,104,13],[200,42,104,37],[201,0,105,8],[201,25,105,13,"setState"],[201,33,105,8],[201,34,105,22],[202,0,105,24,"navIcon"],[202,22,105,24,"navIcon"],[202,29,105,31],[202,31,105,33,"undefined"],[203,0,105,22],[203,21,105,8],[204,0,106,7],[206,0,26,2],[207,0,26,2],[208,0,26,2],[209,0,26,2],[210,0,26,2],[211,0,26,2],[212,0,26,2],[213,0,26,2],[214,0,26,2],[215,0,26,2],[216,0,26,2],[218,0,26,2],[219,0,26,2],[220,0,26,2],[221,0,26,2],[222,0,26,2],[222,33,110,68],[222,38,110,73,"props"],[222,43,26,2],[222,45,110,14,"overflowIconName"],[222,61,26,2],[222,77,110,14,"overflowIconName"],[222,93,26,2],[222,95,110,32,"iconSize"],[222,103,26,2],[222,119,110,32,"iconSize"],[222,127,26,2],[222,129,110,42,"iconColor"],[222,138,26,2],[222,154,110,42,"iconColor"],[222,163,26,2],[222,165,110,53,"titleColor"],[222,175,26,2],[222,191,110,53,"titleColor"],[222,201,26,2],[224,0,26,2],[224,23,111,10,"overflowIconName"],[224,39,26,2],[225,0,26,2],[226,0,26,2],[227,0,26,2],[229,0,26,2],[230,0,26,2],[230,52,112,35,"getImageSource"],[230,66,112,49],[230,67,113,10,"overflowIconName"],[230,83,112,49],[230,85,114,10,"iconSize"],[230,93,112,49],[230,95,115,10,"iconColor"],[230,104,115,19],[230,108,115,23,"titleColor"],[230,118,112,49],[230,119,26,2],[232,0,26,2],[233,0,112,14,"overflowIcon"],[233,18,112,14,"overflowIcon"],[233,30,26,2],[234,0,117,8],[234,23,117,13,"setState"],[234,31,117,8],[234,32,117,22],[235,0,117,24,"overflowIcon"],[235,20,117,24,"overflowIcon"],[235,32,117,36],[235,34,117,24,"overflowIcon"],[236,0,117,22],[236,19,117,8],[237,0,26,2],[238,0,26,2],[240,0,26,2],[241,0,119,13],[241,22,119,17],[241,27,119,22,"state"],[241,32,119,17],[241,33,119,28,"overflowIcon"],[241,45,119,13],[241,47,119,42],[242,0,120,8],[242,25,120,13,"setState"],[242,33,120,8],[242,34,120,22],[243,0,120,24,"overflowIcon"],[243,22,120,24,"overflowIcon"],[243,34,120,36],[243,36,120,38,"undefined"],[244,0,120,22],[244,21,120,8],[245,0,121,7],[247,0,26,2],[248,0,26,2],[249,0,26,2],[250,0,26,2],[251,0,26,2],[252,0,26,2],[253,0,26,2],[254,0,26,2],[255,0,26,2],[256,0,26,2],[257,0,26,2],[259,0,26,2],[260,0,26,2],[261,0,26,2],[262,0,26,2],[263,0,26,2],[263,33,125,59],[263,38,125,64,"props"],[263,43,26,2],[263,45,125,14,"actions"],[263,52,26,2],[263,68,125,14,"actions"],[263,75,26,2],[263,77,125,23,"iconSize"],[263,85,26,2],[263,101,125,23,"iconSize"],[263,109,26,2],[263,111,125,33,"iconColor"],[263,120,26,2],[263,136,125,33,"iconColor"],[263,145,26,2],[263,147,125,44,"titleColor"],[263,157,26,2],[263,173,125,44,"titleColor"],[263,183,26,2],[264,0,26,2],[265,0,26,2],[265,52,126,35,"Promise"],[265,59,126,42],[265,60,126,43,"all"],[265,63,126,35],[265,64,127,8],[265,65,127,9,"actions"],[265,72,127,16],[265,76,127,20],[265,78,127,8],[265,80,127,24,"map"],[265,83,127,8],[265,84,127,28],[265,94,127,28,"action"],[265,100,127,34],[265,102,127,38],[266,0,128,10],[266,24,128,14,"action"],[266,30,128,20],[266,31,128,21,"iconName"],[266,39,128,10],[266,41,128,31],[267,0,129,12],[267,29,129,19,"getImageSource"],[267,43,129,33],[267,44,130,14,"action"],[267,50,130,20],[267,51,130,21,"iconName"],[267,59,129,33],[267,61,131,14,"action"],[267,67,131,20],[267,68,131,21,"iconSize"],[267,76,131,14],[267,80,131,33,"iconSize"],[267,88,129,33],[267,90,132,14,"action"],[267,96,132,20],[267,97,132,21,"iconColor"],[267,106,132,14],[267,110,132,34,"iconColor"],[267,119,132,14],[267,123,132,47,"titleColor"],[267,133,129,33],[267,134,129,19],[267,135,133,14,"then"],[267,139,129,19],[267,140,133,19],[267,150,133,19,"icon"],[267,154,133,23],[268,0,133,23],[268,63,133,33,"action"],[268,69,133,23],[269,0,133,41,"icon"],[269,26,133,41,"icon"],[269,30,133,45],[269,32,133,41,"icon"],[270,0,133,23],[271,0,133,23],[271,23,129,19],[271,24,129,12],[272,0,134,11],[274,0,135,10],[274,27,135,17,"Promise"],[274,34,135,24],[274,35,135,25,"resolve"],[274,42,135,17],[274,43,135,33,"action"],[274,49,135,17],[274,50,135,10],[275,0,136,9],[275,19,127,8],[275,20,126,35],[275,21,26,2],[277,0,26,2],[278,0,126,12,"updatedActions"],[278,18,126,12,"updatedActions"],[278,32,26,2],[279,0,138,6],[279,23,138,11,"setState"],[279,31,138,6],[279,32,138,20],[280,0,138,22,"actions"],[280,20,138,22,"actions"],[280,27,138,29],[280,29,138,31,"updatedActions"],[281,0,138,20],[281,19,138,6],[283,0,26,2],[284,0,26,2],[285,0,26,2],[286,0,26,2],[287,0,26,2],[288,0,26,2],[289,0,26,2],[290,0,26,2],[291,0,26,2],[292,0,26,2],[292,33,141,13],[293,0,142,6],[293,17,142,13],[293,46,142,14],[293,73,142,13],[293,102,142,33],[293,107,142,38,"props"],[293,112,142,13],[293,114,142,49],[293,119,142,54,"state"],[293,124,142,13],[294,0,142,13],[295,0,142,13],[296,0,142,13],[297,0,142,13],[298,0,142,13],[298,13,142,6],[299,0,143,5],[300,0,26,2],[301,0,26,2],[302,0,26,2],[302,6,26,42,"PureComponent"],[302,26,26,2],[302,36,27,11,"propTypes"],[302,45,26,2],[302,48,27,23],[303,0,28,6,"logoName"],[303,6,28,6,"logoName"],[303,14,28,14],[303,16,28,16,"IconNamePropType"],[303,32,27,23],[304,0,29,6,"navIconName"],[304,6,29,6,"navIconName"],[304,17,29,17],[304,19,29,19,"IconNamePropType"],[304,35,27,23],[305,0,30,6,"overflowIconName"],[305,6,30,6,"overflowIconName"],[305,22,30,22],[305,24,30,24,"IconNamePropType"],[305,40,27,23],[306,0,31,6,"actions"],[306,6,31,6,"actions"],[306,13,31,13],[306,15,31,15,"PropTypes"],[306,34,31,25,"arrayOf"],[306,41,31,15],[306,42,32,8,"PropTypes"],[306,61,32,18,"shape"],[306,66,32,8],[306,67,32,24],[307,0,33,10,"title"],[307,8,33,10,"title"],[307,13,33,15],[307,15,33,17,"PropTypes"],[307,34,33,27,"string"],[307,40,33,17],[307,41,33,34,"isRequired"],[307,51,32,24],[308,0,34,10,"iconName"],[308,8,34,10,"iconName"],[308,16,34,18],[308,18,34,20,"IconNamePropType"],[308,34,32,24],[309,0,35,10,"iconSize"],[309,8,35,10,"iconSize"],[309,16,35,18],[309,18,35,20,"PropTypes"],[309,37,35,30,"number"],[309,43,32,24],[310,0,36,10,"iconColor"],[310,8,36,10,"iconColor"],[310,17,36,19],[310,19,36,21,"PropTypes"],[310,38,36,31,"oneOfType"],[310,47,36,21],[310,48,36,41],[310,49,36,42,"PropTypes"],[310,68,36,52,"string"],[310,74,36,41],[310,76,36,60,"PropTypes"],[310,95,36,70,"number"],[310,101,36,41],[310,102,36,21],[310,103,32,24],[311,0,37,10,"show"],[311,8,37,10,"show"],[311,12,37,14],[311,14,37,16,"PropTypes"],[311,33,37,26,"oneOf"],[311,38,37,16],[311,39,37,32],[311,40,37,33],[311,48,37,32],[311,50,37,43],[311,58,37,32],[311,60,37,53],[311,67,37,32],[311,68,37,16],[311,69,32,24],[312,0,38,10,"showWithText"],[312,8,38,10,"showWithText"],[312,20,38,22],[312,22,38,24,"PropTypes"],[312,41,38,34,"bool"],[313,0,32,24],[313,7,32,8],[313,8,31,15],[313,9,27,23],[314,0,41,6,"iconSize"],[314,6,41,6,"iconSize"],[314,14,41,14],[314,16,41,16,"PropTypes"],[314,35,41,26,"number"],[314,41,27,23],[315,0,42,6,"iconColor"],[315,6,42,6,"iconColor"],[315,15,42,15],[315,17,42,17,"PropTypes"],[315,36,42,27,"oneOfType"],[315,45,42,17],[315,46,42,37],[315,47,42,38,"PropTypes"],[315,66,42,48,"string"],[315,72,42,37],[315,74,42,56,"PropTypes"],[315,93,42,66,"number"],[315,99,42,37],[315,100,42,17],[315,101,27,23],[316,0,43,6,"titleColor"],[316,6,43,6,"titleColor"],[316,16,43,16],[316,18,43,18,"PropTypes"],[316,37,43,28,"oneOfType"],[316,46,43,18],[316,47,43,38],[316,48,43,39,"PropTypes"],[316,67,43,49,"string"],[316,73,43,38],[316,75,43,57,"PropTypes"],[316,94,43,67,"number"],[316,100,43,38],[316,101,43,18],[317,0,27,23],[317,5,26,2],[317,14,46,11,"defaultProps"],[317,26,26,2],[317,29,46,26],[318,0,47,6,"iconSize"],[318,6,47,6,"iconSize"],[318,14,47,14],[318,16,47,16],[319,0,46,26],[319,5,26,2],[320,0,145,1]]},"type":"js/module"}]}