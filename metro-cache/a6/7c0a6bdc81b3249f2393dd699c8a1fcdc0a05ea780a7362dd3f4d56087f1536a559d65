{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"EmitterSubscription","data":{"isAsync":false}},{"name":"EventSubscriptionVendor","data":{"isAsync":false}},{"name":"fbjs/lib/emptyFunction","data":{"isAsync":false}},{"name":"fbjs/lib/invariant","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n\n  var EmitterSubscription = _$$_REQUIRE(_dependencyMap[2], \"EmitterSubscription\");\n\n  var EventSubscriptionVendor = _$$_REQUIRE(_dependencyMap[3], \"EventSubscriptionVendor\");\n\n  var emptyFunction = _$$_REQUIRE(_dependencyMap[4], \"fbjs/lib/emptyFunction\");\n\n  var invariant = _$$_REQUIRE(_dependencyMap[5], \"fbjs/lib/invariant\");\n\n  var EventEmitter = function () {\n    function EventEmitter(subscriber) {\n      _classCallCheck(this, EventEmitter);\n\n      this._subscriber = subscriber || new EventSubscriptionVendor();\n    }\n\n    _createClass(EventEmitter, [{\n      key: \"addListener\",\n      value: function addListener(eventType, listener, context) {\n        return this._subscriber.addSubscription(eventType, new EmitterSubscription(this, this._subscriber, listener, context));\n      }\n    }, {\n      key: \"once\",\n      value: function once(eventType, listener, context) {\n        var _this = this;\n\n        return this.addListener(eventType, function () {\n          _this.removeCurrentListener();\n\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          listener.apply(context, args);\n        });\n      }\n    }, {\n      key: \"removeAllListeners\",\n      value: function removeAllListeners(eventType) {\n        this._subscriber.removeAllSubscriptions(eventType);\n      }\n    }, {\n      key: \"removeCurrentListener\",\n      value: function removeCurrentListener() {\n        invariant(!!this._currentSubscription, 'Not in an emitting cycle; there is no current subscription');\n        this.removeSubscription(this._currentSubscription);\n      }\n    }, {\n      key: \"removeSubscription\",\n      value: function removeSubscription(subscription) {\n        invariant(subscription.emitter === this, 'Subscription does not belong to this emitter.');\n\n        this._subscriber.removeSubscription(subscription);\n      }\n    }, {\n      key: \"listeners\",\n      value: function listeners(eventType) {\n        var subscriptions = this._subscriber.getSubscriptionsForType(eventType);\n\n        return subscriptions ? subscriptions.filter(emptyFunction.thatReturnsTrue).map(function (subscription) {\n          return subscription.listener;\n        }) : [];\n      }\n    }, {\n      key: \"emit\",\n      value: function emit(eventType) {\n        var subscriptions = this._subscriber.getSubscriptionsForType(eventType);\n\n        if (subscriptions) {\n          for (var i = 0, l = subscriptions.length; i < l; i++) {\n            var subscription = subscriptions[i];\n\n            if (subscription) {\n              this._currentSubscription = subscription;\n              subscription.listener.apply(subscription.context, Array.prototype.slice.call(arguments, 1));\n            }\n          }\n\n          this._currentSubscription = null;\n        }\n      }\n    }, {\n      key: \"removeListener\",\n      value: function removeListener(eventType, listener) {\n        var subscriptions = this._subscriber.getSubscriptionsForType(eventType);\n\n        if (subscriptions) {\n          for (var i = 0, l = subscriptions.length; i < l; i++) {\n            var subscription = subscriptions[i];\n\n            if (subscription && subscription.listener === listener) {\n              subscription.remove();\n            }\n          }\n        }\n      }\n    }]);\n\n    return EventEmitter;\n  }();\n\n  module.exports = EventEmitter;\n});","map":[[2,0,12,0],[8,0,14,0],[8,6,14,6,"EmitterSubscription"],[8,25,14,25],[8,28,14,28,"require"],[8,39,14,35],[8,81,14,0],[10,0,15,0],[10,6,15,6,"EventSubscriptionVendor"],[10,29,15,29],[10,32,15,32,"require"],[10,43,15,39],[10,89,15,0],[12,0,17,0],[12,6,17,6,"emptyFunction"],[12,19,17,19],[12,22,17,22,"require"],[12,33,17,29],[12,78,17,0],[14,0,18,0],[14,6,18,6,"invariant"],[14,15,18,15],[14,18,18,18,"require"],[14,29,18,25],[14,70,18,0],[16,6,33,6,"EventEmitter"],[16,18],[17,0,43,2],[17,26,43,14,"subscriber"],[17,36,43,2],[17,38,43,52],[18,0,43,52],[20,0,44,4],[20,11,44,9,"_subscriber"],[20,22,44,4],[20,25,44,23,"subscriber"],[20,35,44,33],[20,39,44,37],[20,43,44,41,"EventSubscriptionVendor"],[20,66,44,37],[20,68,44,4],[21,0,45,3],[25,34,62,4,"eventType"],[25,43],[25,45,63,4,"listener"],[25,53],[25,55,64,4,"context"],[25,62],[25,64,65,25],[26,0,66,4],[26,15,66,12],[26,20,66,17,"_subscriber"],[26,31,66,12],[26,32,66,29,"addSubscription"],[26,47,66,12],[26,48,67,6,"eventType"],[26,57,66,12],[26,59,68,6],[26,63,68,10,"EmitterSubscription"],[26,82,68,6],[26,83,68,30],[26,87,68,6],[26,89,68,36],[26,94,68,41,"_subscriber"],[26,105,68,6],[26,107,68,54,"listener"],[26,115,68,6],[26,117,68,64,"context"],[26,124,68,6],[26,125,66,12],[26,126,66,4],[27,0,70,3],[30,27,83,4,"eventType"],[30,36],[30,38,84,4,"listener"],[30,46],[30,48,85,4,"context"],[30,55],[30,57,86,25],[31,0,86,25],[33,0,87,4],[33,15,87,11],[33,20,87,16,"addListener"],[33,31,87,11],[33,32,87,28,"eventType"],[33,41,87,11],[33,43,87,39],[33,55,87,52],[34,0,88,6],[34,10,88,6],[34,15,88,10],[34,16,88,11,"removeCurrentListener"],[34,37,88,6],[36,0,87,52],[36,44,87,43,"args"],[36,48,87,52],[37,0,87,43,"args"],[37,12,87,43,"args"],[37,16,87,52],[38,0,87,52],[40,0,89,6,"listener"],[40,10,89,6,"listener"],[40,18,89,14],[40,19,89,15,"apply"],[40,24,89,6],[40,25,89,21,"context"],[40,32,89,6],[40,34,89,30,"args"],[40,38,89,6],[41,0,90,5],[41,9,87,11],[41,10,87,4],[42,0,91,3],[45,41,100,21,"eventType"],[45,50],[45,52,100,41],[46,0,101,4],[46,13,101,9,"_subscriber"],[46,24,101,4],[46,25,101,21,"removeAllSubscriptions"],[46,47,101,4],[46,48,101,44,"eventType"],[46,57,101,4],[47,0,102,3],[50,46,125,26],[51,0,126,4,"invariant"],[51,8,126,4,"invariant"],[51,17,126,13],[51,18,127,6],[51,19,127,7],[51,20,127,8],[51,25,127,13,"_currentSubscription"],[51,45,126,13],[51,47,128,6],[51,107,126,13],[51,108,126,4],[52,0,130,4],[52,13,130,9,"removeSubscription"],[52,31,130,4],[52,32,130,28],[52,37,130,33,"_currentSubscription"],[52,57,130,4],[53,0,131,3],[56,41,137,21,"subscription"],[56,53],[56,55,137,56],[57,0,138,4,"invariant"],[57,8,138,4,"invariant"],[57,17,138,13],[57,18,139,6,"subscription"],[57,30,139,18],[57,31,139,19,"emitter"],[57,38,139,6],[57,43,139,31],[57,47,138,13],[57,49,140,6],[57,96,138,13],[57,97,138,4],[59,0,142,4],[59,13,142,9,"_subscriber"],[59,24,142,4],[59,25,142,21,"removeSubscription"],[59,43,142,4],[59,44,142,40,"subscription"],[59,56,142,4],[60,0,143,3],[63,32,152,12,"eventType"],[63,41],[63,43,152,54],[64,0,153,4],[64,12,153,10,"subscriptions"],[64,25,155,5],[64,28,155,9],[64,33,155,14,"_subscriber"],[64,44,155,9],[64,45,155,26,"getSubscriptionsForType"],[64,68,155,9],[64,69,155,50,"eventType"],[64,78,155,9],[64,79,153,4],[66,0,156,4],[66,15,156,11,"subscriptions"],[66,28,156,24],[66,31,157,8,"subscriptions"],[66,44,157,21],[66,45,158,11,"filter"],[66,51,157,8],[66,52,158,18,"emptyFunction"],[66,65,158,31],[66,66,158,32,"thatReturnsTrue"],[66,81,157,8],[66,83,159,11,"map"],[66,86,157,8],[66,87,159,15],[66,97,159,24,"subscription"],[66,109,159,15],[66,111,159,38],[67,0,160,12],[67,17,160,19,"subscription"],[67,29,160,31],[67,30,160,32,"listener"],[67,38,160,12],[68,0,161,11],[68,9,157,8],[68,10,156,24],[68,13,162,8],[68,15,156,4],[69,0,163,3],[72,27,179,7,"eventType"],[72,36],[72,38,179,26],[73,0,180,4],[73,12,180,10,"subscriptions"],[73,25,182,5],[73,28,182,9],[73,33,182,14,"_subscriber"],[73,44,182,9],[73,45,182,26,"getSubscriptionsForType"],[73,68,182,9],[73,69,182,50,"eventType"],[73,78,182,9],[73,79,180,4],[75,0,183,4],[75,12,183,8,"subscriptions"],[75,25,183,4],[75,27,183,23],[76,0,184,6],[76,15,184,11],[76,19,184,15,"i"],[76,20,184,16],[76,23,184,19],[76,24,184,11],[76,26,184,22,"l"],[76,27,184,23],[76,30,184,26,"subscriptions"],[76,43,184,39],[76,44,184,40,"length"],[76,50,184,6],[76,52,184,48,"i"],[76,53,184,49],[76,56,184,52,"l"],[76,57,184,6],[76,59,184,55,"i"],[76,60,184,56],[76,62,184,6],[76,64,184,60],[77,0,185,8],[77,16,185,14,"subscription"],[77,28,185,26],[77,31,185,29,"subscriptions"],[77,44,185,42],[77,45,185,43,"i"],[77,46,185,42],[77,47,185,8],[79,0,188,8],[79,16,188,12,"subscription"],[79,28,188,8],[79,30,188,26],[80,0,189,10],[80,19,189,15,"_currentSubscription"],[80,39,189,10],[80,42,189,38,"subscription"],[80,54,189,10],[81,0,190,10,"subscription"],[81,14,190,10,"subscription"],[81,26,190,22],[81,27,190,23,"listener"],[81,35,190,10],[81,36,190,32,"apply"],[81,41,190,10],[81,42,191,12,"subscription"],[81,54,191,24],[81,55,191,25,"context"],[81,62,190,10],[81,64,192,12,"Array"],[81,69,192,17],[81,70,192,18,"prototype"],[81,79,192,12],[81,80,192,28,"slice"],[81,85,192,12],[81,86,192,34,"call"],[81,90,192,12],[81,91,192,39,"arguments"],[81,100,192,12],[81,102,192,50],[81,103,192,12],[81,104,190,10],[82,0,194,9],[83,0,195,7],[85,0,196,6],[85,15,196,11,"_currentSubscription"],[85,35,196,6],[85,38,196,34],[85,42,196,6],[86,0,197,5],[87,0,198,3],[90,37,213,17,"eventType"],[90,46],[90,48,213,36,"listener"],[90,56],[90,58,213,46],[91,0,214,4],[91,12,214,10,"subscriptions"],[91,25,216,5],[91,28,216,9],[91,33,216,14,"_subscriber"],[91,44,216,9],[91,45,216,26,"getSubscriptionsForType"],[91,68,216,9],[91,69,216,50,"eventType"],[91,78,216,9],[91,79,214,4],[93,0,217,4],[93,12,217,8,"subscriptions"],[93,25,217,4],[93,27,217,23],[94,0,218,6],[94,15,218,11],[94,19,218,15,"i"],[94,20,218,16],[94,23,218,19],[94,24,218,11],[94,26,218,22,"l"],[94,27,218,23],[94,30,218,26,"subscriptions"],[94,43,218,39],[94,44,218,40,"length"],[94,50,218,6],[94,52,218,48,"i"],[94,53,218,49],[94,56,218,52,"l"],[94,57,218,6],[94,59,218,55,"i"],[94,60,218,56],[94,62,218,6],[94,64,218,60],[95,0,219,8],[95,16,219,14,"subscription"],[95,28,219,26],[95,31,219,29,"subscriptions"],[95,44,219,42],[95,45,219,43,"i"],[95,46,219,42],[95,47,219,8],[97,0,223,8],[97,16,223,12,"subscription"],[97,28,223,24],[97,32,223,28,"subscription"],[97,44,223,40],[97,45,223,41,"listener"],[97,53,223,28],[97,58,223,54,"listener"],[97,66,223,8],[97,68,223,64],[98,0,224,10,"subscription"],[98,14,224,10,"subscription"],[98,26,224,22],[98,27,224,23,"remove"],[98,33,224,10],[99,0,225,9],[100,0,226,7],[101,0,227,5],[102,0,228,3],[108,0,231,0,"module"],[108,2,231,0,"module"],[108,8,231,6],[108,9,231,7,"exports"],[108,16,231,0],[108,19,231,17,"EventEmitter"],[108,31,231,0]]},"type":"js/module"}]}