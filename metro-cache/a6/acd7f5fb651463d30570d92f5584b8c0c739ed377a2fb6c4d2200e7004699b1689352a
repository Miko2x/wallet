{"dependencies":[{"name":"symbolicateStackTrace","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var symbolicateStackTrace = _$$_REQUIRE(_dependencyMap[0], \"symbolicateStackTrace\");\n\n  var cache = new Map();\n  var YellowBoxSymbolication = {\n    symbolicate: function symbolicate(stack) {\n      var key = getCacheKey(stack);\n      var promise = cache.get(key);\n\n      if (promise == null) {\n        promise = symbolicateStackTrace(stack).then(sanitize);\n        cache.set(key, promise);\n      }\n\n      return promise;\n    }\n  };\n\n  var getCacheKey = function getCacheKey(stack) {\n    return JSON.stringify(stack);\n  };\n\n  var sanitize = function sanitize(maybeStack) {\n    if (!Array.isArray(maybeStack)) {\n      throw new Error('Expected stack to be an array.');\n    }\n\n    var stack = [];\n\n    for (var _iterator = maybeStack, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var _maybeFrame = _ref;\n\n      if (typeof _maybeFrame !== 'object' || _maybeFrame == null) {\n        throw new Error('Expected each stack frame to be an object.');\n      }\n\n      if (typeof _maybeFrame.column !== 'number' && _maybeFrame.column != null) {\n        throw new Error('Expected stack frame `column` to be a nullable number.');\n      }\n\n      if (typeof _maybeFrame.file !== 'string') {\n        throw new Error('Expected stack frame `file` to be a string.');\n      }\n\n      if (typeof _maybeFrame.lineNumber !== 'number') {\n        throw new Error('Expected stack frame `lineNumber` to be a number.');\n      }\n\n      if (typeof _maybeFrame.methodName !== 'string') {\n        throw new Error('Expected stack frame `methodName` to be a string.');\n      }\n\n      stack.push({\n        column: _maybeFrame.column,\n        file: _maybeFrame.file,\n        lineNumber: _maybeFrame.lineNumber,\n        methodName: _maybeFrame.methodName\n      });\n    }\n\n    return stack;\n  };\n\n  module.exports = YellowBoxSymbolication;\n});","map":[[2,0,11,0],[4,0,13,0],[4,6,13,6,"symbolicateStackTrace"],[4,27,13,27],[4,30,13,30,"require"],[4,41,13,37],[4,85,13,0],[6,0,21,0],[6,6,21,6,"cache"],[6,11,21,42],[6,14,21,45],[6,18,21,49,"Map"],[6,21,21,45],[6,23,21,0],[7,0,23,0],[7,6,23,6,"YellowBoxSymbolication"],[7,28,23,28],[7,31,23,31],[8,0,24,2,"symbolicate"],[8,4,24,2,"symbolicate"],[8,15,23,31],[8,38,24,14,"stack"],[8,43,23,31],[8,45,24,44],[9,0,25,4],[9,10,25,10,"key"],[9,13,25,13],[9,16,25,16,"getCacheKey"],[9,27,25,27],[9,28,25,28,"stack"],[9,33,25,27],[9,34,25,4],[10,0,27,4],[10,10,27,8,"promise"],[10,17,27,15],[10,20,27,18,"cache"],[10,25,27,23],[10,26,27,24,"get"],[10,29,27,18],[10,30,27,28,"key"],[10,33,27,18],[10,34,27,4],[12,0,28,4],[12,10,28,8,"promise"],[12,17,28,15],[12,21,28,19],[12,25,28,4],[12,27,28,25],[13,0,29,6,"promise"],[13,8,29,6,"promise"],[13,15,29,13],[13,18,29,16,"symbolicateStackTrace"],[13,39,29,37],[13,40,29,38,"stack"],[13,45,29,37],[13,46,29,16],[13,47,29,45,"then"],[13,51,29,16],[13,52,29,50,"sanitize"],[13,60,29,16],[13,61,29,6],[14,0,30,6,"cache"],[14,8,30,6,"cache"],[14,13,30,11],[14,14,30,12,"set"],[14,17,30,6],[14,18,30,16,"key"],[14,21,30,6],[14,23,30,21,"promise"],[14,30,30,6],[15,0,31,5],[17,0,33,4],[17,13,33,11,"promise"],[17,20,33,4],[18,0,34,3],[19,0,23,31],[19,3,23,0],[21,0,37,0],[21,6,37,6,"getCacheKey"],[21,17,37,17],[21,20,37,20],[21,29,37,6,"getCacheKey"],[21,40,37,20],[21,41,37,21,"stack"],[21,46,37,20],[21,48,37,48],[22,0,38,2],[22,11,38,9,"JSON"],[22,15,38,13],[22,16,38,14,"stringify"],[22,25,38,9],[22,26,38,24,"stack"],[22,31,38,9],[22,32,38,2],[23,0,39,1],[23,3,37,0],[25,0,44,0],[25,6,44,6,"sanitize"],[25,14,44,14],[25,17,44,17],[25,26,44,6,"sanitize"],[25,34,44,17],[25,35,44,18,"maybeStack"],[25,45,44,17],[25,47,44,47],[26,0,45,2],[26,8,45,6],[26,9,45,7,"Array"],[26,14,45,12],[26,15,45,13,"isArray"],[26,22,45,7],[26,23,45,21,"maybeStack"],[26,33,45,7],[26,34,45,2],[26,36,45,34],[27,0,46,4],[27,12,46,10],[27,16,46,14,"Error"],[27,21,46,10],[27,22,46,20],[27,54,46,10],[27,55,46,4],[28,0,47,3],[30,0,48,2],[30,8,48,8,"stack"],[30,13,48,13],[30,16,48,16],[30,18,48,2],[32,0,49,2],[32,25,49,27,"maybeStack"],[32,35,49,2],[32,195,49,39],[33,0,49,39],[35,0,49,39],[36,0,49,39],[37,0,49,39],[38,0,49,39],[39,0,49,39],[40,0,49,39],[41,0,49,39],[42,0,49,39],[44,0,49,39],[44,10,49,13,"maybeFrame"],[44,21,49,39],[46,0,50,4],[46,10,50,8],[46,17,50,15,"maybeFrame"],[46,28,50,8],[46,33,50,30],[46,41,50,8],[46,45,50,42,"maybeFrame"],[46,56,50,52],[46,60,50,56],[46,64,50,4],[46,66,50,62],[47,0,51,6],[47,14,51,12],[47,18,51,16,"Error"],[47,23,51,12],[47,24,51,22],[47,68,51,12],[47,69,51,6],[48,0,52,5],[50,0,53,4],[50,10,53,8],[50,17,53,15,"maybeFrame"],[50,28,53,25],[50,29,53,26,"column"],[50,35,53,8],[50,40,53,37],[50,48,53,8],[50,52,53,49,"maybeFrame"],[50,63,53,59],[50,64,53,60,"column"],[50,70,53,49],[50,74,53,70],[50,78,53,4],[50,80,53,76],[51,0,54,6],[51,14,54,12],[51,18,54,16,"Error"],[51,23,54,12],[51,24,54,22],[51,80,54,12],[51,81,54,6],[52,0,55,5],[54,0,56,4],[54,10,56,8],[54,17,56,15,"maybeFrame"],[54,28,56,25],[54,29,56,26,"file"],[54,33,56,8],[54,38,56,35],[54,46,56,4],[54,48,56,45],[55,0,57,6],[55,14,57,12],[55,18,57,16,"Error"],[55,23,57,12],[55,24,57,22],[55,69,57,12],[55,70,57,6],[56,0,58,5],[58,0,59,4],[58,10,59,8],[58,17,59,15,"maybeFrame"],[58,28,59,25],[58,29,59,26,"lineNumber"],[58,39,59,8],[58,44,59,41],[58,52,59,4],[58,54,59,51],[59,0,60,6],[59,14,60,12],[59,18,60,16,"Error"],[59,23,60,12],[59,24,60,22],[59,75,60,12],[59,76,60,6],[60,0,61,5],[62,0,62,4],[62,10,62,8],[62,17,62,15,"maybeFrame"],[62,28,62,25],[62,29,62,26,"methodName"],[62,39,62,8],[62,44,62,41],[62,52,62,4],[62,54,62,51],[63,0,63,6],[63,14,63,12],[63,18,63,16,"Error"],[63,23,63,12],[63,24,63,22],[63,75,63,12],[63,76,63,6],[64,0,64,5],[66,0,65,4,"stack"],[66,6,65,4,"stack"],[66,11,65,9],[66,12,65,10,"push"],[66,16,65,4],[66,17,65,15],[67,0,66,6,"column"],[67,8,66,6,"column"],[67,14,66,12],[67,16,66,14,"maybeFrame"],[67,27,66,24],[67,28,66,25,"column"],[67,34,65,15],[68,0,67,6,"file"],[68,8,67,6,"file"],[68,12,67,10],[68,14,67,12,"maybeFrame"],[68,25,67,22],[68,26,67,23,"file"],[68,30,65,15],[69,0,68,6,"lineNumber"],[69,8,68,6,"lineNumber"],[69,18,68,16],[69,20,68,18,"maybeFrame"],[69,31,68,28],[69,32,68,29,"lineNumber"],[69,42,65,15],[70,0,69,6,"methodName"],[70,8,69,6,"methodName"],[70,18,69,16],[70,20,69,18,"maybeFrame"],[70,31,69,28],[70,32,69,29,"methodName"],[71,0,65,15],[71,7,65,4],[72,0,71,3],[74,0,72,2],[74,11,72,9,"stack"],[74,16,72,2],[75,0,73,1],[75,3,44,0],[77,0,75,0,"module"],[77,2,75,0,"module"],[77,8,75,6],[77,9,75,7,"exports"],[77,16,75,0],[77,19,75,17,"YellowBoxSymbolication"],[77,41,75,0]]},"type":"js/module"}]}