{"dependencies":[{"name":"../../grammar-error","data":{"isAsync":false}},{"name":"../asts","data":{"isAsync":false}},{"name":"../visitor","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var GrammarError = _$$_REQUIRE(_dependencyMap[0], \"../../grammar-error\"),\n      asts = _$$_REQUIRE(_dependencyMap[1], \"../asts\"),\n      visitor = _$$_REQUIRE(_dependencyMap[2], \"../visitor\");\n\n  function reportInfiniteRepetition(ast) {\n    var check = visitor.build({\n      zero_or_more: function zero_or_more(node) {\n        if (!asts.alwaysConsumesOnSuccess(ast, node.expression)) {\n          throw new GrammarError(\"Possible infinite loop when parsing (repetition used with an expression that may not consume any input).\", node.location);\n        }\n      },\n      one_or_more: function one_or_more(node) {\n        if (!asts.alwaysConsumesOnSuccess(ast, node.expression)) {\n          throw new GrammarError(\"Possible infinite loop when parsing (repetition used with an expression that may not consume any input).\", node.location);\n        }\n      }\n    });\n    check(ast);\n  }\n\n  module.exports = reportInfiniteRepetition;\n});","map":[[2,0,1,0],[4,0,3,0],[4,6,3,4,"GrammarError"],[4,18,3,16],[4,21,3,19,"require"],[4,32,3,26],[4,74,3,0],[5,0,3,0],[5,6,4,4,"asts"],[5,10,4,8],[5,13,4,19,"require"],[5,24,4,26],[5,54,3,0],[6,0,3,0],[6,6,5,4,"visitor"],[6,13,5,11],[6,16,5,19,"require"],[6,27,5,26],[6,60,3,0],[8,0,11,0],[8,11,11,9,"reportInfiniteRepetition"],[8,35,11,0],[8,36,11,34,"ast"],[8,39,11,0],[8,41,11,39],[9,0,12,2],[9,8,12,6,"check"],[9,13,12,11],[9,16,12,14,"visitor"],[9,23,12,21],[9,24,12,22,"build"],[9,29,12,14],[9,30,12,28],[10,0,13,4,"zero_or_more"],[10,6,13,4,"zero_or_more"],[10,18,13,16],[10,20,13,18],[10,42,13,27,"node"],[10,46,13,18],[10,48,13,33],[11,0,14,6],[11,12,14,10],[11,13,14,11,"asts"],[11,17,14,15],[11,18,14,16,"alwaysConsumesOnSuccess"],[11,41,14,11],[11,42,14,40,"ast"],[11,45,14,11],[11,47,14,45,"node"],[11,51,14,49],[11,52,14,50,"expression"],[11,62,14,11],[11,63,14,6],[11,65,14,63],[12,0,15,8],[12,16,15,14],[12,20,15,18,"GrammarError"],[12,32,15,14],[12,33,16,10],[12,139,15,14],[12,141,17,10,"node"],[12,145,17,14],[12,146,17,15,"location"],[12,154,15,14],[12,155,15,8],[13,0,19,7],[14,0,20,5],[14,7,12,28],[15,0,22,4,"one_or_more"],[15,6,22,4,"one_or_more"],[15,17,22,15],[15,19,22,17],[15,40,22,26,"node"],[15,44,22,17],[15,46,22,32],[16,0,23,6],[16,12,23,10],[16,13,23,11,"asts"],[16,17,23,15],[16,18,23,16,"alwaysConsumesOnSuccess"],[16,41,23,11],[16,42,23,40,"ast"],[16,45,23,11],[16,47,23,45,"node"],[16,51,23,49],[16,52,23,50,"expression"],[16,62,23,11],[16,63,23,6],[16,65,23,63],[17,0,24,8],[17,16,24,14],[17,20,24,18,"GrammarError"],[17,32,24,14],[17,33,25,10],[17,139,24,14],[17,141,26,10,"node"],[17,145,26,14],[17,146,26,15,"location"],[17,154,24,14],[17,155,24,8],[18,0,28,7],[19,0,29,5],[20,0,12,28],[20,5,12,14],[20,6,12,2],[21,0,32,2,"check"],[21,4,32,2,"check"],[21,9,32,7],[21,10,32,8,"ast"],[21,13,32,7],[21,14,32,2],[22,0,33,1],[24,0,35,0,"module"],[24,2,35,0,"module"],[24,8,35,6],[24,9,35,7,"exports"],[24,16,35,0],[24,19,35,17,"reportInfiniteRepetition"],[24,43,35,0]]},"type":"js/module"}]}