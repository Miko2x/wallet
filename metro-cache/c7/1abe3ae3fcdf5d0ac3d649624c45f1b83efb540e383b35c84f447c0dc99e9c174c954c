{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var NEWTON_ITERATIONS = 4;\n  var NEWTON_MIN_SLOPE = 0.001;\n  var SUBDIVISION_PRECISION = 0.0000001;\n  var SUBDIVISION_MAX_ITERATIONS = 10;\n  var kSplineTableSize = 11;\n  var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n  var float32ArraySupported = typeof Float32Array === 'function';\n\n  function A(aA1, aA2) {\n    return 1.0 - 3.0 * aA2 + 3.0 * aA1;\n  }\n\n  function B(aA1, aA2) {\n    return 3.0 * aA2 - 6.0 * aA1;\n  }\n\n  function C(aA1) {\n    return 3.0 * aA1;\n  }\n\n  function calcBezier(aT, aA1, aA2) {\n    return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n  }\n\n  function getSlope(aT, aA1, aA2) {\n    return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n  }\n\n  function binarySubdivide(aX, aA, aB, mX1, mX2) {\n    var currentX,\n        currentT,\n        i = 0;\n\n    do {\n      currentT = aA + (aB - aA) / 2.0;\n      currentX = calcBezier(currentT, mX1, mX2) - aX;\n\n      if (currentX > 0.0) {\n        aB = currentT;\n      } else {\n        aA = currentT;\n      }\n    } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n\n    return currentT;\n  }\n\n  function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n    for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n      var currentSlope = getSlope(aGuessT, mX1, mX2);\n\n      if (currentSlope === 0.0) {\n        return aGuessT;\n      }\n\n      var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n      aGuessT -= currentX / currentSlope;\n    }\n\n    return aGuessT;\n  }\n\n  module.exports = function bezier(mX1, mY1, mX2, mY2) {\n    if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) {\n      throw new Error('bezier x values must be in [0, 1] range');\n    }\n\n    var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n\n    if (mX1 !== mY1 || mX2 !== mY2) {\n      for (var i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n      }\n    }\n\n    function getTForX(aX) {\n      var intervalStart = 0.0;\n      var currentSample = 1;\n      var lastSample = kSplineTableSize - 1;\n\n      for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n        intervalStart += kSampleStepSize;\n      }\n\n      --currentSample;\n      var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n      var guessForT = intervalStart + dist * kSampleStepSize;\n      var initialSlope = getSlope(guessForT, mX1, mX2);\n\n      if (initialSlope >= NEWTON_MIN_SLOPE) {\n        return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n      } else if (initialSlope === 0.0) {\n        return guessForT;\n      } else {\n        return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n      }\n    }\n\n    return function BezierEasing(x) {\n      if (mX1 === mY1 && mX2 === mY2) {\n        return x;\n      }\n\n      if (x === 0) {\n        return 0;\n      }\n\n      if (x === 1) {\n        return 1;\n      }\n\n      return calcBezier(getTForX(x), mY1, mY2);\n    };\n  };\n});","map":[[2,0,10,0],[4,0,13,0],[4,6,13,6,"NEWTON_ITERATIONS"],[4,23,13,23],[4,26,13,26],[4,27,13,0],[5,0,14,0],[5,6,14,6,"NEWTON_MIN_SLOPE"],[5,22,14,22],[5,25,14,25],[5,30,14,0],[6,0,15,0],[6,6,15,6,"SUBDIVISION_PRECISION"],[6,27,15,27],[6,30,15,30],[6,39,15,0],[7,0,16,0],[7,6,16,6,"SUBDIVISION_MAX_ITERATIONS"],[7,32,16,32],[7,35,16,35],[7,37,16,0],[8,0,18,0],[8,6,18,6,"kSplineTableSize"],[8,22,18,22],[8,25,18,25],[8,27,18,0],[9,0,19,0],[9,6,19,6,"kSampleStepSize"],[9,21,19,21],[9,24,19,24],[9,31,19,31,"kSplineTableSize"],[9,47,19,47],[9,50,19,50],[9,53,19,24],[9,54,19,0],[10,0,21,0],[10,6,21,6,"float32ArraySupported"],[10,27,21,27],[10,30,21,30],[10,37,21,37,"Float32Array"],[10,49,21,30],[10,54,21,54],[10,64,21,0],[12,0,23,0],[12,11,23,9,"A"],[12,12,23,0],[12,13,23,11,"aA1"],[12,16,23,0],[12,18,23,16,"aA2"],[12,21,23,0],[12,23,23,21],[13,0,24,2],[13,11,24,9],[13,17,24,15],[13,23,24,21,"aA2"],[13,26,24,9],[13,29,24,27],[13,35,24,33,"aA1"],[13,38,24,2],[14,0,25,1],[16,0,26,0],[16,11,26,9,"B"],[16,12,26,0],[16,13,26,11,"aA1"],[16,16,26,0],[16,18,26,16,"aA2"],[16,21,26,0],[16,23,26,21],[17,0,27,2],[17,11,27,9],[17,17,27,15,"aA2"],[17,20,27,9],[17,23,27,21],[17,29,27,27,"aA1"],[17,32,27,2],[18,0,28,1],[20,0,29,0],[20,11,29,9,"C"],[20,12,29,0],[20,13,29,11,"aA1"],[20,16,29,0],[20,18,29,16],[21,0,30,2],[21,11,30,9],[21,17,30,15,"aA1"],[21,20,30,2],[22,0,31,1],[24,0,34,0],[24,11,34,9,"calcBezier"],[24,21,34,0],[24,22,34,20,"aT"],[24,24,34,0],[24,26,34,24,"aA1"],[24,29,34,0],[24,31,34,29,"aA2"],[24,34,34,0],[24,36,34,34],[25,0,35,2],[25,11,35,9],[25,12,35,10],[25,13,35,11,"A"],[25,14,35,12],[25,15,35,13,"aA1"],[25,18,35,12],[25,20,35,18,"aA2"],[25,23,35,12],[25,24,35,11],[25,27,35,25,"aT"],[25,29,35,11],[25,32,35,30,"B"],[25,33,35,31],[25,34,35,32,"aA1"],[25,37,35,31],[25,39,35,37,"aA2"],[25,42,35,31],[25,43,35,10],[25,47,35,45,"aT"],[25,49,35,10],[25,52,35,50,"C"],[25,53,35,51],[25,54,35,52,"aA1"],[25,57,35,51],[25,58,35,9],[25,62,35,60,"aT"],[25,64,35,2],[26,0,36,1],[28,0,39,0],[28,11,39,9,"getSlope"],[28,19,39,0],[28,20,39,18,"aT"],[28,22,39,0],[28,24,39,22,"aA1"],[28,27,39,0],[28,29,39,27,"aA2"],[28,32,39,0],[28,34,39,32],[29,0,40,2],[29,11,40,9],[29,17,40,15,"A"],[29,18,40,16],[29,19,40,17,"aA1"],[29,22,40,16],[29,24,40,22,"aA2"],[29,27,40,16],[29,28,40,9],[29,31,40,29,"aT"],[29,33,40,9],[29,36,40,34,"aT"],[29,38,40,9],[29,41,40,39],[29,47,40,45,"B"],[29,48,40,46],[29,49,40,47,"aA1"],[29,52,40,46],[29,54,40,52,"aA2"],[29,57,40,46],[29,58,40,39],[29,61,40,59,"aT"],[29,63,40,9],[29,66,40,64,"C"],[29,67,40,65],[29,68,40,66,"aA1"],[29,71,40,65],[29,72,40,2],[30,0,41,1],[32,0,43,0],[32,11,43,9,"binarySubdivide"],[32,26,43,0],[32,27,43,25,"aX"],[32,29,43,0],[32,31,43,29,"aA"],[32,33,43,0],[32,35,43,33,"aB"],[32,37,43,0],[32,39,43,37,"mX1"],[32,42,43,0],[32,44,43,42,"mX2"],[32,47,43,0],[32,49,43,47],[33,0,44,2],[33,8,44,6,"currentX"],[33,16,44,2],[34,0,44,2],[34,8,45,4,"currentT"],[34,16,44,2],[35,0,44,2],[35,8,46,4,"i"],[35,9,46,5],[35,12,46,8],[35,13,44,2],[37,0,47,2],[37,7,47,5],[38,0,48,4,"currentT"],[38,6,48,4,"currentT"],[38,14,48,12],[38,17,48,15,"aA"],[38,19,48,17],[38,22,48,20],[38,23,48,21,"aB"],[38,25,48,23],[38,28,48,26,"aA"],[38,30,48,20],[38,34,48,32],[38,37,48,4],[39,0,49,4,"currentX"],[39,6,49,4,"currentX"],[39,14,49,12],[39,17,49,15,"calcBezier"],[39,27,49,25],[39,28,49,26,"currentT"],[39,36,49,25],[39,38,49,36,"mX1"],[39,41,49,25],[39,43,49,41,"mX2"],[39,46,49,25],[39,47,49,15],[39,50,49,48,"aX"],[39,52,49,4],[41,0,50,4],[41,10,50,8,"currentX"],[41,18,50,16],[41,21,50,19],[41,24,50,4],[41,26,50,24],[42,0,51,6,"aB"],[42,8,51,6,"aB"],[42,10,51,8],[42,13,51,11,"currentT"],[42,21,51,6],[43,0,52,5],[43,7,50,4],[43,13,52,11],[44,0,53,6,"aA"],[44,8,53,6,"aA"],[44,10,53,8],[44,13,53,11,"currentT"],[44,21,53,6],[45,0,54,5],[46,0,55,3],[46,5,47,2],[46,13,56,4,"Math"],[46,17,56,8],[46,18,56,9,"abs"],[46,21,56,4],[46,22,56,13,"currentX"],[46,30,56,4],[46,34,56,25,"SUBDIVISION_PRECISION"],[46,55,56,4],[46,59,57,4],[46,61,57,6,"i"],[46,62,57,4],[46,65,57,10,"SUBDIVISION_MAX_ITERATIONS"],[46,91,47,2],[48,0,59,2],[48,11,59,9,"currentT"],[48,19,59,2],[49,0,60,1],[51,0,62,0],[51,11,62,9,"newtonRaphsonIterate"],[51,31,62,0],[51,32,62,30,"aX"],[51,34,62,0],[51,36,62,34,"aGuessT"],[51,43,62,0],[51,45,62,43,"mX1"],[51,48,62,0],[51,50,62,48,"mX2"],[51,53,62,0],[51,55,62,53],[52,0,63,2],[52,9,63,7],[52,13,63,11,"i"],[52,14,63,12],[52,17,63,15],[52,18,63,2],[52,20,63,18,"i"],[52,21,63,19],[52,24,63,22,"NEWTON_ITERATIONS"],[52,41,63,2],[52,43,63,41],[52,45,63,43,"i"],[52,46,63,2],[52,48,63,46],[53,0,64,4],[53,10,64,10,"currentSlope"],[53,22,64,22],[53,25,64,25,"getSlope"],[53,33,64,33],[53,34,64,34,"aGuessT"],[53,41,64,33],[53,43,64,43,"mX1"],[53,46,64,33],[53,48,64,48,"mX2"],[53,51,64,33],[53,52,64,4],[55,0,65,4],[55,10,65,8,"currentSlope"],[55,22,65,20],[55,27,65,25],[55,30,65,4],[55,32,65,30],[56,0,66,6],[56,15,66,13,"aGuessT"],[56,22,66,6],[57,0,67,5],[59,0,68,4],[59,10,68,10,"currentX"],[59,18,68,18],[59,21,68,21,"calcBezier"],[59,31,68,31],[59,32,68,32,"aGuessT"],[59,39,68,31],[59,41,68,41,"mX1"],[59,44,68,31],[59,46,68,46,"mX2"],[59,49,68,31],[59,50,68,21],[59,53,68,53,"aX"],[59,55,68,4],[60,0,69,4,"aGuessT"],[60,6,69,4,"aGuessT"],[60,13,69,11],[60,17,69,15,"currentX"],[60,25,69,23],[60,28,69,26,"currentSlope"],[60,40,69,4],[61,0,70,3],[63,0,71,2],[63,11,71,9,"aGuessT"],[63,18,71,2],[64,0,72,1],[66,0,74,0,"module"],[66,2,74,0,"module"],[66,8,74,6],[66,9,74,7,"exports"],[66,16,74,0],[66,19,74,17],[66,28,74,26,"bezier"],[66,34,74,17],[66,35,75,2,"mX1"],[66,38,74,17],[66,40,76,2,"mY1"],[66,43,74,17],[66,45,77,2,"mX2"],[66,48,74,17],[66,50,78,2,"mY2"],[66,53,74,17],[66,55,79,2],[67,0,80,2],[67,8,80,6],[67,10,80,8],[67,15,80,13,"mX1"],[67,18,80,8],[67,22,80,20,"mX1"],[67,25,80,23],[67,29,80,27],[67,30,80,8],[67,34,80,32],[67,39,80,37,"mX2"],[67,42,80,8],[67,46,80,44,"mX2"],[67,49,80,47],[67,53,80,51],[67,54,80,6],[67,55,80,2],[67,57,80,55],[68,0,81,4],[68,12,81,10],[68,16,81,14,"Error"],[68,21,81,10],[68,22,81,20],[68,63,81,10],[68,64,81,4],[69,0,82,3],[71,0,85,2],[71,8,85,8,"sampleValues"],[71,20,85,20],[71,23,85,23,"float32ArraySupported"],[71,44,85,44],[71,47,86,6],[71,51,86,10,"Float32Array"],[71,63,86,6],[71,64,86,23,"kSplineTableSize"],[71,80,86,6],[71,81,85,44],[71,84,87,6],[71,88,87,10,"Array"],[71,93,87,6],[71,94,87,16,"kSplineTableSize"],[71,110,87,6],[71,111,85,2],[73,0,88,2],[73,8,88,6,"mX1"],[73,11,88,9],[73,16,88,14,"mY1"],[73,19,88,6],[73,23,88,21,"mX2"],[73,26,88,24],[73,31,88,29,"mY2"],[73,34,88,2],[73,36,88,34],[74,0,89,4],[74,11,89,9],[74,15,89,13,"i"],[74,16,89,14],[74,19,89,17],[74,20,89,4],[74,22,89,20,"i"],[74,23,89,21],[74,26,89,24,"kSplineTableSize"],[74,42,89,4],[74,44,89,42],[74,46,89,44,"i"],[74,47,89,4],[74,49,89,47],[75,0,90,6,"sampleValues"],[75,8,90,6,"sampleValues"],[75,20,90,18],[75,21,90,19,"i"],[75,22,90,18],[75,23,90,6],[75,26,90,24,"calcBezier"],[75,36,90,34],[75,37,90,35,"i"],[75,38,90,36],[75,41,90,39,"kSampleStepSize"],[75,56,90,34],[75,58,90,56,"mX1"],[75,61,90,34],[75,63,90,61,"mX2"],[75,66,90,34],[75,67,90,6],[76,0,91,5],[77,0,92,3],[79,0,94,2],[79,13,94,11,"getTForX"],[79,21,94,2],[79,22,94,20,"aX"],[79,24,94,2],[79,26,94,24],[80,0,95,4],[80,10,95,8,"intervalStart"],[80,23,95,21],[80,26,95,24],[80,29,95,4],[81,0,96,4],[81,10,96,8,"currentSample"],[81,23,96,21],[81,26,96,24],[81,27,96,4],[82,0,97,4],[82,10,97,10,"lastSample"],[82,20,97,20],[82,23,97,23,"kSplineTableSize"],[82,39,97,39],[82,42,97,42],[82,43,97,4],[84,0,99,4],[84,13,101,6,"currentSample"],[84,26,101,19],[84,31,101,24,"lastSample"],[84,41,101,6],[84,45,101,38,"sampleValues"],[84,57,101,50],[84,58,101,51,"currentSample"],[84,71,101,50],[84,72,101,38],[84,76,101,69,"aX"],[84,78,99,4],[84,80,102,6],[84,82,102,8,"currentSample"],[84,95,99,4],[84,97,103,6],[85,0,104,6,"intervalStart"],[85,8,104,6,"intervalStart"],[85,21,104,19],[85,25,104,23,"kSampleStepSize"],[85,40,104,6],[86,0,105,5],[88,0,106,4],[88,8,106,6,"currentSample"],[88,21,106,4],[89,0,109,4],[89,10,109,10,"dist"],[89,14,109,14],[89,17,110,6],[89,18,110,7,"aX"],[89,20,110,9],[89,23,110,12,"sampleValues"],[89,35,110,24],[89,36,110,25,"currentSample"],[89,49,110,24],[89,50,110,6],[89,55,111,7,"sampleValues"],[89,67,111,19],[89,68,111,20,"currentSample"],[89,81,111,33],[89,84,111,36],[89,85,111,19],[89,86,111,7],[89,89,111,41,"sampleValues"],[89,101,111,53],[89,102,111,54,"currentSample"],[89,115,111,53],[89,116,110,6],[89,117,109,4],[90,0,112,4],[90,10,112,10,"guessForT"],[90,19,112,19],[90,22,112,22,"intervalStart"],[90,35,112,35],[90,38,112,38,"dist"],[90,42,112,42],[90,45,112,45,"kSampleStepSize"],[90,60,112,4],[91,0,114,4],[91,10,114,10,"initialSlope"],[91,22,114,22],[91,25,114,25,"getSlope"],[91,33,114,33],[91,34,114,34,"guessForT"],[91,43,114,33],[91,45,114,45,"mX1"],[91,48,114,33],[91,50,114,50,"mX2"],[91,53,114,33],[91,54,114,4],[93,0,115,4],[93,10,115,8,"initialSlope"],[93,22,115,20],[93,26,115,24,"NEWTON_MIN_SLOPE"],[93,42,115,4],[93,44,115,42],[94,0,116,6],[94,15,116,13,"newtonRaphsonIterate"],[94,35,116,33],[94,36,116,34,"aX"],[94,38,116,33],[94,40,116,38,"guessForT"],[94,49,116,33],[94,51,116,49,"mX1"],[94,54,116,33],[94,56,116,54,"mX2"],[94,59,116,33],[94,60,116,6],[95,0,117,5],[95,7,115,4],[95,13,117,11],[95,17,117,15,"initialSlope"],[95,29,117,27],[95,34,117,32],[95,37,117,11],[95,39,117,37],[96,0,118,6],[96,15,118,13,"guessForT"],[96,24,118,6],[97,0,119,5],[97,7,117,11],[97,13,119,11],[98,0,120,6],[98,15,120,13,"binarySubdivide"],[98,30,120,28],[98,31,121,8,"aX"],[98,33,120,28],[98,35,122,8,"intervalStart"],[98,48,120,28],[98,50,123,8,"intervalStart"],[98,63,123,21],[98,66,123,24,"kSampleStepSize"],[98,81,120,28],[98,83,124,8,"mX1"],[98,86,120,28],[98,88,125,8,"mX2"],[98,91,120,28],[98,92,120,6],[99,0,127,5],[100,0,128,3],[102,0,130,2],[102,11,130,9],[102,20,130,18,"BezierEasing"],[102,32,130,9],[102,33,130,31,"x"],[102,34,130,9],[102,36,130,50],[103,0,131,4],[103,10,131,8,"mX1"],[103,13,131,11],[103,18,131,16,"mY1"],[103,21,131,8],[103,25,131,23,"mX2"],[103,28,131,26],[103,33,131,31,"mY2"],[103,36,131,4],[103,38,131,36],[104,0,132,6],[104,15,132,13,"x"],[104,16,132,6],[105,0,133,5],[107,0,135,4],[107,10,135,8,"x"],[107,11,135,9],[107,16,135,14],[107,17,135,4],[107,19,135,17],[108,0,136,6],[108,15,136,13],[108,16,136,6],[109,0,137,5],[111,0,138,4],[111,10,138,8,"x"],[111,11,138,9],[111,16,138,14],[111,17,138,4],[111,19,138,17],[112,0,139,6],[112,15,139,13],[112,16,139,6],[113,0,140,5],[115,0,141,4],[115,13,141,11,"calcBezier"],[115,23,141,21],[115,24,141,22,"getTForX"],[115,32,141,30],[115,33,141,31,"x"],[115,34,141,30],[115,35,141,21],[115,37,141,35,"mY1"],[115,40,141,21],[115,42,141,40,"mY2"],[115,45,141,21],[115,46,141,4],[116,0,142,3],[116,5,130,2],[117,0,143,1],[117,3,74,0]]},"type":"js/module"}]}