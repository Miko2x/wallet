{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useScreens = useScreens;\n  exports.screensEnabled = screensEnabled;\n  exports.ScreenContainer = exports.Screen = exports.NativeScreenContainer = exports.NativeScreen = void 0;\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/extends\"));\n\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectWithoutProperties\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./../../react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[10], \"react-native\");\n\n  var _jsxFileName = \"/home/miko/Wallet/node_modules/react-native-screens/src/screens.native.js\";\n  var _components = {\n    Screen: {\n      displayName: \"Screen\"\n    },\n    ScreenContainer: {\n      displayName: \"ScreenContainer\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/miko/Wallet/node_modules/react-native-screens/src/screens.native.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var USE_SCREENS = false;\n\n  var getViewManagerConfigCompat = function getViewManagerConfigCompat(name) {\n    return typeof _reactNative.UIManager.getViewManagerConfig !== 'undefined' ? _reactNative.UIManager.getViewManagerConfig(name) : _reactNative.UIManager[name];\n  };\n\n  function useScreens() {\n    var shouldUseScreens = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    USE_SCREENS = shouldUseScreens;\n\n    if (USE_SCREENS && !getViewManagerConfigCompat('RNSScreen')) {\n      console.error(\"Screen native module hasn't been linked. Please check the react-native-screens README for more details\");\n    }\n  }\n\n  function screensEnabled() {\n    return USE_SCREENS;\n  }\n\n  var NativeScreen = (0, _reactNative.requireNativeComponent)('RNSScreen', null);\n  exports.NativeScreen = NativeScreen;\n\n  var AnimatedNativeScreen = _reactNative.Animated.createAnimatedComponent(NativeScreen);\n\n  var NativeScreenContainer = (0, _reactNative.requireNativeComponent)('RNSScreenContainer', null);\n  exports.NativeScreenContainer = NativeScreenContainer;\n\n  var Screen = function (_React$Component) {\n    (0, _inherits2.default)(Screen, _React$Component);\n\n    function Screen() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, Screen);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Screen)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n      _this.setRef = function (ref) {\n        _this._ref = ref;\n        _this.props.onComponentRef && _this.props.onComponentRef(ref);\n      };\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(Screen, [{\n      key: \"setNativeProps\",\n      value: function setNativeProps(props) {\n        this._ref.setNativeProps(props);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        if (!USE_SCREENS) {\n          var _this$props = this.props,\n              active = _this$props.active,\n              onComponentRef = _this$props.onComponentRef,\n              props = (0, _objectWithoutProperties2.default)(_this$props, [\"active\", \"onComponentRef\"]);\n          return _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({}, props, {\n            ref: this.setRef,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            }\n          }));\n        } else {\n          var _this$props2 = this.props,\n              style = _this$props2.style,\n              children = _this$props2.children,\n              rest = (0, _objectWithoutProperties2.default)(_this$props2, [\"style\", \"children\"]);\n          return _react.default.createElement(AnimatedNativeScreen, (0, _extends2.default)({}, rest, {\n            ref: this.setRef,\n            style: _reactNative.StyleSheet.absoluteFill,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            }\n          }), _react.default.createElement(_reactNative.Animated.View, {\n            style: style,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            }\n          }, children));\n        }\n      }\n    }]);\n    return Screen;\n  }(_react.default.Component);\n\n  exports.Screen = Screen;\n  exports.Screen = Screen = _wrapComponent(\"Screen\")(Screen);\n\n  var ScreenContainer = function (_React$Component2) {\n    (0, _inherits2.default)(ScreenContainer, _React$Component2);\n\n    function ScreenContainer() {\n      (0, _classCallCheck2.default)(this, ScreenContainer);\n      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(ScreenContainer).apply(this, arguments));\n    }\n\n    (0, _createClass2.default)(ScreenContainer, [{\n      key: \"render\",\n      value: function render() {\n        if (!USE_SCREENS) {\n          return _react.default.createElement(_reactNative.View, (0, _extends2.default)({}, this.props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            }\n          }));\n        } else {\n          return _react.default.createElement(NativeScreenContainer, (0, _extends2.default)({}, this.props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            }\n          }));\n        }\n      }\n    }]);\n    return ScreenContainer;\n  }(_react.default.Component);\n\n  exports.ScreenContainer = ScreenContainer;\n  exports.ScreenContainer = ScreenContainer = _wrapComponent(\"ScreenContainer\")(ScreenContainer);\n});","map":[[25,0,1,0],[29,0,2,0],[54,0,10,0],[54,6,10,4,"USE_SCREENS"],[54,17,10,15],[54,20,10,18],[54,25,10,0],[56,0,14,0],[56,6,14,6,"getViewManagerConfigCompat"],[56,32,14,32],[56,35,14,35],[56,44,14,6,"getViewManagerConfigCompat"],[56,70,14,35],[56,71,14,35,"name"],[56,75,14,39],[57,0,14,39],[57,11,15,2],[57,18,15,9,"UIManager"],[57,41,15,19,"getViewManagerConfig"],[57,61,15,2],[57,66,15,44],[57,77,15,2],[57,80,16,6,"UIManager"],[57,103,16,16,"getViewManagerConfig"],[57,123,16,6],[57,124,16,37,"name"],[57,128,16,6],[57,129,15,2],[57,132,17,6,"UIManager"],[57,155,17,16,"name"],[57,159,17,6],[57,160,14,39],[58,0,14,39],[58,3,14,0],[60,0,19,7],[60,11,19,16,"useScreens"],[60,21,19,7],[60,24,19,52],[61,0,19,52],[61,8,19,27,"shouldUseScreens"],[61,24,19,52],[61,95,19,46],[61,99,19,52],[62,0,20,2,"USE_SCREENS"],[62,4,20,2,"USE_SCREENS"],[62,15,20,13],[62,18,20,16,"shouldUseScreens"],[62,34,20,2],[64,0,21,2],[64,8,21,6,"USE_SCREENS"],[64,19,21,17],[64,23,21,21],[64,24,21,22,"getViewManagerConfigCompat"],[64,50,21,48],[64,51,21,49],[64,62,21,48],[64,63,21,2],[64,65,21,63],[65,0,22,4,"console"],[65,6,22,4,"console"],[65,13,22,11],[65,14,22,12,"error"],[65,19,22,4],[66,0,25,3],[67,0,26,1],[69,0,28,7],[69,11,28,16,"screensEnabled"],[69,25,28,7],[69,28,28,33],[70,0,29,2],[70,11,29,9,"USE_SCREENS"],[70,22,29,2],[71,0,30,1],[73,0,32,7],[73,6,32,13,"NativeScreen"],[73,18,32,25],[73,21,32,28],[73,62,32,51],[73,73,32,28],[73,75,32,64],[73,79,32,28],[73,80,32,7],[76,0,34,0],[76,6,34,6,"AnimatedNativeScreen"],[76,26,34,26],[76,29,34,29,"Animated"],[76,51,34,38,"createAnimatedComponent"],[76,74,34,29],[76,75,34,62,"NativeScreen"],[76,87,34,29],[76,88,34,0],[78,0,36,7],[78,6,36,13,"NativeScreenContainer"],[78,27,36,34],[78,30,36,37],[78,71,37,2],[78,91,36,37],[78,93,38,2],[78,97,36,37],[78,98,36,7],[81,6,41,13,"Screen"],[81,12],[97,12,45,2,"setRef"],[97,18],[97,21,45,11],[97,31,45,11,"ref"],[97,34,45,14],[97,36,45,18],[98,0,46,4],[98,14,46,9,"_ref"],[98,18,46,4],[98,21,46,16,"ref"],[98,24,46,4],[99,0,47,4],[99,14,47,9,"props"],[99,19,47,4],[99,20,47,15,"onComponentRef"],[99,34,47,4],[99,38,47,33],[99,44,47,38,"props"],[99,49,47,33],[99,50,47,44,"onComponentRef"],[99,64,47,33],[99,65,47,59,"ref"],[99,68,47,33],[99,69,47,4],[100,0,48,3],[100,7],[107,37,42,17,"props"],[107,42],[107,44,42,24],[108,0,43,4],[108,13,43,9,"_ref"],[108,17,43,4],[108,18,43,14,"setNativeProps"],[108,32,43,4],[108,33,43,29,"props"],[108,38,43,4],[109,0,44,3],[112,31,49,11],[113,0,50,4],[113,12,50,8],[113,13,50,9,"USE_SCREENS"],[113,24,50,4],[113,26,50,22],[114,0,50,22],[114,28,56,51],[114,33,56,56,"props"],[114,38,50,22],[115,0,50,22],[115,14,56,14,"active"],[115,20,50,22],[115,35,56,14,"active"],[115,41,50,22],[116,0,50,22],[116,14,56,22,"onComponentRef"],[116,28,50,22],[116,43,56,22,"onComponentRef"],[116,57,50,22],[117,0,50,22],[117,14,56,41,"props"],[117,19,50,22],[118,0,58,6],[118,17,58,13],[118,46,58,14],[118,67,58,13],[118,68,58,23],[118,72,58,13],[118,101,58,32,"props"],[118,106,58,13],[119,0,58,39],[119,12,58,39],[119,15,58,42],[119,17,58,44],[119,22,58,49,"setRef"],[119,28,58,13],[120,0,58,13],[121,0,58,13],[122,0,58,13],[123,0,58,13],[124,0,58,13],[124,13,58,6],[125,0,59,5],[125,9,50,4],[125,15,59,11],[126,0,59,11],[126,29,60,43],[126,34,60,48,"props"],[126,39,59,11],[127,0,59,11],[127,14,60,14,"style"],[127,19,59,11],[127,35,60,14,"style"],[127,40,59,11],[128,0,59,11],[128,14,60,21,"children"],[128,22,59,11],[128,38,60,21,"children"],[128,46,59,11],[129,0,59,11],[129,14,60,34,"rest"],[129,18,59,11],[130,0,61,6],[130,17,62,8],[130,46,62,9],[130,66,62,8],[130,95,63,14,"rest"],[130,99,62,8],[131,0,64,10],[131,12,64,10],[131,15,64,13],[131,17,64,15],[131,22,64,20,"setRef"],[131,28,62,8],[132,0,65,10],[132,12,65,10],[132,17,65,15],[132,19,65,17,"StyleSheet"],[132,43,65,28,"absoluteFill"],[132,55,62,8],[133,0,62,8],[134,0,62,8],[135,0,62,8],[136,0,62,8],[137,0,62,8],[137,14,73,10],[137,43,73,11],[137,64,73,10],[137,65,73,20],[137,69,73,10],[138,0,73,25],[138,12,73,25],[138,17,73,30],[138,19,73,32,"style"],[138,24,73,10],[139,0,73,10],[140,0,73,10],[141,0,73,10],[142,0,73,10],[143,0,73,10],[143,13,73,40,"children"],[143,21,73,10],[143,22,62,8],[143,23,61,6],[144,0,76,5],[145,0,77,3],[148,4,41,28,"React"],[148,19,41,34,"Component"],[148,28],[153,6,80,13,"ScreenContainer"],[153,21],[163,31,81,11],[164,0,82,4],[164,12,82,8],[164,13,82,9,"USE_SCREENS"],[164,24,82,4],[164,26,82,22],[165,0,83,6],[165,17,83,13],[165,46,83,14],[165,63,83,13],[165,92,83,23],[165,97,83,28,"props"],[165,102,83,13],[166,0,83,13],[167,0,83,13],[168,0,83,13],[169,0,83,13],[170,0,83,13],[170,13,83,6],[171,0,84,5],[171,9,82,4],[171,15,84,11],[172,0,85,6],[172,17,85,13],[172,46,85,14],[172,67,85,13],[172,96,85,40],[172,101,85,45,"props"],[172,106,85,13],[173,0,85,13],[174,0,85,13],[175,0,85,13],[176,0,85,13],[177,0,85,13],[177,13,85,6],[178,0,86,5],[179,0,87,3],[182,4,80,37,"React"],[182,19,80,43,"Component"],[182,28]]},"type":"js/module"}]}