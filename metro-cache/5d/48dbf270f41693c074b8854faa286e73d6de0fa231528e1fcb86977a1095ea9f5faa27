{"dependencies":[{"name":"NativeModules","data":{"isAsync":false}},{"name":"parseErrorStack","data":{"isAsync":false}},{"name":"symbolicateStackTrace","data":{"isAsync":false}},{"name":"stringifySafe","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var exceptionID = 0;\n\n  function reportException(e, isFatal) {\n    var _require = _$$_REQUIRE(_dependencyMap[0], \"NativeModules\"),\n        ExceptionsManager = _require.ExceptionsManager;\n\n    if (ExceptionsManager) {\n      var parseErrorStack = _$$_REQUIRE(_dependencyMap[1], \"parseErrorStack\");\n\n      var stack = parseErrorStack(e);\n      var currentExceptionID = ++exceptionID;\n\n      if (isFatal) {\n        ExceptionsManager.reportFatalException(e.message, stack, currentExceptionID);\n      } else {\n        ExceptionsManager.reportSoftException(e.message, stack, currentExceptionID);\n      }\n\n      if (__DEV__) {\n        var symbolicateStackTrace = _$$_REQUIRE(_dependencyMap[2], \"symbolicateStackTrace\");\n\n        symbolicateStackTrace(stack).then(function (prettyStack) {\n          if (prettyStack) {\n            ExceptionsManager.updateExceptionMessage(e.message, prettyStack, currentExceptionID);\n          } else {\n            throw new Error('The stack is null');\n          }\n        }).catch(function (error) {\n          return console.warn('Unable to symbolicate stack trace: ' + error.message);\n        });\n      }\n    }\n  }\n\n  function handleException(e, isFatal) {\n    if (!e.message) {\n      e = new Error(e);\n    }\n\n    if (console._errorOriginal) {\n      console._errorOriginal(e.message);\n    } else {\n      console.error(e.message);\n    }\n\n    reportException(e, isFatal);\n  }\n\n  function reactConsoleErrorHandler() {\n    console._errorOriginal.apply(console, arguments);\n\n    if (!console.reportErrorsAsExceptions) {\n      return;\n    }\n\n    if (arguments[0] && arguments[0].stack) {\n      reportException(arguments[0], false);\n    } else {\n      var stringifySafe = _$$_REQUIRE(_dependencyMap[3], \"stringifySafe\");\n\n      var str = Array.prototype.map.call(arguments, stringifySafe).join(', ');\n\n      if (str.slice(0, 10) === '\"Warning: ') {\n        return;\n      }\n\n      var error = new Error('console.error: ' + str);\n      error.framesToPop = 1;\n      reportException(error, false);\n    }\n  }\n\n  function installConsoleErrorReporter() {\n    if (console._errorOriginal) {\n      return;\n    }\n\n    console._errorOriginal = console.error.bind(console);\n    console.error = reactConsoleErrorHandler;\n\n    if (console.reportErrorsAsExceptions === undefined) {\n      console.reportErrorsAsExceptions = true;\n    }\n  }\n\n  module.exports = {\n    handleException: handleException,\n    installConsoleErrorReporter: installConsoleErrorReporter\n  };\n});","map":[[2,0,11,0],[4,0,18,0],[4,6,18,4,"exceptionID"],[4,17,18,15],[4,20,18,18],[4,21,18,0],[6,0,19,0],[6,11,19,9,"reportException"],[6,26,19,0],[6,27,19,25,"e"],[6,28,19,0],[6,30,19,43,"isFatal"],[6,37,19,0],[6,39,19,61],[7,0,19,61],[7,19,20,30,"require"],[7,30,20,37],[7,66,19,61],[8,0,19,61],[8,8,20,9,"ExceptionsManager"],[8,25,19,61],[8,37,20,9,"ExceptionsManager"],[8,54,19,61],[10,0,21,2],[10,8,21,6,"ExceptionsManager"],[10,25,21,2],[10,27,21,25],[11,0,22,4],[11,10,22,10,"parseErrorStack"],[11,25,22,25],[11,28,22,28,"require"],[11,39,22,35],[11,77,22,4],[13,0,23,4],[13,10,23,10,"stack"],[13,15,23,15],[13,18,23,18,"parseErrorStack"],[13,33,23,33],[13,34,23,34,"e"],[13,35,23,33],[13,36,23,4],[14,0,24,4],[14,10,24,10,"currentExceptionID"],[14,28,24,28],[14,31,24,31],[14,33,24,33,"exceptionID"],[14,44,24,4],[16,0,25,4],[16,10,25,8,"isFatal"],[16,17,25,4],[16,19,25,17],[17,0,26,6,"ExceptionsManager"],[17,8,26,6,"ExceptionsManager"],[17,25,26,23],[17,26,26,24,"reportFatalException"],[17,46,26,6],[17,47,27,8,"e"],[17,48,27,9],[17,49,27,10,"message"],[17,56,26,6],[17,58,28,8,"stack"],[17,63,26,6],[17,65,29,8,"currentExceptionID"],[17,83,26,6],[18,0,31,5],[18,7,25,4],[18,13,31,11],[19,0,32,6,"ExceptionsManager"],[19,8,32,6,"ExceptionsManager"],[19,25,32,23],[19,26,32,24,"reportSoftException"],[19,45,32,6],[19,46,33,8,"e"],[19,47,33,9],[19,48,33,10,"message"],[19,55,32,6],[19,57,34,8,"stack"],[19,62,32,6],[19,64,35,8,"currentExceptionID"],[19,82,32,6],[20,0,37,5],[22,0,38,4],[22,10,38,8,"__DEV__"],[22,17,38,4],[22,19,38,17],[23,0,39,6],[23,12,39,12,"symbolicateStackTrace"],[23,33,39,33],[23,36,39,36,"require"],[23,47,39,43],[23,91,39,6],[25,0,40,6,"symbolicateStackTrace"],[25,8,40,6,"symbolicateStackTrace"],[25,29,40,27],[25,30,40,28,"stack"],[25,35,40,27],[25,36,40,6],[25,37,41,9,"then"],[25,41,40,6],[25,42,41,14],[25,52,41,14,"prettyStack"],[25,63,41,25],[25,65,41,29],[26,0,42,10],[26,14,42,14,"prettyStack"],[26,25,42,10],[26,27,42,27],[27,0,43,12,"ExceptionsManager"],[27,12,43,12,"ExceptionsManager"],[27,29,43,29],[27,30,43,30,"updateExceptionMessage"],[27,52,43,12],[27,53,44,14,"e"],[27,54,44,15],[27,55,44,16,"message"],[27,62,43,12],[27,64,45,14,"prettyStack"],[27,75,43,12],[27,77,46,14,"currentExceptionID"],[27,95,43,12],[28,0,48,11],[28,11,42,10],[28,17,48,17],[29,0,49,12],[29,18,49,18],[29,22,49,22,"Error"],[29,27,49,18],[29,28,49,28],[29,47,49,18],[29,48,49,12],[30,0,50,11],[31,0,51,9],[31,9,40,6],[31,11,52,9,"catch"],[31,16,40,6],[31,17,52,15],[31,27,52,15,"error"],[31,32,52,20],[32,0,52,20],[32,17,53,10,"console"],[32,24,53,17],[32,25,53,18,"warn"],[32,29,53,10],[32,30,53,23],[32,70,53,63,"error"],[32,75,53,68],[32,76,53,69,"message"],[32,83,53,10],[32,84,52,20],[33,0,52,20],[33,9,40,6],[34,0,55,5],[35,0,56,3],[36,0,57,1],[38,0,67,0],[38,11,67,9,"handleException"],[38,26,67,0],[38,27,67,25,"e"],[38,28,67,0],[38,30,67,35,"isFatal"],[38,37,67,0],[38,39,67,53],[39,0,72,2],[39,8,72,6],[39,9,72,7,"e"],[39,10,72,8],[39,11,72,9,"message"],[39,18,72,2],[39,20,72,18],[40,0,73,4,"e"],[40,6,73,4,"e"],[40,7,73,5],[40,10,73,8],[40,14,73,12,"Error"],[40,19,73,8],[40,20,73,18,"e"],[40,21,73,8],[40,22,73,4],[41,0,74,3],[43,0,75,2],[43,8,75,6,"console"],[43,15,75,13],[43,16,75,14,"_errorOriginal"],[43,30,75,2],[43,32,75,30],[44,0,76,4,"console"],[44,6,76,4,"console"],[44,13,76,11],[44,14,76,12,"_errorOriginal"],[44,28,76,4],[44,29,76,27,"e"],[44,30,76,28],[44,31,76,29,"message"],[44,38,76,4],[45,0,77,3],[45,5,75,2],[45,11,77,9],[46,0,78,4,"console"],[46,6,78,4,"console"],[46,13,78,11],[46,14,78,12,"error"],[46,19,78,4],[46,20,78,18,"e"],[46,21,78,19],[46,22,78,20,"message"],[46,29,78,4],[47,0,79,3],[49,0,80,2,"reportException"],[49,4,80,2,"reportException"],[49,19,80,17],[49,20,80,18,"e"],[49,21,80,17],[49,23,80,21,"isFatal"],[49,30,80,17],[49,31,80,2],[50,0,81,1],[52,0,83,0],[52,11,83,9,"reactConsoleErrorHandler"],[52,35,83,0],[52,38,83,36],[53,0,84,2,"console"],[53,4,84,2,"console"],[53,11,84,9],[53,12,84,10,"_errorOriginal"],[53,26,84,2],[53,27,84,25,"apply"],[53,32,84,2],[53,33,84,31,"console"],[53,40,84,2],[53,42,84,40,"arguments"],[53,51,84,2],[55,0,85,2],[55,8,85,6],[55,9,85,7,"console"],[55,16,85,14],[55,17,85,15,"reportErrorsAsExceptions"],[55,41,85,2],[55,43,85,41],[56,0,86,4],[57,0,87,3],[59,0,89,2],[59,8,89,6,"arguments"],[59,17,89,15],[59,18,89,16],[59,19,89,15],[59,20,89,6],[59,24,89,22,"arguments"],[59,33,89,31],[59,34,89,32],[59,35,89,31],[59,36,89,22],[59,37,89,35,"stack"],[59,42,89,2],[59,44,89,42],[60,0,90,4,"reportException"],[60,6,90,4,"reportException"],[60,21,90,19],[60,22,90,20,"arguments"],[60,31,90,29],[60,32,90,30],[60,33,90,29],[60,34,90,19],[60,36,90,48],[60,41,90,19],[60,42,90,4],[61,0,91,3],[61,5,89,2],[61,11,91,9],[62,0,92,4],[62,10,92,10,"stringifySafe"],[62,23,92,23],[62,26,92,26,"require"],[62,37,92,33],[62,73,92,4],[64,0,93,4],[64,10,93,10,"str"],[64,13,93,13],[64,16,93,16,"Array"],[64,21,93,21],[64,22,93,22,"prototype"],[64,31,93,16],[64,32,93,32,"map"],[64,35,93,16],[64,36,93,36,"call"],[64,40,93,16],[64,41,93,41,"arguments"],[64,50,93,16],[64,52,93,52,"stringifySafe"],[64,65,93,16],[64,67,93,67,"join"],[64,71,93,16],[64,72,93,72],[64,76,93,16],[64,77,93,4],[66,0,94,4],[66,10,94,8,"str"],[66,13,94,11],[66,14,94,12,"slice"],[66,19,94,8],[66,20,94,18],[66,21,94,8],[66,23,94,21],[66,25,94,8],[66,31,94,29],[66,43,94,4],[66,45,94,43],[67,0,98,6],[68,0,99,5],[70,0,100,4],[70,10,100,10,"error"],[70,15,100,30],[70,18,100,33],[70,22,100,37,"Error"],[70,27,100,33],[70,28,100,43],[70,48,100,63,"str"],[70,51,100,33],[70,52,100,4],[71,0,101,4,"error"],[71,6,101,4,"error"],[71,11,101,9],[71,12,101,10,"framesToPop"],[71,23,101,4],[71,26,101,24],[71,27,101,4],[72,0,102,4,"reportException"],[72,6,102,4,"reportException"],[72,21,102,19],[72,22,102,20,"error"],[72,27,102,19],[72,29,102,41],[72,34,102,19],[72,35,102,4],[73,0,103,3],[74,0,104,1],[76,0,110,0],[76,11,110,9,"installConsoleErrorReporter"],[76,38,110,0],[76,41,110,39],[77,0,112,2],[77,8,112,6,"console"],[77,15,112,13],[77,16,112,14,"_errorOriginal"],[77,30,112,2],[77,32,112,30],[78,0,113,4],[79,0,114,3],[81,0,116,2,"console"],[81,4,116,2,"console"],[81,11,116,9],[81,12,116,10,"_errorOriginal"],[81,26,116,2],[81,29,116,27,"console"],[81,36,116,34],[81,37,116,35,"error"],[81,42,116,27],[81,43,116,41,"bind"],[81,47,116,27],[81,48,116,46,"console"],[81,55,116,27],[81,56,116,2],[82,0,117,2,"console"],[82,4,117,2,"console"],[82,11,117,9],[82,12,117,10,"error"],[82,17,117,2],[82,20,117,18,"reactConsoleErrorHandler"],[82,44,117,2],[84,0,118,2],[84,8,118,6,"console"],[84,15,118,13],[84,16,118,14,"reportErrorsAsExceptions"],[84,40,118,6],[84,45,118,43,"undefined"],[84,54,118,2],[84,56,118,54],[85,0,121,4,"console"],[85,6,121,4,"console"],[85,13,121,11],[85,14,121,12,"reportErrorsAsExceptions"],[85,38,121,4],[85,41,121,39],[85,45,121,4],[86,0,122,3],[87,0,123,1],[89,0,125,0,"module"],[89,2,125,0,"module"],[89,8,125,6],[89,9,125,7,"exports"],[89,16,125,0],[89,19,125,17],[90,0,125,18,"handleException"],[90,4,125,18,"handleException"],[90,19,125,33],[90,21,125,18,"handleException"],[90,36,125,17],[91,0,125,35,"installConsoleErrorReporter"],[91,4,125,35,"installConsoleErrorReporter"],[91,31,125,62],[91,33,125,35,"installConsoleErrorReporter"],[92,0,125,17],[92,3,125,0]]},"type":"js/module"}]}