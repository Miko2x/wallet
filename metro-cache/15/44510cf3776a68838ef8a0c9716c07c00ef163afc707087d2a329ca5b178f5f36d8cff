{"dependencies":[{"name":"./_ctx","data":{"isAsync":false}},{"name":"./_export","data":{"isAsync":false}},{"name":"./_to-object","data":{"isAsync":false}},{"name":"./_iter-call","data":{"isAsync":false}},{"name":"./_is-array-iter","data":{"isAsync":false}},{"name":"./_to-length","data":{"isAsync":false}},{"name":"./_create-property","data":{"isAsync":false}},{"name":"./core.get-iterator-method","data":{"isAsync":false}},{"name":"./_iter-detect","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var ctx = _$$_REQUIRE(_dependencyMap[0], \"./_ctx\");\n\n  var $export = _$$_REQUIRE(_dependencyMap[1], \"./_export\");\n\n  var toObject = _$$_REQUIRE(_dependencyMap[2], \"./_to-object\");\n\n  var call = _$$_REQUIRE(_dependencyMap[3], \"./_iter-call\");\n\n  var isArrayIter = _$$_REQUIRE(_dependencyMap[4], \"./_is-array-iter\");\n\n  var toLength = _$$_REQUIRE(_dependencyMap[5], \"./_to-length\");\n\n  var createProperty = _$$_REQUIRE(_dependencyMap[6], \"./_create-property\");\n\n  var getIterFn = _$$_REQUIRE(_dependencyMap[7], \"./core.get-iterator-method\");\n\n  $export($export.S + $export.F * !_$$_REQUIRE(_dependencyMap[8], \"./_iter-detect\")(function (iter) {\n    Array.from(iter);\n  }), 'Array', {\n    from: function from(arrayLike) {\n      var O = toObject(arrayLike);\n      var C = typeof this == 'function' ? this : Array;\n      var aLen = arguments.length;\n      var mapfn = aLen > 1 ? arguments[1] : undefined;\n      var mapping = mapfn !== undefined;\n      var index = 0;\n      var iterFn = getIterFn(O);\n      var length, result, step, iterator;\n      if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n\n      if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n        for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n          createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n        }\n      } else {\n        length = toLength(O.length);\n\n        for (result = new C(length); length > index; index++) {\n          createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n        }\n      }\n\n      result.length = index;\n      return result;\n    }\n  });\n});","map":[[2,0,1,0],[4,0,2,0],[4,6,2,4,"ctx"],[4,9,2,7],[4,12,2,10,"require"],[4,23,2,17],[4,52,2,0],[6,0,3,0],[6,6,3,4,"$export"],[6,13,3,11],[6,16,3,14,"require"],[6,27,3,21],[6,59,3,0],[8,0,4,0],[8,6,4,4,"toObject"],[8,14,4,12],[8,17,4,15,"require"],[8,28,4,22],[8,63,4,0],[10,0,5,0],[10,6,5,4,"call"],[10,10,5,8],[10,13,5,11,"require"],[10,24,5,18],[10,59,5,0],[12,0,6,0],[12,6,6,4,"isArrayIter"],[12,17,6,15],[12,20,6,18,"require"],[12,31,6,25],[12,70,6,0],[14,0,7,0],[14,6,7,4,"toLength"],[14,14,7,12],[14,17,7,15,"require"],[14,28,7,22],[14,63,7,0],[16,0,8,0],[16,6,8,4,"createProperty"],[16,20,8,18],[16,23,8,21,"require"],[16,34,8,28],[16,75,8,0],[18,0,9,0],[18,6,9,4,"getIterFn"],[18,15,9,13],[18,18,9,16,"require"],[18,29,9,23],[18,78,9,0],[20,0,11,0,"$export"],[20,2,11,0,"$export"],[20,9,11,7],[20,10,11,8,"$export"],[20,17,11,15],[20,18,11,16,"S"],[20,19,11,8],[20,22,11,20,"$export"],[20,29,11,27],[20,30,11,28,"F"],[20,31,11,20],[20,34,11,32],[20,35,11,33,"require"],[20,46,11,40],[20,83,11,33],[20,84,11,59],[20,94,11,69,"iter"],[20,98,11,59],[20,100,11,75],[21,0,11,77,"Array"],[21,4,11,77,"Array"],[21,9,11,82],[21,10,11,83,"from"],[21,14,11,77],[21,15,11,88,"iter"],[21,19,11,77],[22,0,11,96],[22,3,11,33],[22,4,11,7],[22,6,11,99],[22,13,11,7],[22,15,11,108],[23,0,13,2,"from"],[23,4,13,2,"from"],[23,8,13,6],[23,10,13,8],[23,19,13,17,"from"],[23,23,13,8],[23,24,13,22,"arrayLike"],[23,33,13,8],[23,35,13,80],[24,0,14,4],[24,10,14,8,"O"],[24,11,14,9],[24,14,14,12,"toObject"],[24,22,14,20],[24,23,14,21,"arrayLike"],[24,32,14,20],[24,33,14,4],[25,0,15,4],[25,10,15,8,"C"],[25,11,15,9],[25,14,15,12],[25,21,15,19],[25,25,15,12],[25,29,15,27],[25,39,15,12],[25,42,15,40],[25,46,15,12],[25,49,15,47,"Array"],[25,54,15,4],[26,0,16,4],[26,10,16,8,"aLen"],[26,14,16,12],[26,17,16,15,"arguments"],[26,26,16,24],[26,27,16,25,"length"],[26,33,16,4],[27,0,17,4],[27,10,17,8,"mapfn"],[27,15,17,13],[27,18,17,16,"aLen"],[27,22,17,20],[27,25,17,23],[27,26,17,16],[27,29,17,27,"arguments"],[27,38,17,36],[27,39,17,37],[27,40,17,36],[27,41,17,16],[27,44,17,42,"undefined"],[27,53,17,4],[28,0,18,4],[28,10,18,8,"mapping"],[28,17,18,15],[28,20,18,18,"mapfn"],[28,25,18,23],[28,30,18,28,"undefined"],[28,39,18,4],[29,0,19,4],[29,10,19,8,"index"],[29,15,19,13],[29,18,19,16],[29,19,19,4],[30,0,20,4],[30,10,20,8,"iterFn"],[30,16,20,14],[30,19,20,17,"getIterFn"],[30,28,20,26],[30,29,20,27,"O"],[30,30,20,26],[30,31,20,4],[31,0,21,4],[31,10,21,8,"length"],[31,16,21,4],[31,18,21,16,"result"],[31,24,21,4],[31,26,21,24,"step"],[31,30,21,4],[31,32,21,30,"iterator"],[31,40,21,4],[32,0,22,4],[32,10,22,8,"mapping"],[32,17,22,4],[32,19,22,17,"mapfn"],[32,24,22,22],[32,27,22,25,"ctx"],[32,30,22,28],[32,31,22,29,"mapfn"],[32,36,22,28],[32,38,22,36,"aLen"],[32,42,22,40],[32,45,22,43],[32,46,22,36],[32,49,22,47,"arguments"],[32,58,22,56],[32,59,22,57],[32,60,22,56],[32,61,22,36],[32,64,22,62,"undefined"],[32,73,22,28],[32,75,22,73],[32,76,22,28],[32,77,22,17],[34,0,24,4],[34,10,24,8,"iterFn"],[34,16,24,14],[34,20,24,18,"undefined"],[34,29,24,8],[34,33,24,31],[34,35,24,33,"C"],[34,36,24,34],[34,40,24,38,"Array"],[34,45,24,33],[34,49,24,47,"isArrayIter"],[34,60,24,58],[34,61,24,59,"iterFn"],[34,67,24,58],[34,68,24,31],[34,69,24,4],[34,71,24,69],[35,0,25,6],[35,13,25,11,"iterator"],[35,21,25,19],[35,24,25,22,"iterFn"],[35,30,25,28],[35,31,25,29,"call"],[35,35,25,22],[35,36,25,34,"O"],[35,37,25,22],[35,38,25,11],[35,40,25,38,"result"],[35,46,25,44],[35,49,25,47],[35,53,25,51,"C"],[35,54,25,47],[35,56,25,6],[35,58,25,56],[35,59,25,57],[35,60,25,58,"step"],[35,64,25,62],[35,67,25,65,"iterator"],[35,75,25,73],[35,76,25,74,"next"],[35,80,25,65],[35,82,25,57],[35,84,25,82,"done"],[35,88,25,6],[35,90,25,88,"index"],[35,95,25,93],[35,97,25,6],[35,99,25,97],[36,0,26,8,"createProperty"],[36,10,26,8,"createProperty"],[36,24,26,22],[36,25,26,23,"result"],[36,31,26,22],[36,33,26,31,"index"],[36,38,26,22],[36,40,26,38,"mapping"],[36,47,26,45],[36,50,26,48,"call"],[36,54,26,52],[36,55,26,53,"iterator"],[36,63,26,52],[36,65,26,63,"mapfn"],[36,70,26,52],[36,72,26,70],[36,73,26,71,"step"],[36,77,26,75],[36,78,26,76,"value"],[36,83,26,70],[36,85,26,83,"index"],[36,90,26,70],[36,91,26,52],[36,93,26,91],[36,97,26,52],[36,98,26,45],[36,101,26,99,"step"],[36,105,26,103],[36,106,26,104,"value"],[36,111,26,22],[36,112,26,8],[37,0,27,7],[38,0,28,5],[38,7,24,4],[38,13,28,11],[39,0,29,6,"length"],[39,8,29,6,"length"],[39,14,29,12],[39,17,29,15,"toLength"],[39,25,29,23],[39,26,29,24,"O"],[39,27,29,25],[39,28,29,26,"length"],[39,34,29,23],[39,35,29,6],[41,0,30,6],[41,13,30,11,"result"],[41,19,30,17],[41,22,30,20],[41,26,30,24,"C"],[41,27,30,20],[41,28,30,26,"length"],[41,34,30,20],[41,35,30,6],[41,37,30,35,"length"],[41,43,30,41],[41,46,30,44,"index"],[41,51,30,6],[41,53,30,51,"index"],[41,58,30,56],[41,60,30,6],[41,62,30,60],[42,0,31,8,"createProperty"],[42,10,31,8,"createProperty"],[42,24,31,22],[42,25,31,23,"result"],[42,31,31,22],[42,33,31,31,"index"],[42,38,31,22],[42,40,31,38,"mapping"],[42,47,31,45],[42,50,31,48,"mapfn"],[42,55,31,53],[42,56,31,54,"O"],[42,57,31,55],[42,58,31,56,"index"],[42,63,31,55],[42,64,31,53],[42,66,31,64,"index"],[42,71,31,53],[42,72,31,45],[42,75,31,73,"O"],[42,76,31,74],[42,77,31,75,"index"],[42,82,31,74],[42,83,31,22],[42,84,31,8],[43,0,32,7],[44,0,33,5],[46,0,34,4,"result"],[46,6,34,4,"result"],[46,12,34,10],[46,13,34,11,"length"],[46,19,34,4],[46,22,34,20,"index"],[46,27,34,4],[47,0,35,4],[47,13,35,11,"result"],[47,19,35,4],[48,0,36,3],[49,0,11,108],[49,3,11,7],[49,4,11,0]]},"type":"js/module"}]}