{"dependencies":[{"name":"./_is-array","data":{"isAsync":false}},{"name":"./_is-object","data":{"isAsync":false}},{"name":"./_to-length","data":{"isAsync":false}},{"name":"./_ctx","data":{"isAsync":false}},{"name":"./_wks","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var isArray = _$$_REQUIRE(_dependencyMap[0], \"./_is-array\");\n\n  var isObject = _$$_REQUIRE(_dependencyMap[1], \"./_is-object\");\n\n  var toLength = _$$_REQUIRE(_dependencyMap[2], \"./_to-length\");\n\n  var ctx = _$$_REQUIRE(_dependencyMap[3], \"./_ctx\");\n\n  var IS_CONCAT_SPREADABLE = _$$_REQUIRE(_dependencyMap[4], \"./_wks\")('isConcatSpreadable');\n\n  function flattenIntoArray(target, original, source, sourceLen, start, depth, mapper, thisArg) {\n    var targetIndex = start;\n    var sourceIndex = 0;\n    var mapFn = mapper ? ctx(mapper, thisArg, 3) : false;\n    var element, spreadable;\n\n    while (sourceIndex < sourceLen) {\n      if (sourceIndex in source) {\n        element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n        spreadable = false;\n\n        if (isObject(element)) {\n          spreadable = element[IS_CONCAT_SPREADABLE];\n          spreadable = spreadable !== undefined ? !!spreadable : isArray(element);\n        }\n\n        if (spreadable && depth > 0) {\n          targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n        } else {\n          if (targetIndex >= 0x1fffffffffffff) throw TypeError();\n          target[targetIndex] = element;\n        }\n\n        targetIndex++;\n      }\n\n      sourceIndex++;\n    }\n\n    return targetIndex;\n  }\n\n  module.exports = flattenIntoArray;\n});","map":[[2,0,1,0],[4,0,3,0],[4,6,3,4,"isArray"],[4,13,3,11],[4,16,3,14,"require"],[4,27,3,21],[4,61,3,0],[6,0,4,0],[6,6,4,4,"isObject"],[6,14,4,12],[6,17,4,15,"require"],[6,28,4,22],[6,63,4,0],[8,0,5,0],[8,6,5,4,"toLength"],[8,14,5,12],[8,17,5,15,"require"],[8,28,5,22],[8,63,5,0],[10,0,6,0],[10,6,6,4,"ctx"],[10,9,6,7],[10,12,6,10,"require"],[10,23,6,17],[10,52,6,0],[12,0,7,0],[12,6,7,4,"IS_CONCAT_SPREADABLE"],[12,26,7,24],[12,29,7,27,"require"],[12,40,7,34],[12,69,7,27],[12,70,7,45],[12,90,7,27],[12,91,7,0],[14,0,9,0],[14,11,9,9,"flattenIntoArray"],[14,27,9,0],[14,28,9,26,"target"],[14,34,9,0],[14,36,9,34,"original"],[14,44,9,0],[14,46,9,44,"source"],[14,52,9,0],[14,54,9,52,"sourceLen"],[14,63,9,0],[14,65,9,63,"start"],[14,70,9,0],[14,72,9,70,"depth"],[14,77,9,0],[14,79,9,77,"mapper"],[14,85,9,0],[14,87,9,85,"thisArg"],[14,94,9,0],[14,96,9,94],[15,0,10,2],[15,8,10,6,"targetIndex"],[15,19,10,17],[15,22,10,20,"start"],[15,27,10,2],[16,0,11,2],[16,8,11,6,"sourceIndex"],[16,19,11,17],[16,22,11,20],[16,23,11,2],[17,0,12,2],[17,8,12,6,"mapFn"],[17,13,12,11],[17,16,12,14,"mapper"],[17,22,12,20],[17,25,12,23,"ctx"],[17,28,12,26],[17,29,12,27,"mapper"],[17,35,12,26],[17,37,12,35,"thisArg"],[17,44,12,26],[17,46,12,44],[17,47,12,26],[17,48,12,20],[17,51,12,49],[17,56,12,2],[18,0,13,2],[18,8,13,6,"element"],[18,15,13,2],[18,17,13,15,"spreadable"],[18,27,13,2],[20,0,15,2],[20,11,15,9,"sourceIndex"],[20,22,15,20],[20,25,15,23,"sourceLen"],[20,34,15,2],[20,36,15,34],[21,0,16,4],[21,10,16,8,"sourceIndex"],[21,21,16,19],[21,25,16,23,"source"],[21,31,16,4],[21,33,16,31],[22,0,17,6,"element"],[22,8,17,6,"element"],[22,15,17,13],[22,18,17,16,"mapFn"],[22,23,17,21],[22,26,17,24,"mapFn"],[22,31,17,29],[22,32,17,30,"source"],[22,38,17,36],[22,39,17,37,"sourceIndex"],[22,50,17,36],[22,51,17,29],[22,53,17,51,"sourceIndex"],[22,64,17,29],[22,66,17,64,"original"],[22,74,17,29],[22,75,17,21],[22,78,17,76,"source"],[22,84,17,82],[22,85,17,83,"sourceIndex"],[22,96,17,82],[22,97,17,6],[23,0,19,6,"spreadable"],[23,8,19,6,"spreadable"],[23,18,19,16],[23,21,19,19],[23,26,19,6],[25,0,20,6],[25,12,20,10,"isObject"],[25,20,20,18],[25,21,20,19,"element"],[25,28,20,18],[25,29,20,6],[25,31,20,29],[26,0,21,8,"spreadable"],[26,10,21,8,"spreadable"],[26,20,21,18],[26,23,21,21,"element"],[26,30,21,28],[26,31,21,29,"IS_CONCAT_SPREADABLE"],[26,51,21,28],[26,52,21,8],[27,0,22,8,"spreadable"],[27,10,22,8,"spreadable"],[27,20,22,18],[27,23,22,21,"spreadable"],[27,33,22,31],[27,38,22,36,"undefined"],[27,47,22,21],[27,50,22,48],[27,51,22,49],[27,52,22,50,"spreadable"],[27,62,22,21],[27,65,22,63,"isArray"],[27,72,22,70],[27,73,22,71,"element"],[27,80,22,70],[27,81,22,8],[28,0,23,7],[30,0,25,6],[30,12,25,10,"spreadable"],[30,22,25,20],[30,26,25,24,"depth"],[30,31,25,29],[30,34,25,32],[30,35,25,6],[30,37,25,35],[31,0,26,8,"targetIndex"],[31,10,26,8,"targetIndex"],[31,21,26,19],[31,24,26,22,"flattenIntoArray"],[31,40,26,38],[31,41,26,39,"target"],[31,47,26,38],[31,49,26,47,"original"],[31,57,26,38],[31,59,26,57,"element"],[31,66,26,38],[31,68,26,66,"toLength"],[31,76,26,74],[31,77,26,75,"element"],[31,84,26,82],[31,85,26,83,"length"],[31,91,26,74],[31,92,26,38],[31,94,26,92,"targetIndex"],[31,105,26,38],[31,107,26,105,"depth"],[31,112,26,110],[31,115,26,113],[31,116,26,38],[31,117,26,22],[31,120,26,118],[31,121,26,8],[32,0,27,7],[32,9,25,6],[32,15,27,13],[33,0,28,8],[33,14,28,12,"targetIndex"],[33,25,28,23],[33,29,28,27],[33,45,28,8],[33,47,28,45],[33,53,28,51,"TypeError"],[33,62,28,60],[33,64,28,45],[34,0,29,8,"target"],[34,10,29,8,"target"],[34,16,29,14],[34,17,29,15,"targetIndex"],[34,28,29,14],[34,29,29,8],[34,32,29,30,"element"],[34,39,29,8],[35,0,30,7],[37,0,32,6,"targetIndex"],[37,8,32,6,"targetIndex"],[37,19,32,17],[38,0,33,5],[40,0,34,4,"sourceIndex"],[40,6,34,4,"sourceIndex"],[40,17,34,15],[41,0,35,3],[43,0,36,2],[43,11,36,9,"targetIndex"],[43,22,36,2],[44,0,37,1],[46,0,39,0,"module"],[46,2,39,0,"module"],[46,8,39,6],[46,9,39,7,"exports"],[46,16,39,0],[46,19,39,17,"flattenIntoArray"],[46,35,39,0]]},"type":"js/module"}]}