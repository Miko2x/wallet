{"dependencies":[{"name":"./_global","data":{"isAsync":false}},{"name":"./_export","data":{"isAsync":false}},{"name":"./_redefine","data":{"isAsync":false}},{"name":"./_redefine-all","data":{"isAsync":false}},{"name":"./_meta","data":{"isAsync":false}},{"name":"./_for-of","data":{"isAsync":false}},{"name":"./_an-instance","data":{"isAsync":false}},{"name":"./_is-object","data":{"isAsync":false}},{"name":"./_fails","data":{"isAsync":false}},{"name":"./_iter-detect","data":{"isAsync":false}},{"name":"./_set-to-string-tag","data":{"isAsync":false}},{"name":"./_inherit-if-required","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var global = _$$_REQUIRE(_dependencyMap[0], \"./_global\");\n\n  var $export = _$$_REQUIRE(_dependencyMap[1], \"./_export\");\n\n  var redefine = _$$_REQUIRE(_dependencyMap[2], \"./_redefine\");\n\n  var redefineAll = _$$_REQUIRE(_dependencyMap[3], \"./_redefine-all\");\n\n  var meta = _$$_REQUIRE(_dependencyMap[4], \"./_meta\");\n\n  var forOf = _$$_REQUIRE(_dependencyMap[5], \"./_for-of\");\n\n  var anInstance = _$$_REQUIRE(_dependencyMap[6], \"./_an-instance\");\n\n  var isObject = _$$_REQUIRE(_dependencyMap[7], \"./_is-object\");\n\n  var fails = _$$_REQUIRE(_dependencyMap[8], \"./_fails\");\n\n  var $iterDetect = _$$_REQUIRE(_dependencyMap[9], \"./_iter-detect\");\n\n  var setToStringTag = _$$_REQUIRE(_dependencyMap[10], \"./_set-to-string-tag\");\n\n  var inheritIfRequired = _$$_REQUIRE(_dependencyMap[11], \"./_inherit-if-required\");\n\n  module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n    var Base = global[NAME];\n    var C = Base;\n    var ADDER = IS_MAP ? 'set' : 'add';\n    var proto = C && C.prototype;\n    var O = {};\n\n    var fixMethod = function fixMethod(KEY) {\n      var fn = proto[KEY];\n      redefine(proto, KEY, KEY == 'delete' ? function (a) {\n        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'has' ? function has(a) {\n        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'get' ? function get(a) {\n        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'add' ? function add(a) {\n        fn.call(this, a === 0 ? 0 : a);\n        return this;\n      } : function set(a, b) {\n        fn.call(this, a === 0 ? 0 : a, b);\n        return this;\n      });\n    };\n\n    if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n      new C().entries().next();\n    }))) {\n      C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n      redefineAll(C.prototype, methods);\n      meta.NEED = true;\n    } else {\n      var instance = new C();\n      var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n      var THROWS_ON_PRIMITIVES = fails(function () {\n        instance.has(1);\n      });\n      var ACCEPT_ITERABLES = $iterDetect(function (iter) {\n        new C(iter);\n      });\n      var BUGGY_ZERO = !IS_WEAK && fails(function () {\n        var $instance = new C();\n        var index = 5;\n\n        while (index--) {\n          $instance[ADDER](index, index);\n        }\n\n        return !$instance.has(-0);\n      });\n\n      if (!ACCEPT_ITERABLES) {\n        C = wrapper(function (target, iterable) {\n          anInstance(target, C, NAME);\n          var that = inheritIfRequired(new Base(), target, C);\n          if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n          return that;\n        });\n        C.prototype = proto;\n        proto.constructor = C;\n      }\n\n      if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n        fixMethod('delete');\n        fixMethod('has');\n        IS_MAP && fixMethod('get');\n      }\n\n      if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n      if (IS_WEAK && proto.clear) delete proto.clear;\n    }\n\n    setToStringTag(C, NAME);\n    O[NAME] = C;\n    $export($export.G + $export.W + $export.F * (C != Base), O);\n    if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n    return C;\n  };\n});","map":[[2,0,1,0],[4,0,2,0],[4,6,2,4,"global"],[4,12,2,10],[4,15,2,13,"require"],[4,26,2,20],[4,58,2,0],[6,0,3,0],[6,6,3,4,"$export"],[6,13,3,11],[6,16,3,14,"require"],[6,27,3,21],[6,59,3,0],[8,0,4,0],[8,6,4,4,"redefine"],[8,14,4,12],[8,17,4,15,"require"],[8,28,4,22],[8,62,4,0],[10,0,5,0],[10,6,5,4,"redefineAll"],[10,17,5,15],[10,20,5,18,"require"],[10,31,5,25],[10,69,5,0],[12,0,6,0],[12,6,6,4,"meta"],[12,10,6,8],[12,13,6,11,"require"],[12,24,6,18],[12,54,6,0],[14,0,7,0],[14,6,7,4,"forOf"],[14,11,7,9],[14,14,7,12,"require"],[14,25,7,19],[14,57,7,0],[16,0,8,0],[16,6,8,4,"anInstance"],[16,16,8,14],[16,19,8,17,"require"],[16,30,8,24],[16,67,8,0],[18,0,9,0],[18,6,9,4,"isObject"],[18,14,9,12],[18,17,9,15,"require"],[18,28,9,22],[18,63,9,0],[20,0,10,0],[20,6,10,4,"fails"],[20,11,10,9],[20,14,10,12,"require"],[20,25,10,19],[20,56,10,0],[22,0,11,0],[22,6,11,4,"$iterDetect"],[22,17,11,15],[22,20,11,18,"require"],[22,31,11,25],[22,68,11,0],[24,0,12,0],[24,6,12,4,"setToStringTag"],[24,20,12,18],[24,23,12,21,"require"],[24,34,12,28],[24,78,12,0],[26,0,13,0],[26,6,13,4,"inheritIfRequired"],[26,23,13,21],[26,26,13,24,"require"],[26,37,13,31],[26,83,13,0],[28,0,15,0,"module"],[28,2,15,0,"module"],[28,8,15,6],[28,9,15,7,"exports"],[28,16,15,0],[28,19,15,17],[28,29,15,27,"NAME"],[28,33,15,17],[28,35,15,33,"wrapper"],[28,42,15,17],[28,44,15,42,"methods"],[28,51,15,17],[28,53,15,51,"common"],[28,59,15,17],[28,61,15,59,"IS_MAP"],[28,67,15,17],[28,69,15,67,"IS_WEAK"],[28,76,15,17],[28,78,15,76],[29,0,16,2],[29,8,16,6,"Base"],[29,12,16,10],[29,15,16,13,"global"],[29,21,16,19],[29,22,16,20,"NAME"],[29,26,16,19],[29,27,16,2],[30,0,17,2],[30,8,17,6,"C"],[30,9,17,7],[30,12,17,10,"Base"],[30,16,17,2],[31,0,18,2],[31,8,18,6,"ADDER"],[31,13,18,11],[31,16,18,14,"IS_MAP"],[31,22,18,20],[31,25,18,23],[31,30,18,20],[31,33,18,31],[31,38,18,2],[32,0,19,2],[32,8,19,6,"proto"],[32,13,19,11],[32,16,19,14,"C"],[32,17,19,15],[32,21,19,19,"C"],[32,22,19,20],[32,23,19,21,"prototype"],[32,32,19,2],[33,0,20,2],[33,8,20,6,"O"],[33,9,20,7],[33,12,20,10],[33,14,20,2],[35,0,21,2],[35,8,21,6,"fixMethod"],[35,17,21,15],[35,20,21,18],[35,29,21,6,"fixMethod"],[35,38,21,18],[35,39,21,28,"KEY"],[35,42,21,18],[35,44,21,33],[36,0,22,4],[36,10,22,8,"fn"],[36,12,22,10],[36,15,22,13,"proto"],[36,20,22,18],[36,21,22,19,"KEY"],[36,24,22,18],[36,25,22,4],[37,0,23,4,"redefine"],[37,6,23,4,"redefine"],[37,14,23,12],[37,15,23,13,"proto"],[37,20,23,12],[37,22,23,20,"KEY"],[37,25,23,12],[37,27,24,6,"KEY"],[37,30,24,9],[37,34,24,13],[37,42,24,6],[37,45,24,24],[37,55,24,34,"a"],[37,56,24,24],[37,58,24,37],[38,0,25,8],[38,15,25,15,"IS_WEAK"],[38,22,25,22],[38,26,25,26],[38,27,25,27,"isObject"],[38,35,25,35],[38,36,25,36,"a"],[38,37,25,35],[38,38,25,15],[38,41,25,41],[38,46,25,15],[38,49,25,49,"fn"],[38,51,25,51],[38,52,25,52,"call"],[38,56,25,49],[38,57,25,57],[38,61,25,49],[38,63,25,63,"a"],[38,64,25,64],[38,69,25,69],[38,70,25,63],[38,73,25,73],[38,74,25,63],[38,77,25,77,"a"],[38,78,25,49],[38,79,25,8],[39,0,26,7],[39,7,24,6],[39,10,26,10,"KEY"],[39,13,26,13],[39,17,26,17],[39,22,26,10],[39,25,26,25],[39,34,26,34,"has"],[39,37,26,25],[39,38,26,38,"a"],[39,39,26,25],[39,41,26,41],[40,0,27,8],[40,15,27,15,"IS_WEAK"],[40,22,27,22],[40,26,27,26],[40,27,27,27,"isObject"],[40,35,27,35],[40,36,27,36,"a"],[40,37,27,35],[40,38,27,15],[40,41,27,41],[40,46,27,15],[40,49,27,49,"fn"],[40,51,27,51],[40,52,27,52,"call"],[40,56,27,49],[40,57,27,57],[40,61,27,49],[40,63,27,63,"a"],[40,64,27,64],[40,69,27,69],[40,70,27,63],[40,73,27,73],[40,74,27,63],[40,77,27,77,"a"],[40,78,27,49],[40,79,27,8],[41,0,28,7],[41,7,26,10],[41,10,28,10,"KEY"],[41,13,28,13],[41,17,28,17],[41,22,28,10],[41,25,28,25],[41,34,28,34,"get"],[41,37,28,25],[41,38,28,38,"a"],[41,39,28,25],[41,41,28,41],[42,0,29,8],[42,15,29,15,"IS_WEAK"],[42,22,29,22],[42,26,29,26],[42,27,29,27,"isObject"],[42,35,29,35],[42,36,29,36,"a"],[42,37,29,35],[42,38,29,15],[42,41,29,41,"undefined"],[42,50,29,15],[42,53,29,53,"fn"],[42,55,29,55],[42,56,29,56,"call"],[42,60,29,53],[42,61,29,61],[42,65,29,53],[42,67,29,67,"a"],[42,68,29,68],[42,73,29,73],[42,74,29,67],[42,77,29,77],[42,78,29,67],[42,81,29,81,"a"],[42,82,29,53],[42,83,29,8],[43,0,30,7],[43,7,28,10],[43,10,30,10,"KEY"],[43,13,30,13],[43,17,30,17],[43,22,30,10],[43,25,30,25],[43,34,30,34,"add"],[43,37,30,25],[43,38,30,38,"a"],[43,39,30,25],[43,41,30,41],[44,0,30,43,"fn"],[44,8,30,43,"fn"],[44,10,30,45],[44,11,30,46,"call"],[44,15,30,43],[44,16,30,51],[44,20,30,43],[44,22,30,57,"a"],[44,23,30,58],[44,28,30,63],[44,29,30,57],[44,32,30,67],[44,33,30,57],[44,36,30,71,"a"],[44,37,30,43],[45,0,30,75],[45,15,30,82],[45,19,30,75],[46,0,30,89],[46,7,30,10],[46,10,31,10],[46,19,31,19,"set"],[46,22,31,10],[46,23,31,23,"a"],[46,24,31,10],[46,26,31,26,"b"],[46,27,31,10],[46,29,31,29],[47,0,31,31,"fn"],[47,8,31,31,"fn"],[47,10,31,33],[47,11,31,34,"call"],[47,15,31,31],[47,16,31,39],[47,20,31,31],[47,22,31,45,"a"],[47,23,31,46],[47,28,31,51],[47,29,31,45],[47,32,31,55],[47,33,31,45],[47,36,31,59,"a"],[47,37,31,31],[47,39,31,62,"b"],[47,40,31,31],[48,0,31,66],[48,15,31,73],[48,19,31,66],[49,0,31,80],[49,7,23,12],[49,8,23,4],[50,0,33,3],[50,5,21,2],[52,0,34,2],[52,8,34,6],[52,15,34,13,"C"],[52,16,34,6],[52,20,34,18],[52,30,34,6],[52,34,34,32],[52,36,34,34,"IS_WEAK"],[52,43,34,41],[52,47,34,45,"proto"],[52,52,34,50],[52,53,34,51,"forEach"],[52,60,34,45],[52,64,34,62],[52,65,34,63,"fails"],[52,70,34,68],[52,71,34,69],[52,83,34,81],[53,0,35,4],[53,10,35,8,"C"],[53,11,35,4],[53,14,35,12,"entries"],[53,21,35,4],[53,24,35,22,"next"],[53,28,35,4],[54,0,36,3],[54,5,34,68],[54,6,34,32],[54,7,34,2],[54,9,36,7],[55,0,38,4,"C"],[55,6,38,4,"C"],[55,7,38,5],[55,10,38,8,"common"],[55,16,38,14],[55,17,38,15,"getConstructor"],[55,31,38,8],[55,32,38,30,"wrapper"],[55,39,38,8],[55,41,38,39,"NAME"],[55,45,38,8],[55,47,38,45,"IS_MAP"],[55,53,38,8],[55,55,38,53,"ADDER"],[55,60,38,8],[55,61,38,4],[56,0,39,4,"redefineAll"],[56,6,39,4,"redefineAll"],[56,17,39,15],[56,18,39,16,"C"],[56,19,39,17],[56,20,39,18,"prototype"],[56,29,39,15],[56,31,39,29,"methods"],[56,38,39,15],[56,39,39,4],[57,0,40,4,"meta"],[57,6,40,4,"meta"],[57,10,40,8],[57,11,40,9,"NEED"],[57,15,40,4],[57,18,40,16],[57,22,40,4],[58,0,41,3],[58,5,34,2],[58,11,41,9],[59,0,42,4],[59,10,42,8,"instance"],[59,18,42,16],[59,21,42,19],[59,25,42,23,"C"],[59,26,42,19],[59,28,42,4],[60,0,44,4],[60,10,44,8,"HASNT_CHAINING"],[60,24,44,22],[60,27,44,25,"instance"],[60,35,44,33],[60,36,44,34,"ADDER"],[60,41,44,33],[60,42,44,25],[60,43,44,41,"IS_WEAK"],[60,50,44,48],[60,53,44,51],[60,55,44,48],[60,58,44,56],[60,59,44,57],[60,60,44,25],[60,62,44,60],[60,63,44,25],[60,68,44,66,"instance"],[60,76,44,4],[61,0,46,4],[61,10,46,8,"THROWS_ON_PRIMITIVES"],[61,30,46,28],[61,33,46,31,"fails"],[61,38,46,36],[61,39,46,37],[61,51,46,49],[62,0,46,51,"instance"],[62,8,46,51,"instance"],[62,16,46,59],[62,17,46,60,"has"],[62,20,46,51],[62,21,46,64],[62,22,46,51],[63,0,46,69],[63,7,46,36],[63,8,46,4],[64,0,48,4],[64,10,48,8,"ACCEPT_ITERABLES"],[64,26,48,24],[64,29,48,27,"$iterDetect"],[64,40,48,38],[64,41,48,39],[64,51,48,49,"iter"],[64,55,48,39],[64,57,48,55],[65,0,48,57],[65,12,48,61,"C"],[65,13,48,57],[65,14,48,63,"iter"],[65,18,48,57],[66,0,48,71],[66,7,48,38],[66,8,48,4],[67,0,50,4],[67,10,50,8,"BUGGY_ZERO"],[67,20,50,18],[67,23,50,21],[67,24,50,22,"IS_WEAK"],[67,31,50,21],[67,35,50,33,"fails"],[67,40,50,38],[67,41,50,39],[67,53,50,51],[68,0,52,6],[68,12,52,10,"$instance"],[68,21,52,19],[68,24,52,22],[68,28,52,26,"C"],[68,29,52,22],[68,31,52,6],[69,0,53,6],[69,12,53,10,"index"],[69,17,53,15],[69,20,53,18],[69,21,53,6],[71,0,54,6],[71,15,54,13,"index"],[71,20,54,18],[71,22,54,6],[72,0,54,22,"$instance"],[72,10,54,22,"$instance"],[72,19,54,31],[72,20,54,32,"ADDER"],[72,25,54,31],[72,26,54,22],[72,27,54,39,"index"],[72,32,54,22],[72,34,54,46,"index"],[72,39,54,22],[73,0,54,6],[75,0,55,6],[75,15,55,13],[75,16,55,14,"$instance"],[75,25,55,23],[75,26,55,24,"has"],[75,29,55,14],[75,30,55,28],[75,31,55,29],[75,32,55,14],[75,33,55,6],[76,0,56,5],[76,7,50,38],[76,8,50,4],[78,0,57,4],[78,10,57,8],[78,11,57,9,"ACCEPT_ITERABLES"],[78,27,57,4],[78,29,57,27],[79,0,58,6,"C"],[79,8,58,6,"C"],[79,9,58,7],[79,12,58,10,"wrapper"],[79,19,58,17],[79,20,58,18],[79,30,58,28,"target"],[79,36,58,18],[79,38,58,36,"iterable"],[79,46,58,18],[79,48,58,46],[80,0,59,8,"anInstance"],[80,10,59,8,"anInstance"],[80,20,59,18],[80,21,59,19,"target"],[80,27,59,18],[80,29,59,27,"C"],[80,30,59,18],[80,32,59,30,"NAME"],[80,36,59,18],[80,37,59,8],[81,0,60,8],[81,14,60,12,"that"],[81,18,60,16],[81,21,60,19,"inheritIfRequired"],[81,38,60,36],[81,39,60,37],[81,43,60,41,"Base"],[81,47,60,37],[81,49,60,36],[81,51,60,49,"target"],[81,57,60,36],[81,59,60,57,"C"],[81,60,60,36],[81,61,60,8],[82,0,61,8],[82,14,61,12,"iterable"],[82,22,61,20],[82,26,61,24,"undefined"],[82,35,61,8],[82,37,61,35,"forOf"],[82,42,61,40],[82,43,61,41,"iterable"],[82,51,61,40],[82,53,61,51,"IS_MAP"],[82,59,61,40],[82,61,61,59,"that"],[82,65,61,63],[82,66,61,64,"ADDER"],[82,71,61,63],[82,72,61,40],[82,74,61,72,"that"],[82,78,61,40],[82,79,61,35],[83,0,62,8],[83,17,62,15,"that"],[83,21,62,8],[84,0,63,7],[84,9,58,17],[84,10,58,6],[85,0,64,6,"C"],[85,8,64,6,"C"],[85,9,64,7],[85,10,64,8,"prototype"],[85,19,64,6],[85,22,64,20,"proto"],[85,27,64,6],[86,0,65,6,"proto"],[86,8,65,6,"proto"],[86,13,65,11],[86,14,65,12,"constructor"],[86,25,65,6],[86,28,65,26,"C"],[86,29,65,6],[87,0,66,5],[89,0,67,4],[89,10,67,8,"THROWS_ON_PRIMITIVES"],[89,30,67,28],[89,34,67,32,"BUGGY_ZERO"],[89,44,67,4],[89,46,67,44],[90,0,68,6,"fixMethod"],[90,8,68,6,"fixMethod"],[90,17,68,15],[90,18,68,16],[90,26,68,15],[90,27,68,6],[91,0,69,6,"fixMethod"],[91,8,69,6,"fixMethod"],[91,17,69,15],[91,18,69,16],[91,23,69,15],[91,24,69,6],[92,0,70,6,"IS_MAP"],[92,8,70,6,"IS_MAP"],[92,14,70,12],[92,18,70,16,"fixMethod"],[92,27,70,25],[92,28,70,26],[92,33,70,25],[92,34,70,6],[93,0,71,5],[95,0,72,4],[95,10,72,8,"BUGGY_ZERO"],[95,20,72,18],[95,24,72,22,"HASNT_CHAINING"],[95,38,72,4],[95,40,72,38,"fixMethod"],[95,49,72,47],[95,50,72,48,"ADDER"],[95,55,72,47],[95,56,72,38],[96,0,74,4],[96,10,74,8,"IS_WEAK"],[96,17,74,15],[96,21,74,19,"proto"],[96,26,74,24],[96,27,74,25,"clear"],[96,32,74,4],[96,34,74,32],[96,41,74,39,"proto"],[96,46,74,44],[96,47,74,45,"clear"],[96,52,74,32],[97,0,75,3],[99,0,77,2,"setToStringTag"],[99,4,77,2,"setToStringTag"],[99,18,77,16],[99,19,77,17,"C"],[99,20,77,16],[99,22,77,20,"NAME"],[99,26,77,16],[99,27,77,2],[100,0,79,2,"O"],[100,4,79,2,"O"],[100,5,79,3],[100,6,79,4,"NAME"],[100,10,79,3],[100,11,79,2],[100,14,79,12,"C"],[100,15,79,2],[101,0,80,2,"$export"],[101,4,80,2,"$export"],[101,11,80,9],[101,12,80,10,"$export"],[101,19,80,17],[101,20,80,18,"G"],[101,21,80,10],[101,24,80,22,"$export"],[101,31,80,29],[101,32,80,30,"W"],[101,33,80,10],[101,36,80,34,"$export"],[101,43,80,41],[101,44,80,42,"F"],[101,45,80,34],[101,49,80,47,"C"],[101,50,80,48],[101,54,80,52,"Base"],[101,58,80,34],[101,59,80,9],[101,61,80,59,"O"],[101,62,80,9],[101,63,80,2],[102,0,82,2],[102,8,82,6],[102,9,82,7,"IS_WEAK"],[102,16,82,2],[102,18,82,16,"common"],[102,24,82,22],[102,25,82,23,"setStrong"],[102,34,82,16],[102,35,82,33,"C"],[102,36,82,16],[102,38,82,36,"NAME"],[102,42,82,16],[102,44,82,42,"IS_MAP"],[102,50,82,16],[103,0,84,2],[103,11,84,9,"C"],[103,12,84,2],[104,0,85,1],[104,3,15,0]]},"type":"js/module"}]}