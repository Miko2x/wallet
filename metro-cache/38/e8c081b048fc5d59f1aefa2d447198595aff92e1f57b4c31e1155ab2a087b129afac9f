{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _slicedToArray = function () {\n    function sliceIterator(arr, i) {\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n\n      try {\n        for (var _i = arr[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n\n          if (i && _arr.length === i) break;\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i[\"return\"]) _i[\"return\"]();\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n\n      return _arr;\n    }\n\n    return function (arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if ((typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\") in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n      }\n    };\n  }();\n\n  var linear = function linear(_ref, _ref3) {\n    var _ref2 = _slicedToArray(_ref, 2);\n\n    var a = _ref2[0];\n    var b = _ref2[1];\n\n    var _ref32 = _slicedToArray(_ref3, 2);\n\n    var c = _ref32[0];\n    var d = _ref32[1];\n\n    var f = function f(x) {\n      return c + (d - c) * (x - a) / (b - a);\n    };\n\n    f.inverse = function () {\n      return linear([c, d], [a, b]);\n    };\n\n    return f;\n  };\n\n  exports[\"default\"] = linear;\n  module.exports = exports[\"default\"];\n});","map":[[2,0,1,0],[4,0,3,0,"Object"],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,0],[4,24,3,22,"exports"],[4,31,3,0],[4,33,3,31],[4,45,3,0],[4,47,3,45],[5,0,4,2,"value"],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,0,3,45],[6,3,3,0],[8,0,7,0],[8,6,7,4,"_slicedToArray"],[8,20,7,18],[8,23,7,22],[8,35,7,34],[9,0,7,36],[9,13,7,45,"sliceIterator"],[9,26,7,36],[9,27,7,59,"arr"],[9,30,7,36],[9,32,7,64,"i"],[9,33,7,36],[9,35,7,67],[10,0,7,69],[10,10,7,73,"_arr"],[10,14,7,77],[10,17,7,80],[10,19,7,69],[11,0,7,84],[11,10,7,88,"_n"],[11,12,7,90],[11,15,7,93],[11,19,7,84],[12,0,7,99],[12,10,7,103,"_d"],[12,12,7,105],[12,15,7,108],[12,20,7,99],[13,0,7,115],[13,10,7,119,"_e"],[13,12,7,121],[13,15,7,124,"undefined"],[13,24,7,115],[15,0,7,135],[15,10,7,139],[16,0,7,141],[16,13,7,146],[16,17,7,150,"_i"],[16,19,7,152],[16,22,7,155,"arr"],[16,25,7,158],[16,57,7,159,"Symbol"],[16,63,7,165],[16,64,7,166,"iterator"],[16,72,7,158],[16,88,7,155],[16,90,7,146],[16,92,7,179,"_s"],[16,94,7,141],[16,96,7,183],[16,98,7,185,"_n"],[16,100,7,187],[16,103,7,190],[16,104,7,191,"_s"],[16,106,7,193],[16,109,7,196,"_i"],[16,111,7,198],[16,112,7,199,"next"],[16,116,7,196],[16,118,7,190],[16,120,7,207,"done"],[16,124,7,183],[16,125,7,141],[16,127,7,214,"_n"],[16,129,7,216],[16,132,7,219],[16,136,7,141],[16,138,7,225],[17,0,7,227,"_arr"],[17,10,7,227,"_arr"],[17,14,7,231],[17,15,7,232,"push"],[17,19,7,227],[17,20,7,237,"_s"],[17,22,7,239],[17,23,7,240,"value"],[17,28,7,227],[19,0,7,248],[19,14,7,252,"i"],[19,15,7,253],[19,19,7,257,"_arr"],[19,23,7,261],[19,24,7,262,"length"],[19,30,7,257],[19,35,7,273,"i"],[19,36,7,248],[19,38,7,276],[20,0,7,284],[21,0,7,286],[21,7,7,135],[21,8,7,287],[21,15,7,294,"err"],[21,18,7,287],[21,20,7,299],[22,0,7,301,"_d"],[22,8,7,301,"_d"],[22,10,7,303],[22,13,7,306],[22,17,7,301],[23,0,7,312,"_e"],[23,8,7,312,"_e"],[23,10,7,314],[23,13,7,317,"err"],[23,16,7,312],[24,0,7,323],[24,7,7,135],[24,16,7,332],[25,0,7,334],[25,12,7,338],[26,0,7,340],[26,14,7,344],[26,15,7,345,"_n"],[26,17,7,344],[26,21,7,351,"_i"],[26,23,7,353],[26,24,7,354],[26,32,7,353],[26,33,7,340],[26,35,7,365,"_i"],[26,37,7,367],[26,38,7,368],[26,46,7,367],[26,47,7,365],[27,0,7,382],[27,9,7,334],[27,18,7,391],[28,0,7,393],[28,14,7,397,"_d"],[28,16,7,393],[28,18,7,401],[28,24,7,407,"_e"],[28,26,7,401],[29,0,7,412],[30,0,7,414],[32,0,7,415],[32,13,7,422,"_arr"],[32,17,7,415],[33,0,7,429],[35,0,7,430],[35,11,7,437],[35,21,7,447,"arr"],[35,24,7,437],[35,26,7,452,"i"],[35,27,7,437],[35,29,7,455],[36,0,7,457],[36,10,7,461,"Array"],[36,15,7,466],[36,16,7,467,"isArray"],[36,23,7,461],[36,24,7,475,"arr"],[36,27,7,461],[36,28,7,457],[36,30,7,481],[37,0,7,483],[37,15,7,490,"arr"],[37,18,7,483],[38,0,7,496],[38,7,7,457],[38,13,7,502],[38,17,7,506],[38,49,7,506,"Symbol"],[38,55,7,512],[38,56,7,513,"iterator"],[38,64,7,506],[38,84,7,525,"Object"],[38,90,7,531],[38,91,7,532,"arr"],[38,94,7,531],[38,95,7,502],[38,97,7,538],[39,0,7,540],[39,15,7,547,"sliceIterator"],[39,28,7,560],[39,29,7,561,"arr"],[39,32,7,560],[39,34,7,566,"i"],[39,35,7,560],[39,36,7,540],[40,0,7,571],[40,7,7,502],[40,13,7,577],[41,0,7,579],[41,14,7,585],[41,18,7,589,"TypeError"],[41,27,7,585],[41,28,7,599],[41,82,7,585],[41,83,7,579],[42,0,7,657],[43,0,7,659],[43,5,7,430],[44,0,7,662],[44,3,7,21],[44,5,7,0],[46,0,9,0],[46,6,9,4,"linear"],[46,12,9,10],[46,15,9,13],[46,24,9,22,"linear"],[46,30,9,13],[46,31,9,29,"_ref"],[46,35,9,13],[46,37,9,35,"_ref3"],[46,42,9,13],[46,44,9,42],[47,0,10,2],[47,8,10,6,"_ref2"],[47,13,10,11],[47,16,10,14,"_slicedToArray"],[47,30,10,28],[47,31,10,29,"_ref"],[47,35,10,28],[47,37,10,35],[47,38,10,28],[47,39,10,2],[49,0,12,2],[49,8,12,6,"a"],[49,9,12,7],[49,12,12,10,"_ref2"],[49,17,12,15],[49,18,12,16],[49,19,12,15],[49,20,12,2],[50,0,13,2],[50,8,13,6,"b"],[50,9,13,7],[50,12,13,10,"_ref2"],[50,17,13,15],[50,18,13,16],[50,19,13,15],[50,20,13,2],[52,0,15,2],[52,8,15,6,"_ref32"],[52,14,15,12],[52,17,15,15,"_slicedToArray"],[52,31,15,29],[52,32,15,30,"_ref3"],[52,37,15,29],[52,39,15,37],[52,40,15,29],[52,41,15,2],[54,0,17,2],[54,8,17,6,"c"],[54,9,17,7],[54,12,17,10,"_ref32"],[54,18,17,16],[54,19,17,17],[54,20,17,16],[54,21,17,2],[55,0,18,2],[55,8,18,6,"d"],[55,9,18,7],[55,12,18,10,"_ref32"],[55,18,18,16],[55,19,18,17],[55,20,18,16],[55,21,18,2],[57,0,20,2],[57,8,20,6,"f"],[57,9,20,7],[57,12,20,10],[57,21,20,19,"f"],[57,22,20,10],[57,23,20,21,"x"],[57,24,20,10],[57,26,20,24],[58,0,21,4],[58,13,21,11,"c"],[58,14,21,12],[58,17,21,15],[58,18,21,16,"d"],[58,19,21,17],[58,22,21,20,"c"],[58,23,21,15],[58,28,21,26,"x"],[58,29,21,27],[58,32,21,30,"a"],[58,33,21,15],[58,38,21,36,"b"],[58,39,21,37],[58,42,21,40,"a"],[58,43,21,15],[58,44,21,4],[59,0,22,3],[59,5,20,2],[61,0,24,2,"f"],[61,4,24,2,"f"],[61,5,24,3],[61,6,24,4,"inverse"],[61,13,24,2],[61,16,24,14],[61,28,24,26],[62,0,25,4],[62,13,25,11,"linear"],[62,19,25,17],[62,20,25,18],[62,21,25,19,"c"],[62,22,25,18],[62,24,25,22,"d"],[62,25,25,18],[62,26,25,17],[62,28,25,26],[62,29,25,27,"a"],[62,30,25,26],[62,32,25,30,"b"],[62,33,25,26],[62,34,25,17],[62,35,25,4],[63,0,26,3],[63,5,24,2],[65,0,27,2],[65,11,27,9,"f"],[65,12,27,2],[66,0,28,1],[66,3,9,0],[68,0,30,0,"exports"],[68,2,30,0,"exports"],[68,9,30,7],[68,10,30,8],[68,19,30,7],[68,20,30,0],[68,23,30,21,"linear"],[68,29,30,0],[69,0,31,0,"module"],[69,2,31,0,"module"],[69,8,31,6],[69,9,31,7,"exports"],[69,16,31,0],[69,19,31,17,"exports"],[69,26,31,24],[69,27,31,25],[69,36,31,24],[69,37,31,0]]},"type":"js/module"}]}