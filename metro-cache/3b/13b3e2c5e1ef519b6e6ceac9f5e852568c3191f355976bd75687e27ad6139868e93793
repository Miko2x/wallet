{"dependencies":[{"name":"./_ctx","data":{"isAsync":false}},{"name":"./_iter-call","data":{"isAsync":false}},{"name":"./_is-array-iter","data":{"isAsync":false}},{"name":"./_an-object","data":{"isAsync":false}},{"name":"./_to-length","data":{"isAsync":false}},{"name":"./core.get-iterator-method","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var ctx = _$$_REQUIRE(_dependencyMap[0], \"./_ctx\");\n\n  var call = _$$_REQUIRE(_dependencyMap[1], \"./_iter-call\");\n\n  var isArrayIter = _$$_REQUIRE(_dependencyMap[2], \"./_is-array-iter\");\n\n  var anObject = _$$_REQUIRE(_dependencyMap[3], \"./_an-object\");\n\n  var toLength = _$$_REQUIRE(_dependencyMap[4], \"./_to-length\");\n\n  var getIterFn = _$$_REQUIRE(_dependencyMap[5], \"./core.get-iterator-method\");\n\n  var BREAK = {};\n  var RETURN = {};\n\n  var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n    var iterFn = ITERATOR ? function () {\n      return iterable;\n    } : getIterFn(iterable);\n    var f = ctx(fn, that, entries ? 2 : 1);\n    var index = 0;\n    var length, step, iterator, result;\n    if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n    if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n      result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n      if (result === BREAK || result === RETURN) return result;\n    } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n      result = call(iterator, f, step.value, entries);\n      if (result === BREAK || result === RETURN) return result;\n    }\n  };\n\n  exports.BREAK = BREAK;\n  exports.RETURN = RETURN;\n});","map":[[2,0,1,0],[2,6,1,4,"ctx"],[2,9,1,7],[2,12,1,10,"require"],[2,23,1,17],[2,52,1,0],[4,0,2,0],[4,6,2,4,"call"],[4,10,2,8],[4,13,2,11,"require"],[4,24,2,18],[4,59,2,0],[6,0,3,0],[6,6,3,4,"isArrayIter"],[6,17,3,15],[6,20,3,18,"require"],[6,31,3,25],[6,70,3,0],[8,0,4,0],[8,6,4,4,"anObject"],[8,14,4,12],[8,17,4,15,"require"],[8,28,4,22],[8,63,4,0],[10,0,5,0],[10,6,5,4,"toLength"],[10,14,5,12],[10,17,5,15,"require"],[10,28,5,22],[10,63,5,0],[12,0,6,0],[12,6,6,4,"getIterFn"],[12,15,6,13],[12,18,6,16,"require"],[12,29,6,23],[12,78,6,0],[14,0,7,0],[14,6,7,4,"BREAK"],[14,11,7,9],[14,14,7,12],[14,16,7,0],[15,0,8,0],[15,6,8,4,"RETURN"],[15,12,8,10],[15,15,8,13],[15,17,8,0],[17,0,9,0],[17,6,9,4,"exports"],[17,13,9,11],[17,16,9,14,"module"],[17,22,9,20],[17,23,9,21,"exports"],[17,30,9,14],[17,33,9,31],[17,43,9,41,"iterable"],[17,51,9,31],[17,53,9,51,"entries"],[17,60,9,31],[17,62,9,60,"fn"],[17,64,9,31],[17,66,9,64,"that"],[17,70,9,31],[17,72,9,70,"ITERATOR"],[17,80,9,31],[17,82,9,80],[18,0,10,2],[18,8,10,6,"iterFn"],[18,14,10,12],[18,17,10,15,"ITERATOR"],[18,25,10,23],[18,28,10,26],[18,40,10,38],[19,0,10,40],[19,13,10,47,"iterable"],[19,21,10,40],[20,0,10,58],[20,5,10,23],[20,8,10,61,"getIterFn"],[20,17,10,70],[20,18,10,71,"iterable"],[20,26,10,70],[20,27,10,2],[21,0,11,2],[21,8,11,6,"f"],[21,9,11,7],[21,12,11,10,"ctx"],[21,15,11,13],[21,16,11,14,"fn"],[21,18,11,13],[21,20,11,18,"that"],[21,24,11,13],[21,26,11,24,"entries"],[21,33,11,31],[21,36,11,34],[21,37,11,31],[21,40,11,38],[21,41,11,13],[21,42,11,2],[22,0,12,2],[22,8,12,6,"index"],[22,13,12,11],[22,16,12,14],[22,17,12,2],[23,0,13,2],[23,8,13,6,"length"],[23,14,13,2],[23,16,13,14,"step"],[23,20,13,2],[23,22,13,20,"iterator"],[23,30,13,2],[23,32,13,30,"result"],[23,38,13,2],[24,0,14,2],[24,8,14,6],[24,15,14,13,"iterFn"],[24,21,14,6],[24,25,14,23],[24,35,14,2],[24,37,14,35],[24,43,14,41,"TypeError"],[24,52,14,50],[24,53,14,51,"iterable"],[24,61,14,59],[24,64,14,62],[24,83,14,50],[24,84,14,35],[25,0,16,2],[25,8,16,6,"isArrayIter"],[25,19,16,17],[25,20,16,18,"iterFn"],[25,26,16,17],[25,27,16,2],[25,29,16,27],[25,34,16,32,"length"],[25,40,16,38],[25,43,16,41,"toLength"],[25,51,16,49],[25,52,16,50,"iterable"],[25,60,16,58],[25,61,16,59,"length"],[25,67,16,49],[25,68,16,27],[25,70,16,68,"length"],[25,76,16,74],[25,79,16,77,"index"],[25,84,16,27],[25,86,16,84,"index"],[25,91,16,89],[25,93,16,27],[25,95,16,93],[26,0,17,4,"result"],[26,6,17,4,"result"],[26,12,17,10],[26,15,17,13,"entries"],[26,22,17,20],[26,25,17,23,"f"],[26,26,17,24],[26,27,17,25,"anObject"],[26,35,17,33],[26,36,17,34,"step"],[26,40,17,38],[26,43,17,41,"iterable"],[26,51,17,49],[26,52,17,50,"index"],[26,57,17,49],[26,58,17,33],[26,59,17,25],[26,60,17,58],[26,61,17,25],[26,62,17,24],[26,64,17,62,"step"],[26,68,17,66],[26,69,17,67],[26,70,17,66],[26,71,17,24],[26,72,17,20],[26,75,17,73,"f"],[26,76,17,74],[26,77,17,75,"iterable"],[26,85,17,83],[26,86,17,84,"index"],[26,91,17,83],[26,92,17,74],[26,93,17,4],[27,0,18,4],[27,10,18,8,"result"],[27,16,18,14],[27,21,18,19,"BREAK"],[27,26,18,8],[27,30,18,28,"result"],[27,36,18,34],[27,41,18,39,"RETURN"],[27,47,18,4],[27,49,18,47],[27,56,18,54,"result"],[27,62,18,47],[28,0,19,3],[28,5,16,2],[28,11,19,9],[28,16,19,14,"iterator"],[28,24,19,22],[28,27,19,25,"iterFn"],[28,33,19,31],[28,34,19,32,"call"],[28,38,19,25],[28,39,19,37,"iterable"],[28,47,19,25],[28,48,19,9],[28,50,19,48],[28,51,19,49],[28,52,19,50,"step"],[28,56,19,54],[28,59,19,57,"iterator"],[28,67,19,65],[28,68,19,66,"next"],[28,72,19,57],[28,74,19,49],[28,76,19,74,"done"],[28,80,19,9],[28,83,19,81],[29,0,20,4,"result"],[29,6,20,4,"result"],[29,12,20,10],[29,15,20,13,"call"],[29,19,20,17],[29,20,20,18,"iterator"],[29,28,20,17],[29,30,20,28,"f"],[29,31,20,17],[29,33,20,31,"step"],[29,37,20,35],[29,38,20,36,"value"],[29,43,20,17],[29,45,20,43,"entries"],[29,52,20,17],[29,53,20,4],[30,0,21,4],[30,10,21,8,"result"],[30,16,21,14],[30,21,21,19,"BREAK"],[30,26,21,8],[30,30,21,28,"result"],[30,36,21,34],[30,41,21,39,"RETURN"],[30,47,21,4],[30,49,21,47],[30,56,21,54,"result"],[30,62,21,47],[31,0,22,3],[32,0,23,1],[32,3,9,0],[34,0,24,0,"exports"],[34,2,24,0,"exports"],[34,9,24,7],[34,10,24,8,"BREAK"],[34,15,24,0],[34,18,24,16,"BREAK"],[34,23,24,0],[35,0,25,0,"exports"],[35,2,25,0,"exports"],[35,9,25,7],[35,10,25,8,"RETURN"],[35,16,25,0],[35,19,25,17,"RETURN"],[35,25,25,0]]},"type":"js/module"}]}