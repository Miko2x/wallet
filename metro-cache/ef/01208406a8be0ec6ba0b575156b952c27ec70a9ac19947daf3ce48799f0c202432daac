{"dependencies":[{"name":"./_global","data":{"isAsync":false}},{"name":"./_inherit-if-required","data":{"isAsync":false}},{"name":"./_object-dp","data":{"isAsync":false}},{"name":"./_object-gopn","data":{"isAsync":false}},{"name":"./_is-regexp","data":{"isAsync":false}},{"name":"./_flags","data":{"isAsync":false}},{"name":"./_descriptors","data":{"isAsync":false}},{"name":"./_fails","data":{"isAsync":false}},{"name":"./_wks","data":{"isAsync":false}},{"name":"./_redefine","data":{"isAsync":false}},{"name":"./_set-species","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var global = _$$_REQUIRE(_dependencyMap[0], \"./_global\");\n\n  var inheritIfRequired = _$$_REQUIRE(_dependencyMap[1], \"./_inherit-if-required\");\n\n  var dP = _$$_REQUIRE(_dependencyMap[2], \"./_object-dp\").f;\n\n  var gOPN = _$$_REQUIRE(_dependencyMap[3], \"./_object-gopn\").f;\n\n  var isRegExp = _$$_REQUIRE(_dependencyMap[4], \"./_is-regexp\");\n\n  var $flags = _$$_REQUIRE(_dependencyMap[5], \"./_flags\");\n\n  var $RegExp = global.RegExp;\n  var Base = $RegExp;\n  var proto = $RegExp.prototype;\n  var re1 = /a/g;\n  var re2 = /a/g;\n  var CORRECT_NEW = new $RegExp(re1) !== re1;\n\n  if (_$$_REQUIRE(_dependencyMap[6], \"./_descriptors\") && (!CORRECT_NEW || _$$_REQUIRE(_dependencyMap[7], \"./_fails\")(function () {\n    re2[_$$_REQUIRE(_dependencyMap[8], \"./_wks\")('match')] = false;\n    return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n  }))) {\n    $RegExp = function RegExp(p, f) {\n      var tiRE = this instanceof $RegExp;\n      var piRE = isRegExp(p);\n      var fiU = f === undefined;\n      return !tiRE && piRE && p.constructor === $RegExp && fiU ? p : inheritIfRequired(CORRECT_NEW ? new Base(piRE && !fiU ? p.source : p, f) : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f), tiRE ? this : proto, $RegExp);\n    };\n\n    var proxy = function proxy(key) {\n      key in $RegExp || dP($RegExp, key, {\n        configurable: true,\n        get: function get() {\n          return Base[key];\n        },\n        set: function set(it) {\n          Base[key] = it;\n        }\n      });\n    };\n\n    for (var keys = gOPN(Base), i = 0; keys.length > i;) {\n      proxy(keys[i++]);\n    }\n\n    proto.constructor = $RegExp;\n    $RegExp.prototype = proto;\n\n    _$$_REQUIRE(_dependencyMap[9], \"./_redefine\")(global, 'RegExp', $RegExp);\n  }\n\n  _$$_REQUIRE(_dependencyMap[10], \"./_set-species\")('RegExp');\n});","map":[[2,0,1,0],[2,6,1,4,"global"],[2,12,1,10],[2,15,1,13,"require"],[2,26,1,20],[2,58,1,0],[4,0,2,0],[4,6,2,4,"inheritIfRequired"],[4,23,2,21],[4,26,2,24,"require"],[4,37,2,31],[4,82,2,0],[6,0,3,0],[6,6,3,4,"dP"],[6,8,3,6],[6,11,3,9,"require"],[6,22,3,16],[6,57,3,9],[6,58,3,33,"f"],[6,59,3,0],[8,0,4,0],[8,6,4,4,"gOPN"],[8,10,4,8],[8,13,4,11,"require"],[8,24,4,18],[8,61,4,11],[8,62,4,37,"f"],[8,63,4,0],[10,0,5,0],[10,6,5,4,"isRegExp"],[10,14,5,12],[10,17,5,15,"require"],[10,28,5,22],[10,63,5,0],[12,0,6,0],[12,6,6,4,"$flags"],[12,12,6,10],[12,15,6,13,"require"],[12,26,6,20],[12,57,6,0],[14,0,7,0],[14,6,7,4,"$RegExp"],[14,13,7,11],[14,16,7,14,"global"],[14,22,7,20],[14,23,7,21,"RegExp"],[14,29,7,0],[15,0,8,0],[15,6,8,4,"Base"],[15,10,8,8],[15,13,8,11,"$RegExp"],[15,20,8,0],[16,0,9,0],[16,6,9,4,"proto"],[16,11,9,9],[16,14,9,12,"$RegExp"],[16,21,9,19],[16,22,9,20,"prototype"],[16,31,9,0],[17,0,10,0],[17,6,10,4,"re1"],[17,9,10,7],[17,12,10,10],[17,16,10,0],[18,0,11,0],[18,6,11,4,"re2"],[18,9,11,7],[18,12,11,10],[18,16,11,0],[19,0,13,0],[19,6,13,4,"CORRECT_NEW"],[19,17,13,15],[19,20,13,18],[19,24,13,22,"$RegExp"],[19,31,13,18],[19,32,13,30,"re1"],[19,35,13,18],[19,41,13,39,"re1"],[19,44,13,0],[21,0,15,0],[21,6,15,4,"require"],[21,17,15,11],[21,54,15,4],[21,59,15,34],[21,60,15,35,"CORRECT_NEW"],[21,71,15,34],[21,75,15,50,"require"],[21,86,15,57],[21,117,15,50],[21,118,15,70],[21,130,15,82],[22,0,16,2,"re2"],[22,4,16,2,"re2"],[22,7,16,5],[22,8,16,6,"require"],[22,19,16,13],[22,48,16,6],[22,49,16,24],[22,56,16,6],[22,57,16,5],[22,58,16,2],[22,61,16,36],[22,66,16,2],[23,0,18,2],[23,11,18,9,"$RegExp"],[23,18,18,16],[23,19,18,17,"re1"],[23,22,18,16],[23,23,18,9],[23,27,18,25,"re1"],[23,30,18,9],[23,34,18,32,"$RegExp"],[23,41,18,39],[23,42,18,40,"re2"],[23,45,18,39],[23,46,18,32],[23,50,18,48,"re2"],[23,53,18,9],[23,57,18,55,"$RegExp"],[23,64,18,62],[23,65,18,63,"re1"],[23,68,18,62],[23,70,18,68],[23,73,18,62],[23,74,18,55],[23,78,18,76],[23,84,18,2],[24,0,19,1],[24,3,15,50],[24,4,15,4],[24,5,15,0],[24,7,19,5],[25,0,20,2,"$RegExp"],[25,4,20,2,"$RegExp"],[25,11,20,9],[25,14,20,12],[25,23,20,21,"RegExp"],[25,29,20,12],[25,30,20,28,"p"],[25,31,20,12],[25,33,20,31,"f"],[25,34,20,12],[25,36,20,34],[26,0,21,4],[26,10,21,8,"tiRE"],[26,14,21,12],[26,17,21,15],[26,33,21,31,"$RegExp"],[26,40,21,4],[27,0,22,4],[27,10,22,8,"piRE"],[27,14,22,12],[27,17,22,15,"isRegExp"],[27,25,22,23],[27,26,22,24,"p"],[27,27,22,23],[27,28,22,4],[28,0,23,4],[28,10,23,8,"fiU"],[28,13,23,11],[28,16,23,14,"f"],[28,17,23,15],[28,22,23,20,"undefined"],[28,31,23,4],[29,0,24,4],[29,13,24,11],[29,14,24,12,"tiRE"],[29,18,24,11],[29,22,24,20,"piRE"],[29,26,24,11],[29,30,24,28,"p"],[29,31,24,29],[29,32,24,30,"constructor"],[29,43,24,28],[29,48,24,46,"$RegExp"],[29,55,24,11],[29,59,24,57,"fiU"],[29,62,24,11],[29,65,24,63,"p"],[29,66,24,11],[29,69,25,8,"inheritIfRequired"],[29,86,25,25],[29,87,25,26,"CORRECT_NEW"],[29,98,25,37],[29,101,26,10],[29,105,26,14,"Base"],[29,109,26,10],[29,110,26,19,"piRE"],[29,114,26,23],[29,118,26,27],[29,119,26,28,"fiU"],[29,122,26,19],[29,125,26,34,"p"],[29,126,26,35],[29,127,26,36,"source"],[29,133,26,19],[29,136,26,45,"p"],[29,137,26,10],[29,139,26,48,"f"],[29,140,26,10],[29,141,25,37],[29,144,27,10,"Base"],[29,148,27,14],[29,149,27,15],[29,150,27,16,"piRE"],[29,154,27,20],[29,157,27,23,"p"],[29,158,27,24],[29,170,27,36,"$RegExp"],[29,177,27,15],[29,181,27,47,"p"],[29,182,27,48],[29,183,27,49,"source"],[29,189,27,15],[29,192,27,58,"p"],[29,193,27,14],[29,195,27,61,"piRE"],[29,199,27,65],[29,203,27,69,"fiU"],[29,206,27,61],[29,209,27,75,"$flags"],[29,215,27,81],[29,216,27,82,"call"],[29,220,27,75],[29,221,27,87,"p"],[29,222,27,75],[29,223,27,61],[29,226,27,92,"f"],[29,227,27,14],[29,228,25,25],[29,230,28,8,"tiRE"],[29,234,28,12],[29,237,28,15],[29,241,28,12],[29,244,28,22,"proto"],[29,249,25,25],[29,251,28,29,"$RegExp"],[29,258,25,25],[29,259,24,4],[30,0,29,3],[30,5,20,2],[32,0,30,2],[32,8,30,6,"proxy"],[32,13,30,11],[32,16,30,14],[32,25,30,6,"proxy"],[32,30,30,14],[32,31,30,24,"key"],[32,34,30,14],[32,36,30,29],[33,0,31,4,"key"],[33,6,31,4,"key"],[33,9,31,7],[33,13,31,11,"$RegExp"],[33,20,31,4],[33,24,31,22,"dP"],[33,26,31,24],[33,27,31,25,"$RegExp"],[33,34,31,24],[33,36,31,34,"key"],[33,39,31,24],[33,41,31,39],[34,0,32,6,"configurable"],[34,8,32,6,"configurable"],[34,20,32,18],[34,22,32,20],[34,26,31,39],[35,0,33,6,"get"],[35,8,33,6,"get"],[35,11,33,9],[35,13,33,11],[35,28,33,23],[36,0,33,25],[36,17,33,32,"Base"],[36,21,33,36],[36,22,33,37,"key"],[36,25,33,36],[36,26,33,25],[37,0,33,44],[37,9,31,39],[38,0,34,6,"set"],[38,8,34,6,"set"],[38,11,34,9],[38,13,34,11],[38,26,34,21,"it"],[38,28,34,11],[38,30,34,25],[39,0,34,27,"Base"],[39,10,34,27,"Base"],[39,14,34,31],[39,15,34,32,"key"],[39,18,34,31],[39,19,34,27],[39,22,34,39,"it"],[39,24,34,27],[40,0,34,44],[41,0,31,39],[41,7,31,24],[41,8,31,4],[42,0,36,3],[42,5,30,2],[44,0,37,2],[44,9,37,7],[44,13,37,11,"keys"],[44,17,37,15],[44,20,37,18,"gOPN"],[44,24,37,22],[44,25,37,23,"Base"],[44,29,37,22],[44,30,37,7],[44,32,37,30,"i"],[44,33,37,31],[44,36,37,34],[44,37,37,2],[44,39,37,37,"keys"],[44,43,37,41],[44,44,37,42,"length"],[44,50,37,37],[44,53,37,51,"i"],[44,54,37,2],[45,0,37,55,"proxy"],[45,6,37,55,"proxy"],[45,11,37,60],[45,12,37,61,"keys"],[45,16,37,65],[45,17,37,66,"i"],[45,18,37,67],[45,20,37,65],[45,21,37,60],[45,22,37,55],[46,0,37,2],[48,0,38,2,"proto"],[48,4,38,2,"proto"],[48,9,38,7],[48,10,38,8,"constructor"],[48,21,38,2],[48,24,38,22,"$RegExp"],[48,31,38,2],[49,0,39,2,"$RegExp"],[49,4,39,2,"$RegExp"],[49,11,39,9],[49,12,39,10,"prototype"],[49,21,39,2],[49,24,39,22,"proto"],[49,29,39,2],[51,0,40,2,"require"],[51,4,40,2,"require"],[51,15,40,9],[51,49,40,2],[51,50,40,25,"global"],[51,56,40,2],[51,58,40,33],[51,66,40,2],[51,68,40,43,"$RegExp"],[51,75,40,2],[52,0,41,1],[54,0,43,0,"require"],[54,2,43,0,"require"],[54,13,43,7],[54,51,43,0],[54,52,43,26],[54,60,43,0]]},"type":"js/module"}]}