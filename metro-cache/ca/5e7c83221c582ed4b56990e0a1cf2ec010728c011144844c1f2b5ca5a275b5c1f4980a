{"dependencies":[{"name":"../../utils/arrays","data":{"isAsync":false}},{"name":"../../utils/objects","data":{"isAsync":false}},{"name":"../asts","data":{"isAsync":false}},{"name":"../visitor","data":{"isAsync":false}},{"name":"../opcodes","data":{"isAsync":false}},{"name":"../js","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var arrays = _$$_REQUIRE(_dependencyMap[0], \"../../utils/arrays\"),\n      objects = _$$_REQUIRE(_dependencyMap[1], \"../../utils/objects\"),\n      asts = _$$_REQUIRE(_dependencyMap[2], \"../asts\"),\n      visitor = _$$_REQUIRE(_dependencyMap[3], \"../visitor\"),\n      op = _$$_REQUIRE(_dependencyMap[4], \"../opcodes\"),\n      js = _$$_REQUIRE(_dependencyMap[5], \"../js\");\n\n  function generateBytecode(ast) {\n    var consts = [];\n\n    function addConst(value) {\n      var index = arrays.indexOf(consts, value);\n      return index === -1 ? consts.push(value) - 1 : index;\n    }\n\n    function addFunctionConst(params, code) {\n      return addConst(\"function(\" + params.join(\", \") + \") {\" + code + \"}\");\n    }\n\n    function buildSequence() {\n      return Array.prototype.concat.apply([], arguments);\n    }\n\n    function buildCondition(condCode, thenCode, elseCode) {\n      return condCode.concat([thenCode.length, elseCode.length], thenCode, elseCode);\n    }\n\n    function buildLoop(condCode, bodyCode) {\n      return condCode.concat([bodyCode.length], bodyCode);\n    }\n\n    function buildCall(functionIndex, delta, env, sp) {\n      var params = arrays.map(objects.values(env), function (p) {\n        return sp - p;\n      });\n      return [op.CALL, functionIndex, delta, params.length].concat(params);\n    }\n\n    function buildSimplePredicate(expression, negative, context) {\n      return buildSequence([op.PUSH_CURR_POS], [op.SILENT_FAILS_ON], generate(expression, {\n        sp: context.sp + 1,\n        env: objects.clone(context.env),\n        action: null\n      }), [op.SILENT_FAILS_OFF], buildCondition([negative ? op.IF_ERROR : op.IF_NOT_ERROR], buildSequence([op.POP], [negative ? op.POP : op.POP_CURR_POS], [op.PUSH_UNDEFINED]), buildSequence([op.POP], [negative ? op.POP_CURR_POS : op.POP], [op.PUSH_FAILED])));\n    }\n\n    function buildSemanticPredicate(code, negative, context) {\n      var functionIndex = addFunctionConst(objects.keys(context.env), code);\n      return buildSequence([op.UPDATE_SAVED_POS], buildCall(functionIndex, 0, context.env, context.sp), buildCondition([op.IF], buildSequence([op.POP], negative ? [op.PUSH_FAILED] : [op.PUSH_UNDEFINED]), buildSequence([op.POP], negative ? [op.PUSH_UNDEFINED] : [op.PUSH_FAILED])));\n    }\n\n    function buildAppendLoop(expressionCode) {\n      return buildLoop([op.WHILE_NOT_ERROR], buildSequence([op.APPEND], expressionCode));\n    }\n\n    var generate = visitor.build({\n      grammar: function grammar(node) {\n        arrays.each(node.rules, generate);\n        node.consts = consts;\n      },\n      rule: function rule(node) {\n        node.bytecode = generate(node.expression, {\n          sp: -1,\n          env: {},\n          action: null\n        });\n      },\n      named: function named(node, context) {\n        var nameIndex = addConst('peg$otherExpectation(\"' + js.stringEscape(node.name) + '\")');\n        return buildSequence([op.SILENT_FAILS_ON], generate(node.expression, context), [op.SILENT_FAILS_OFF], buildCondition([op.IF_ERROR], [op.FAIL, nameIndex], []));\n      },\n      choice: function choice(node, context) {\n        function buildAlternativesCode(alternatives, context) {\n          return buildSequence(generate(alternatives[0], {\n            sp: context.sp,\n            env: objects.clone(context.env),\n            action: null\n          }), alternatives.length > 1 ? buildCondition([op.IF_ERROR], buildSequence([op.POP], buildAlternativesCode(alternatives.slice(1), context)), []) : []);\n        }\n\n        return buildAlternativesCode(node.alternatives, context);\n      },\n      action: function action(node, context) {\n        var env = objects.clone(context.env),\n            emitCall = node.expression.type !== \"sequence\" || node.expression.elements.length === 0,\n            expressionCode = generate(node.expression, {\n          sp: context.sp + (emitCall ? 1 : 0),\n          env: env,\n          action: node\n        }),\n            functionIndex = addFunctionConst(objects.keys(env), node.code);\n        return emitCall ? buildSequence([op.PUSH_CURR_POS], expressionCode, buildCondition([op.IF_NOT_ERROR], buildSequence([op.LOAD_SAVED_POS, 1], buildCall(functionIndex, 1, env, context.sp + 2)), []), [op.NIP]) : expressionCode;\n      },\n      sequence: function sequence(node, context) {\n        function buildElementsCode(elements, context) {\n          var processedCount, functionIndex;\n\n          if (elements.length > 0) {\n            processedCount = node.elements.length - elements.slice(1).length;\n            return buildSequence(generate(elements[0], {\n              sp: context.sp,\n              env: context.env,\n              action: null\n            }), buildCondition([op.IF_NOT_ERROR], buildElementsCode(elements.slice(1), {\n              sp: context.sp + 1,\n              env: context.env,\n              action: context.action\n            }), buildSequence(processedCount > 1 ? [op.POP_N, processedCount] : [op.POP], [op.POP_CURR_POS], [op.PUSH_FAILED])));\n          } else {\n            if (context.action) {\n              functionIndex = addFunctionConst(objects.keys(context.env), context.action.code);\n              return buildSequence([op.LOAD_SAVED_POS, node.elements.length], buildCall(functionIndex, node.elements.length, context.env, context.sp), [op.NIP]);\n            } else {\n              return buildSequence([op.WRAP, node.elements.length], [op.NIP]);\n            }\n          }\n        }\n\n        return buildSequence([op.PUSH_CURR_POS], buildElementsCode(node.elements, {\n          sp: context.sp + 1,\n          env: context.env,\n          action: context.action\n        }));\n      },\n      labeled: function labeled(node, context) {\n        var env = objects.clone(context.env);\n        context.env[node.label] = context.sp + 1;\n        return generate(node.expression, {\n          sp: context.sp,\n          env: env,\n          action: null\n        });\n      },\n      text: function text(node, context) {\n        return buildSequence([op.PUSH_CURR_POS], generate(node.expression, {\n          sp: context.sp + 1,\n          env: objects.clone(context.env),\n          action: null\n        }), buildCondition([op.IF_NOT_ERROR], buildSequence([op.POP], [op.TEXT]), [op.NIP]));\n      },\n      simple_and: function simple_and(node, context) {\n        return buildSimplePredicate(node.expression, false, context);\n      },\n      simple_not: function simple_not(node, context) {\n        return buildSimplePredicate(node.expression, true, context);\n      },\n      optional: function optional(node, context) {\n        return buildSequence(generate(node.expression, {\n          sp: context.sp,\n          env: objects.clone(context.env),\n          action: null\n        }), buildCondition([op.IF_ERROR], buildSequence([op.POP], [op.PUSH_NULL]), []));\n      },\n      zero_or_more: function zero_or_more(node, context) {\n        var expressionCode = generate(node.expression, {\n          sp: context.sp + 1,\n          env: objects.clone(context.env),\n          action: null\n        });\n        return buildSequence([op.PUSH_EMPTY_ARRAY], expressionCode, buildAppendLoop(expressionCode), [op.POP]);\n      },\n      one_or_more: function one_or_more(node, context) {\n        var expressionCode = generate(node.expression, {\n          sp: context.sp + 1,\n          env: objects.clone(context.env),\n          action: null\n        });\n        return buildSequence([op.PUSH_EMPTY_ARRAY], expressionCode, buildCondition([op.IF_NOT_ERROR], buildSequence(buildAppendLoop(expressionCode), [op.POP]), buildSequence([op.POP], [op.POP], [op.PUSH_FAILED])));\n      },\n      group: function group(node, context) {\n        return generate(node.expression, {\n          sp: context.sp,\n          env: objects.clone(context.env),\n          action: null\n        });\n      },\n      semantic_and: function semantic_and(node, context) {\n        return buildSemanticPredicate(node.code, false, context);\n      },\n      semantic_not: function semantic_not(node, context) {\n        return buildSemanticPredicate(node.code, true, context);\n      },\n      rule_ref: function rule_ref(node) {\n        return [op.RULE, asts.indexOfRule(ast, node.name)];\n      },\n      literal: function literal(node) {\n        var stringIndex, expectedIndex;\n\n        if (node.value.length > 0) {\n          stringIndex = addConst('\"' + js.stringEscape(node.ignoreCase ? node.value.toLowerCase() : node.value) + '\"');\n          expectedIndex = addConst('peg$literalExpectation(' + '\"' + js.stringEscape(node.value) + '\", ' + node.ignoreCase + ')');\n          return buildCondition(node.ignoreCase ? [op.MATCH_STRING_IC, stringIndex] : [op.MATCH_STRING, stringIndex], node.ignoreCase ? [op.ACCEPT_N, node.value.length] : [op.ACCEPT_STRING, stringIndex], [op.FAIL, expectedIndex]);\n        } else {\n          stringIndex = addConst('\"\"');\n          return [op.PUSH, stringIndex];\n        }\n      },\n      \"class\": function _class(node) {\n        var regexp, parts, regexpIndex, expectedIndex;\n\n        if (node.parts.length > 0) {\n          regexp = '/^[' + (node.inverted ? '^' : '') + arrays.map(node.parts, function (part) {\n            return part instanceof Array ? js.regexpClassEscape(part[0]) + '-' + js.regexpClassEscape(part[1]) : js.regexpClassEscape(part);\n          }).join('') + ']/' + (node.ignoreCase ? 'i' : '');\n        } else {\n          regexp = node.inverted ? '/^[\\\\S\\\\s]/' : '/^(?!)/';\n        }\n\n        parts = '[' + arrays.map(node.parts, function (part) {\n          return part instanceof Array ? '[\"' + js.stringEscape(part[0]) + '\", \"' + js.stringEscape(part[1]) + '\"]' : '\"' + js.stringEscape(part) + '\"';\n        }).join(', ') + ']';\n        regexpIndex = addConst(regexp);\n        expectedIndex = addConst('peg$classExpectation(' + parts + ', ' + node.inverted + ', ' + node.ignoreCase + ')');\n        return buildCondition([op.MATCH_REGEXP, regexpIndex], [op.ACCEPT_N, 1], [op.FAIL, expectedIndex]);\n      },\n      any: function any() {\n        var expectedIndex = addConst('peg$anyExpectation()');\n        return buildCondition([op.MATCH_ANY], [op.ACCEPT_N, 1], [op.FAIL, expectedIndex]);\n      }\n    });\n    generate(ast);\n  }\n\n  module.exports = generateBytecode;\n});","map":[[2,0,1,0],[4,0,3,0],[4,6,3,4,"arrays"],[4,12,3,10],[4,15,3,14,"require"],[4,26,3,21],[4,67,3,0],[5,0,3,0],[5,6,4,4,"objects"],[5,13,4,11],[5,16,4,14,"require"],[5,27,4,21],[5,69,3,0],[6,0,3,0],[6,6,5,4,"asts"],[6,10,5,8],[6,13,5,14,"require"],[6,24,5,21],[6,54,3,0],[7,0,3,0],[7,6,6,4,"visitor"],[7,13,6,11],[7,16,6,14,"require"],[7,27,6,21],[7,60,3,0],[8,0,3,0],[8,6,7,4,"op"],[8,8,7,6],[8,11,7,14,"require"],[8,22,7,21],[8,55,3,0],[9,0,3,0],[9,6,8,4,"js"],[9,8,8,6],[9,11,8,14,"require"],[9,22,8,21],[9,50,3,0],[11,0,193,0],[11,11,193,9,"generateBytecode"],[11,27,193,0],[11,28,193,26,"ast"],[11,31,193,0],[11,33,193,31],[12,0,194,2],[12,8,194,6,"consts"],[12,14,194,12],[12,17,194,15],[12,19,194,2],[14,0,196,2],[14,13,196,11,"addConst"],[14,21,196,2],[14,22,196,20,"value"],[14,27,196,2],[14,29,196,27],[15,0,197,4],[15,10,197,8,"index"],[15,15,197,13],[15,18,197,16,"arrays"],[15,24,197,22],[15,25,197,23,"indexOf"],[15,32,197,16],[15,33,197,31,"consts"],[15,39,197,16],[15,41,197,39,"value"],[15,46,197,16],[15,47,197,4],[16,0,199,4],[16,13,199,11,"index"],[16,18,199,16],[16,23,199,21],[16,24,199,22],[16,25,199,11],[16,28,199,26,"consts"],[16,34,199,32],[16,35,199,33,"push"],[16,39,199,26],[16,40,199,38,"value"],[16,45,199,26],[16,49,199,47],[16,50,199,11],[16,53,199,51,"index"],[16,58,199,4],[17,0,200,3],[19,0,202,2],[19,13,202,11,"addFunctionConst"],[19,29,202,2],[19,30,202,28,"params"],[19,36,202,2],[19,38,202,36,"code"],[19,42,202,2],[19,44,202,42],[20,0,203,4],[20,13,203,11,"addConst"],[20,21,203,19],[20,22,204,6],[20,36,204,20,"params"],[20,42,204,26],[20,43,204,27,"join"],[20,47,204,20],[20,48,204,32],[20,52,204,20],[20,53,204,6],[20,56,204,40],[20,61,204,6],[20,64,204,48,"code"],[20,68,204,6],[20,71,204,55],[20,74,203,19],[20,75,203,4],[21,0,206,3],[23,0,208,2],[23,13,208,11,"buildSequence"],[23,26,208,2],[23,29,208,27],[24,0,209,4],[24,13,209,11,"Array"],[24,18,209,16],[24,19,209,17,"prototype"],[24,28,209,11],[24,29,209,27,"concat"],[24,35,209,11],[24,36,209,34,"apply"],[24,41,209,11],[24,42,209,40],[24,44,209,11],[24,46,209,44,"arguments"],[24,55,209,11],[24,56,209,4],[25,0,210,3],[27,0,212,2],[27,13,212,11,"buildCondition"],[27,27,212,2],[27,28,212,26,"condCode"],[27,36,212,2],[27,38,212,36,"thenCode"],[27,46,212,2],[27,48,212,46,"elseCode"],[27,56,212,2],[27,58,212,56],[28,0,213,4],[28,13,213,11,"condCode"],[28,21,213,19],[28,22,213,20,"concat"],[28,28,213,11],[28,29,214,6],[28,30,214,7,"thenCode"],[28,38,214,15],[28,39,214,16,"length"],[28,45,214,6],[28,47,214,24,"elseCode"],[28,55,214,32],[28,56,214,33,"length"],[28,62,214,6],[28,63,213,11],[28,65,215,6,"thenCode"],[28,73,213,11],[28,75,216,6,"elseCode"],[28,83,213,11],[28,84,213,4],[29,0,218,3],[31,0,220,2],[31,13,220,11,"buildLoop"],[31,22,220,2],[31,23,220,21,"condCode"],[31,31,220,2],[31,33,220,31,"bodyCode"],[31,41,220,2],[31,43,220,41],[32,0,221,4],[32,13,221,11,"condCode"],[32,21,221,19],[32,22,221,20,"concat"],[32,28,221,11],[32,29,221,27],[32,30,221,28,"bodyCode"],[32,38,221,36],[32,39,221,37,"length"],[32,45,221,27],[32,46,221,11],[32,48,221,46,"bodyCode"],[32,56,221,11],[32,57,221,4],[33,0,222,3],[35,0,224,2],[35,13,224,11,"buildCall"],[35,22,224,2],[35,23,224,21,"functionIndex"],[35,36,224,2],[35,38,224,36,"delta"],[35,43,224,2],[35,45,224,43,"env"],[35,48,224,2],[35,50,224,48,"sp"],[35,52,224,2],[35,54,224,52],[36,0,225,4],[36,10,225,8,"params"],[36,16,225,14],[36,19,225,17,"arrays"],[36,25,225,23],[36,26,225,24,"map"],[36,29,225,17],[36,30,225,28,"objects"],[36,37,225,35],[36,38,225,36,"values"],[36,44,225,28],[36,45,225,43,"env"],[36,48,225,28],[36,49,225,17],[36,51,225,49],[36,61,225,58,"p"],[36,62,225,49],[36,64,225,61],[37,0,225,63],[37,15,225,70,"sp"],[37,17,225,72],[37,20,225,75,"p"],[37,21,225,63],[38,0,225,79],[38,7,225,17],[38,8,225,4],[39,0,227,4],[39,13,227,11],[39,14,227,12,"op"],[39,16,227,14],[39,17,227,15,"CALL"],[39,21,227,11],[39,23,227,21,"functionIndex"],[39,36,227,11],[39,38,227,36,"delta"],[39,43,227,11],[39,45,227,43,"params"],[39,51,227,49],[39,52,227,50,"length"],[39,58,227,11],[39,60,227,58,"concat"],[39,66,227,11],[39,67,227,65,"params"],[39,73,227,11],[39,74,227,4],[40,0,228,3],[42,0,230,2],[42,13,230,11,"buildSimplePredicate"],[42,33,230,2],[42,34,230,32,"expression"],[42,44,230,2],[42,46,230,44,"negative"],[42,54,230,2],[42,56,230,54,"context"],[42,63,230,2],[42,65,230,63],[43,0,231,4],[43,13,231,11,"buildSequence"],[43,26,231,24],[43,27,232,6],[43,28,232,7,"op"],[43,30,232,9],[43,31,232,10,"PUSH_CURR_POS"],[43,44,232,6],[43,45,231,24],[43,47,233,6],[43,48,233,7,"op"],[43,50,233,9],[43,51,233,10,"SILENT_FAILS_ON"],[43,66,233,6],[43,67,231,24],[43,69,234,6,"generate"],[43,77,234,14],[43,78,234,15,"expression"],[43,88,234,14],[43,90,234,27],[44,0,235,8,"sp"],[44,8,235,8,"sp"],[44,10,235,10],[44,12,235,16,"context"],[44,19,235,23],[44,20,235,24,"sp"],[44,22,235,16],[44,25,235,29],[44,26,234,27],[45,0,236,8,"env"],[45,8,236,8,"env"],[45,11,236,11],[45,13,236,16,"objects"],[45,20,236,23],[45,21,236,24,"clone"],[45,26,236,16],[45,27,236,30,"context"],[45,34,236,37],[45,35,236,38,"env"],[45,38,236,16],[45,39,234,27],[46,0,237,8,"action"],[46,8,237,8,"action"],[46,14,237,14],[46,16,237,16],[47,0,234,27],[47,7,234,14],[47,8,231,24],[47,10,239,6],[47,11,239,7,"op"],[47,13,239,9],[47,14,239,10,"SILENT_FAILS_OFF"],[47,30,239,6],[47,31,231,24],[47,33,240,6,"buildCondition"],[47,47,240,20],[47,48,241,8],[47,49,241,9,"negative"],[47,57,241,17],[47,60,241,20,"op"],[47,62,241,22],[47,63,241,23,"IF_ERROR"],[47,71,241,17],[47,74,241,34,"op"],[47,76,241,36],[47,77,241,37,"IF_NOT_ERROR"],[47,89,241,8],[47,90,240,20],[47,92,242,8,"buildSequence"],[47,105,242,21],[47,106,243,10],[47,107,243,11,"op"],[47,109,243,13],[47,110,243,14,"POP"],[47,113,243,10],[47,114,242,21],[47,116,244,10],[47,117,244,11,"negative"],[47,125,244,19],[47,128,244,22,"op"],[47,130,244,24],[47,131,244,25,"POP"],[47,134,244,19],[47,137,244,31,"op"],[47,139,244,33],[47,140,244,34,"POP_CURR_POS"],[47,152,244,10],[47,153,242,21],[47,155,245,10],[47,156,245,11,"op"],[47,158,245,13],[47,159,245,14,"PUSH_UNDEFINED"],[47,173,245,10],[47,174,242,21],[47,175,240,20],[47,177,247,8,"buildSequence"],[47,190,247,21],[47,191,248,10],[47,192,248,11,"op"],[47,194,248,13],[47,195,248,14,"POP"],[47,198,248,10],[47,199,247,21],[47,201,249,10],[47,202,249,11,"negative"],[47,210,249,19],[47,213,249,22,"op"],[47,215,249,24],[47,216,249,25,"POP_CURR_POS"],[47,228,249,19],[47,231,249,40,"op"],[47,233,249,42],[47,234,249,43,"POP"],[47,237,249,10],[47,238,247,21],[47,240,250,10],[47,241,250,11,"op"],[47,243,250,13],[47,244,250,14,"PUSH_FAILED"],[47,255,250,10],[47,256,247,21],[47,257,240,20],[47,258,231,24],[47,259,231,4],[48,0,254,3],[50,0,256,2],[50,13,256,11,"buildSemanticPredicate"],[50,35,256,2],[50,36,256,34,"code"],[50,40,256,2],[50,42,256,40,"negative"],[50,50,256,2],[50,52,256,50,"context"],[50,59,256,2],[50,61,256,59],[51,0,257,4],[51,10,257,8,"functionIndex"],[51,23,257,21],[51,26,257,24,"addFunctionConst"],[51,42,257,40],[51,43,257,41,"objects"],[51,50,257,48],[51,51,257,49,"keys"],[51,55,257,41],[51,56,257,54,"context"],[51,63,257,61],[51,64,257,62,"env"],[51,67,257,41],[51,68,257,40],[51,70,257,68,"code"],[51,74,257,40],[51,75,257,4],[52,0,259,4],[52,13,259,11,"buildSequence"],[52,26,259,24],[52,27,260,6],[52,28,260,7,"op"],[52,30,260,9],[52,31,260,10,"UPDATE_SAVED_POS"],[52,47,260,6],[52,48,259,24],[52,50,261,6,"buildCall"],[52,59,261,15],[52,60,261,16,"functionIndex"],[52,73,261,15],[52,75,261,31],[52,76,261,15],[52,78,261,34,"context"],[52,85,261,41],[52,86,261,42,"env"],[52,89,261,15],[52,91,261,47,"context"],[52,98,261,54],[52,99,261,55,"sp"],[52,101,261,15],[52,102,259,24],[52,104,262,6,"buildCondition"],[52,118,262,20],[52,119,263,8],[52,120,263,9,"op"],[52,122,263,11],[52,123,263,12,"IF"],[52,125,263,8],[52,126,262,20],[52,128,264,8,"buildSequence"],[52,141,264,21],[52,142,265,10],[52,143,265,11,"op"],[52,145,265,13],[52,146,265,14,"POP"],[52,149,265,10],[52,150,264,21],[52,152,266,10,"negative"],[52,160,266,18],[52,163,266,21],[52,164,266,22,"op"],[52,166,266,24],[52,167,266,25,"PUSH_FAILED"],[52,178,266,21],[52,179,266,18],[52,182,266,40],[52,183,266,41,"op"],[52,185,266,43],[52,186,266,44,"PUSH_UNDEFINED"],[52,200,266,40],[52,201,264,21],[52,202,262,20],[52,204,268,8,"buildSequence"],[52,217,268,21],[52,218,269,10],[52,219,269,11,"op"],[52,221,269,13],[52,222,269,14,"POP"],[52,225,269,10],[52,226,268,21],[52,228,270,10,"negative"],[52,236,270,18],[52,239,270,21],[52,240,270,22,"op"],[52,242,270,24],[52,243,270,25,"PUSH_UNDEFINED"],[52,257,270,21],[52,258,270,18],[52,261,270,43],[52,262,270,44,"op"],[52,264,270,46],[52,265,270,47,"PUSH_FAILED"],[52,276,270,43],[52,277,268,21],[52,278,262,20],[52,279,259,24],[52,280,259,4],[53,0,274,3],[55,0,276,2],[55,13,276,11,"buildAppendLoop"],[55,28,276,2],[55,29,276,27,"expressionCode"],[55,43,276,2],[55,45,276,43],[56,0,277,4],[56,13,277,11,"buildLoop"],[56,22,277,20],[56,23,278,6],[56,24,278,7,"op"],[56,26,278,9],[56,27,278,10,"WHILE_NOT_ERROR"],[56,42,278,6],[56,43,277,20],[56,45,279,6,"buildSequence"],[56,58,279,19],[56,59,279,20],[56,60,279,21,"op"],[56,62,279,23],[56,63,279,24,"APPEND"],[56,69,279,20],[56,70,279,19],[56,72,279,33,"expressionCode"],[56,86,279,19],[56,87,277,20],[56,88,277,4],[57,0,281,3],[59,0,283,2],[59,8,283,6,"generate"],[59,16,283,14],[59,19,283,17,"visitor"],[59,26,283,24],[59,27,283,25,"build"],[59,32,283,17],[59,33,283,31],[60,0,284,4,"grammar"],[60,6,284,4,"grammar"],[60,13,284,11],[60,15,284,13],[60,32,284,22,"node"],[60,36,284,13],[60,38,284,28],[61,0,285,6,"arrays"],[61,8,285,6,"arrays"],[61,14,285,12],[61,15,285,13,"each"],[61,19,285,6],[61,20,285,18,"node"],[61,24,285,22],[61,25,285,23,"rules"],[61,30,285,6],[61,32,285,30,"generate"],[61,40,285,6],[62,0,287,6,"node"],[62,8,287,6,"node"],[62,12,287,10],[62,13,287,11,"consts"],[62,19,287,6],[62,22,287,20,"consts"],[62,28,287,6],[63,0,288,5],[63,7,283,31],[64,0,290,4,"rule"],[64,6,290,4,"rule"],[64,10,290,8],[64,12,290,10],[64,26,290,19,"node"],[64,30,290,10],[64,32,290,25],[65,0,291,6,"node"],[65,8,291,6,"node"],[65,12,291,10],[65,13,291,11,"bytecode"],[65,21,291,6],[65,24,291,22,"generate"],[65,32,291,30],[65,33,291,31,"node"],[65,37,291,35],[65,38,291,36,"expression"],[65,48,291,30],[65,50,291,48],[66,0,292,8,"sp"],[66,10,292,8,"sp"],[66,12,292,10],[66,14,292,16],[66,15,292,17],[66,16,291,48],[67,0,293,8,"env"],[67,10,293,8,"env"],[67,13,293,11],[67,15,293,16],[67,17,291,48],[68,0,294,8,"action"],[68,10,294,8,"action"],[68,16,294,14],[68,18,294,16],[69,0,291,48],[69,9,291,30],[69,10,291,6],[70,0,296,5],[70,7,283,31],[71,0,298,4,"named"],[71,6,298,4,"named"],[71,11,298,9],[71,13,298,11],[71,28,298,20,"node"],[71,32,298,11],[71,34,298,26,"context"],[71,41,298,11],[71,43,298,35],[72,0,299,6],[72,12,299,10,"nameIndex"],[72,21,299,19],[72,24,299,22,"addConst"],[72,32,299,30],[72,33,300,8],[72,60,300,35,"js"],[72,62,300,37],[72,63,300,38,"stringEscape"],[72,75,300,35],[72,76,300,51,"node"],[72,80,300,55],[72,81,300,56,"name"],[72,85,300,35],[72,86,300,8],[72,89,300,64],[72,93,299,30],[72,94,299,6],[73,0,309,6],[73,15,309,13,"buildSequence"],[73,28,309,26],[73,29,310,8],[73,30,310,9,"op"],[73,32,310,11],[73,33,310,12,"SILENT_FAILS_ON"],[73,48,310,8],[73,49,309,26],[73,51,311,8,"generate"],[73,59,311,16],[73,60,311,17,"node"],[73,64,311,21],[73,65,311,22,"expression"],[73,75,311,16],[73,77,311,34,"context"],[73,84,311,16],[73,85,309,26],[73,87,312,8],[73,88,312,9,"op"],[73,90,312,11],[73,91,312,12,"SILENT_FAILS_OFF"],[73,107,312,8],[73,108,309,26],[73,110,313,8,"buildCondition"],[73,124,313,22],[73,125,313,23],[73,126,313,24,"op"],[73,128,313,26],[73,129,313,27,"IF_ERROR"],[73,137,313,23],[73,138,313,22],[73,140,313,38],[73,141,313,39,"op"],[73,143,313,41],[73,144,313,42,"FAIL"],[73,148,313,38],[73,150,313,48,"nameIndex"],[73,159,313,38],[73,160,313,22],[73,162,313,60],[73,164,313,22],[73,165,309,26],[73,166,309,6],[74,0,315,5],[74,7,283,31],[75,0,317,4,"choice"],[75,6,317,4,"choice"],[75,12,317,10],[75,14,317,12],[75,30,317,21,"node"],[75,34,317,12],[75,36,317,27,"context"],[75,43,317,12],[75,45,317,36],[76,0,318,6],[76,17,318,15,"buildAlternativesCode"],[76,38,318,6],[76,39,318,37,"alternatives"],[76,51,318,6],[76,53,318,51,"context"],[76,60,318,6],[76,62,318,60],[77,0,319,8],[77,17,319,15,"buildSequence"],[77,30,319,28],[77,31,320,10,"generate"],[77,39,320,18],[77,40,320,19,"alternatives"],[77,52,320,31],[77,53,320,32],[77,54,320,31],[77,55,320,18],[77,57,320,36],[78,0,321,12,"sp"],[78,12,321,12,"sp"],[78,14,321,14],[78,16,321,20,"context"],[78,23,321,27],[78,24,321,28,"sp"],[78,26,320,36],[79,0,322,12,"env"],[79,12,322,12,"env"],[79,15,322,15],[79,17,322,20,"objects"],[79,24,322,27],[79,25,322,28,"clone"],[79,30,322,20],[79,31,322,34,"context"],[79,38,322,41],[79,39,322,42,"env"],[79,42,322,20],[79,43,320,36],[80,0,323,12,"action"],[80,12,323,12,"action"],[80,18,323,18],[80,20,323,20],[81,0,320,36],[81,11,320,18],[81,12,319,28],[81,14,325,10,"alternatives"],[81,26,325,22],[81,27,325,23,"length"],[81,33,325,10],[81,36,325,32],[81,37,325,10],[81,40,326,14,"buildCondition"],[81,54,326,28],[81,55,327,16],[81,56,327,17,"op"],[81,58,327,19],[81,59,327,20,"IF_ERROR"],[81,67,327,16],[81,68,326,28],[81,70,328,16,"buildSequence"],[81,83,328,29],[81,84,329,18],[81,85,329,19,"op"],[81,87,329,21],[81,88,329,22,"POP"],[81,91,329,18],[81,92,328,29],[81,94,330,18,"buildAlternativesCode"],[81,115,330,39],[81,116,330,40,"alternatives"],[81,128,330,52],[81,129,330,53,"slice"],[81,134,330,40],[81,135,330,59],[81,136,330,40],[81,137,330,39],[81,139,330,63,"context"],[81,146,330,39],[81,147,328,29],[81,148,326,28],[81,150,332,16],[81,152,326,28],[81,153,325,10],[81,156,334,14],[81,158,319,28],[81,159,319,8],[82,0,336,7],[84,0,338,6],[84,15,338,13,"buildAlternativesCode"],[84,36,338,34],[84,37,338,35,"node"],[84,41,338,39],[84,42,338,40,"alternatives"],[84,54,338,34],[84,56,338,54,"context"],[84,63,338,34],[84,64,338,6],[85,0,339,5],[85,7,283,31],[86,0,341,4,"action"],[86,6,341,4,"action"],[86,12,341,10],[86,14,341,12],[86,30,341,21,"node"],[86,34,341,12],[86,36,341,27,"context"],[86,43,341,12],[86,45,341,36],[87,0,342,6],[87,12,342,10,"env"],[87,15,342,13],[87,18,342,27,"objects"],[87,25,342,34],[87,26,342,35,"clone"],[87,31,342,27],[87,32,342,41,"context"],[87,39,342,48],[87,40,342,49,"env"],[87,43,342,27],[87,44,342,6],[88,0,342,6],[88,12,343,10,"emitCall"],[88,20,343,18],[88,23,343,27,"node"],[88,27,343,31],[88,28,343,32,"expression"],[88,38,343,27],[88,39,343,43,"type"],[88,43,343,27],[88,48,343,52],[88,58,343,27],[88,62,344,27,"node"],[88,66,344,31],[88,67,344,32,"expression"],[88,77,344,27],[88,78,344,43,"elements"],[88,86,344,27],[88,87,344,52,"length"],[88,93,344,27],[88,98,344,63],[88,99,342,6],[89,0,342,6],[89,12,345,10,"expressionCode"],[89,26,345,24],[89,29,345,27,"generate"],[89,37,345,35],[89,38,345,36,"node"],[89,42,345,40],[89,43,345,41,"expression"],[89,53,345,35],[89,55,345,53],[90,0,346,12,"sp"],[90,10,346,12,"sp"],[90,12,346,14],[90,14,346,20,"context"],[90,21,346,27],[90,22,346,28,"sp"],[90,24,346,20],[90,28,346,34,"emitCall"],[90,36,346,42],[90,39,346,45],[90,40,346,42],[90,43,346,49],[90,44,346,20],[90,45,345,53],[91,0,347,12,"env"],[91,10,347,12,"env"],[91,13,347,15],[91,15,347,20,"env"],[91,18,345,53],[92,0,348,12,"action"],[92,10,348,12,"action"],[92,16,348,18],[92,18,348,20,"node"],[93,0,345,53],[93,9,345,35],[93,10,342,6],[94,0,342,6],[94,12,350,10,"functionIndex"],[94,25,350,23],[94,28,350,27,"addFunctionConst"],[94,44,350,43],[94,45,350,44,"objects"],[94,52,350,51],[94,53,350,52,"keys"],[94,57,350,44],[94,58,350,57,"env"],[94,61,350,44],[94,62,350,43],[94,64,350,63,"node"],[94,68,350,67],[94,69,350,68,"code"],[94,73,350,43],[94,74,342,6],[95,0,352,6],[95,15,352,13,"emitCall"],[95,23,352,21],[95,26,353,10,"buildSequence"],[95,39,353,23],[95,40,354,12],[95,41,354,13,"op"],[95,43,354,15],[95,44,354,16,"PUSH_CURR_POS"],[95,57,354,12],[95,58,353,23],[95,60,355,12,"expressionCode"],[95,74,353,23],[95,76,356,12,"buildCondition"],[95,90,356,26],[95,91,357,14],[95,92,357,15,"op"],[95,94,357,17],[95,95,357,18,"IF_NOT_ERROR"],[95,107,357,14],[95,108,356,26],[95,110,358,14,"buildSequence"],[95,123,358,27],[95,124,359,16],[95,125,359,17,"op"],[95,127,359,19],[95,128,359,20,"LOAD_SAVED_POS"],[95,142,359,16],[95,144,359,36],[95,145,359,16],[95,146,358,27],[95,148,360,16,"buildCall"],[95,157,360,25],[95,158,360,26,"functionIndex"],[95,171,360,25],[95,173,360,41],[95,174,360,25],[95,176,360,44,"env"],[95,179,360,25],[95,181,360,49,"context"],[95,188,360,56],[95,189,360,57,"sp"],[95,191,360,49],[95,194,360,62],[95,195,360,25],[95,196,358,27],[95,197,356,26],[95,199,362,14],[95,201,356,26],[95,202,353,23],[95,204,364,12],[95,205,364,13,"op"],[95,207,364,15],[95,208,364,16,"NIP"],[95,211,364,12],[95,212,353,23],[95,213,352,21],[95,216,366,10,"expressionCode"],[95,230,352,6],[96,0,367,5],[96,7,283,31],[97,0,369,4,"sequence"],[97,6,369,4,"sequence"],[97,14,369,12],[97,16,369,14],[97,34,369,23,"node"],[97,38,369,14],[97,40,369,29,"context"],[97,47,369,14],[97,49,369,38],[98,0,370,6],[98,17,370,15,"buildElementsCode"],[98,34,370,6],[98,35,370,33,"elements"],[98,43,370,6],[98,45,370,43,"context"],[98,52,370,6],[98,54,370,52],[99,0,371,8],[99,14,371,12,"processedCount"],[99,28,371,8],[99,30,371,28,"functionIndex"],[99,43,371,8],[101,0,373,8],[101,14,373,12,"elements"],[101,22,373,20],[101,23,373,21,"length"],[101,29,373,12],[101,32,373,30],[101,33,373,8],[101,35,373,33],[102,0,374,10,"processedCount"],[102,12,374,10,"processedCount"],[102,26,374,24],[102,29,374,27,"node"],[102,33,374,31],[102,34,374,32,"elements"],[102,42,374,27],[102,43,374,41,"length"],[102,49,374,27],[102,52,374,50,"elements"],[102,60,374,58],[102,61,374,59,"slice"],[102,66,374,50],[102,67,374,65],[102,68,374,50],[102,70,374,68,"length"],[102,76,374,10],[103,0,376,10],[103,19,376,17,"buildSequence"],[103,32,376,30],[103,33,377,12,"generate"],[103,41,377,20],[103,42,377,21,"elements"],[103,50,377,29],[103,51,377,30],[103,52,377,29],[103,53,377,20],[103,55,377,34],[104,0,378,14,"sp"],[104,14,378,14,"sp"],[104,16,378,16],[104,18,378,22,"context"],[104,25,378,29],[104,26,378,30,"sp"],[104,28,377,34],[105,0,379,14,"env"],[105,14,379,14,"env"],[105,17,379,17],[105,19,379,22,"context"],[105,26,379,29],[105,27,379,30,"env"],[105,30,377,34],[106,0,380,14,"action"],[106,14,380,14,"action"],[106,20,380,20],[106,22,380,22],[107,0,377,34],[107,13,377,20],[107,14,376,30],[107,16,382,12,"buildCondition"],[107,30,382,26],[107,31,383,14],[107,32,383,15,"op"],[107,34,383,17],[107,35,383,18,"IF_NOT_ERROR"],[107,47,383,14],[107,48,382,26],[107,50,384,14,"buildElementsCode"],[107,67,384,31],[107,68,384,32,"elements"],[107,76,384,40],[107,77,384,41,"slice"],[107,82,384,32],[107,83,384,47],[107,84,384,32],[107,85,384,31],[107,87,384,51],[108,0,385,16,"sp"],[108,14,385,16,"sp"],[108,16,385,18],[108,18,385,24,"context"],[108,25,385,31],[108,26,385,32,"sp"],[108,28,385,24],[108,31,385,37],[108,32,384,51],[109,0,386,16,"env"],[109,14,386,16,"env"],[109,17,386,19],[109,19,386,24,"context"],[109,26,386,31],[109,27,386,32,"env"],[109,30,384,51],[110,0,387,16,"action"],[110,14,387,16,"action"],[110,20,387,22],[110,22,387,24,"context"],[110,29,387,31],[110,30,387,32,"action"],[111,0,384,51],[111,13,384,31],[111,14,382,26],[111,16,389,14,"buildSequence"],[111,29,389,27],[111,30,390,16,"processedCount"],[111,44,390,30],[111,47,390,33],[111,48,390,16],[111,51,390,37],[111,52,390,38,"op"],[111,54,390,40],[111,55,390,41,"POP_N"],[111,60,390,37],[111,62,390,48,"processedCount"],[111,76,390,37],[111,77,390,16],[111,80,390,66],[111,81,390,67,"op"],[111,83,390,69],[111,84,390,70,"POP"],[111,87,390,66],[111,88,389,27],[111,90,391,16],[111,91,391,17,"op"],[111,93,391,19],[111,94,391,20,"POP_CURR_POS"],[111,106,391,16],[111,107,389,27],[111,109,392,16],[111,110,392,17,"op"],[111,112,392,19],[111,113,392,20,"PUSH_FAILED"],[111,124,392,16],[111,125,389,27],[111,126,382,26],[111,127,376,30],[111,128,376,10],[112,0,396,9],[112,11,373,8],[112,17,396,15],[113,0,397,10],[113,16,397,14,"context"],[113,23,397,21],[113,24,397,22,"action"],[113,30,397,10],[113,32,397,30],[114,0,398,12,"functionIndex"],[114,14,398,12,"functionIndex"],[114,27,398,25],[114,30,398,28,"addFunctionConst"],[114,46,398,44],[114,47,399,14,"objects"],[114,54,399,21],[114,55,399,22,"keys"],[114,59,399,14],[114,60,399,27,"context"],[114,67,399,34],[114,68,399,35,"env"],[114,71,399,14],[114,72,398,44],[114,74,400,14,"context"],[114,81,400,21],[114,82,400,22,"action"],[114,88,400,14],[114,89,400,29,"code"],[114,93,398,44],[114,94,398,12],[115,0,403,12],[115,21,403,19,"buildSequence"],[115,34,403,32],[115,35,404,14],[115,36,404,15,"op"],[115,38,404,17],[115,39,404,18,"LOAD_SAVED_POS"],[115,53,404,14],[115,55,404,34,"node"],[115,59,404,38],[115,60,404,39,"elements"],[115,68,404,34],[115,69,404,48,"length"],[115,75,404,14],[115,76,403,32],[115,78,405,14,"buildCall"],[115,87,405,23],[115,88,406,16,"functionIndex"],[115,101,405,23],[115,103,407,16,"node"],[115,107,407,20],[115,108,407,21,"elements"],[115,116,407,16],[115,117,407,30,"length"],[115,123,405,23],[115,125,408,16,"context"],[115,132,408,23],[115,133,408,24,"env"],[115,136,405,23],[115,138,409,16,"context"],[115,145,409,23],[115,146,409,24,"sp"],[115,148,405,23],[115,149,403,32],[115,151,411,14],[115,152,411,15,"op"],[115,154,411,17],[115,155,411,18,"NIP"],[115,158,411,14],[115,159,403,32],[115,160,403,12],[116,0,413,11],[116,13,397,10],[116,19,413,17],[117,0,414,12],[117,21,414,19,"buildSequence"],[117,34,414,32],[117,35,414,33],[117,36,414,34,"op"],[117,38,414,36],[117,39,414,37,"WRAP"],[117,43,414,33],[117,45,414,43,"node"],[117,49,414,47],[117,50,414,48,"elements"],[117,58,414,43],[117,59,414,57,"length"],[117,65,414,33],[117,66,414,32],[117,68,414,66],[117,69,414,67,"op"],[117,71,414,69],[117,72,414,70,"NIP"],[117,75,414,66],[117,76,414,32],[117,77,414,12],[118,0,415,11],[119,0,416,9],[120,0,417,7],[122,0,419,6],[122,15,419,13,"buildSequence"],[122,28,419,26],[122,29,420,8],[122,30,420,9,"op"],[122,32,420,11],[122,33,420,12,"PUSH_CURR_POS"],[122,46,420,8],[122,47,419,26],[122,49,421,8,"buildElementsCode"],[122,66,421,25],[122,67,421,26,"node"],[122,71,421,30],[122,72,421,31,"elements"],[122,80,421,25],[122,82,421,41],[123,0,422,10,"sp"],[123,10,422,10,"sp"],[123,12,422,12],[123,14,422,18,"context"],[123,21,422,25],[123,22,422,26,"sp"],[123,24,422,18],[123,27,422,31],[123,28,421,41],[124,0,423,10,"env"],[124,10,423,10,"env"],[124,13,423,13],[124,15,423,18,"context"],[124,22,423,25],[124,23,423,26,"env"],[124,26,421,41],[125,0,424,10,"action"],[125,10,424,10,"action"],[125,16,424,16],[125,18,424,18,"context"],[125,25,424,25],[125,26,424,26,"action"],[126,0,421,41],[126,9,421,25],[126,10,419,26],[126,11,419,6],[127,0,427,5],[127,7,283,31],[128,0,429,4,"labeled"],[128,6,429,4,"labeled"],[128,13,429,11],[128,15,429,13],[128,32,429,22,"node"],[128,36,429,13],[128,38,429,28,"context"],[128,45,429,13],[128,47,429,37],[129,0,430,6],[129,12,430,10,"env"],[129,15,430,13],[129,18,430,16,"objects"],[129,25,430,23],[129,26,430,24,"clone"],[129,31,430,16],[129,32,430,30,"context"],[129,39,430,37],[129,40,430,38,"env"],[129,43,430,16],[129,44,430,6],[130,0,432,6,"context"],[130,8,432,6,"context"],[130,15,432,13],[130,16,432,14,"env"],[130,19,432,6],[130,20,432,18,"node"],[130,24,432,22],[130,25,432,23,"label"],[130,30,432,6],[130,34,432,32,"context"],[130,41,432,39],[130,42,432,40,"sp"],[130,44,432,32],[130,47,432,45],[130,48,432,6],[131,0,434,6],[131,15,434,13,"generate"],[131,23,434,21],[131,24,434,22,"node"],[131,28,434,26],[131,29,434,27,"expression"],[131,39,434,21],[131,41,434,39],[132,0,435,8,"sp"],[132,10,435,8,"sp"],[132,12,435,10],[132,14,435,16,"context"],[132,21,435,23],[132,22,435,24,"sp"],[132,24,434,39],[133,0,436,8,"env"],[133,10,436,8,"env"],[133,13,436,11],[133,15,436,16,"env"],[133,18,434,39],[134,0,437,8,"action"],[134,10,437,8,"action"],[134,16,437,14],[134,18,437,16],[135,0,434,39],[135,9,434,21],[135,10,434,6],[136,0,439,5],[136,7,283,31],[137,0,441,4,"text"],[137,6,441,4,"text"],[137,10,441,8],[137,12,441,10],[137,26,441,19,"node"],[137,30,441,10],[137,32,441,25,"context"],[137,39,441,10],[137,41,441,34],[138,0,442,6],[138,15,442,13,"buildSequence"],[138,28,442,26],[138,29,443,8],[138,30,443,9,"op"],[138,32,443,11],[138,33,443,12,"PUSH_CURR_POS"],[138,46,443,8],[138,47,442,26],[138,49,444,8,"generate"],[138,57,444,16],[138,58,444,17,"node"],[138,62,444,21],[138,63,444,22,"expression"],[138,73,444,16],[138,75,444,34],[139,0,445,10,"sp"],[139,10,445,10,"sp"],[139,12,445,12],[139,14,445,18,"context"],[139,21,445,25],[139,22,445,26,"sp"],[139,24,445,18],[139,27,445,31],[139,28,444,34],[140,0,446,10,"env"],[140,10,446,10,"env"],[140,13,446,13],[140,15,446,18,"objects"],[140,22,446,25],[140,23,446,26,"clone"],[140,28,446,18],[140,29,446,32,"context"],[140,36,446,39],[140,37,446,40,"env"],[140,40,446,18],[140,41,444,34],[141,0,447,10,"action"],[141,10,447,10,"action"],[141,16,447,16],[141,18,447,18],[142,0,444,34],[142,9,444,16],[142,10,442,26],[142,12,449,8,"buildCondition"],[142,26,449,22],[142,27,450,10],[142,28,450,11,"op"],[142,30,450,13],[142,31,450,14,"IF_NOT_ERROR"],[142,43,450,10],[142,44,449,22],[142,46,451,10,"buildSequence"],[142,59,451,23],[142,60,451,24],[142,61,451,25,"op"],[142,63,451,27],[142,64,451,28,"POP"],[142,67,451,24],[142,68,451,23],[142,70,451,34],[142,71,451,35,"op"],[142,73,451,37],[142,74,451,38,"TEXT"],[142,78,451,34],[142,79,451,23],[142,80,449,22],[142,82,452,10],[142,83,452,11,"op"],[142,85,452,13],[142,86,452,14,"NIP"],[142,89,452,10],[142,90,449,22],[142,91,442,26],[142,92,442,6],[143,0,455,5],[143,7,283,31],[144,0,457,4,"simple_and"],[144,6,457,4,"simple_and"],[144,16,457,14],[144,18,457,16],[144,38,457,25,"node"],[144,42,457,16],[144,44,457,31,"context"],[144,51,457,16],[144,53,457,40],[145,0,458,6],[145,15,458,13,"buildSimplePredicate"],[145,35,458,33],[145,36,458,34,"node"],[145,40,458,38],[145,41,458,39,"expression"],[145,51,458,33],[145,53,458,51],[145,58,458,33],[145,60,458,58,"context"],[145,67,458,33],[145,68,458,6],[146,0,459,5],[146,7,283,31],[147,0,461,4,"simple_not"],[147,6,461,4,"simple_not"],[147,16,461,14],[147,18,461,16],[147,38,461,25,"node"],[147,42,461,16],[147,44,461,31,"context"],[147,51,461,16],[147,53,461,40],[148,0,462,6],[148,15,462,13,"buildSimplePredicate"],[148,35,462,33],[148,36,462,34,"node"],[148,40,462,38],[148,41,462,39,"expression"],[148,51,462,33],[148,53,462,51],[148,57,462,33],[148,59,462,57,"context"],[148,66,462,33],[148,67,462,6],[149,0,463,5],[149,7,283,31],[150,0,465,4,"optional"],[150,6,465,4,"optional"],[150,14,465,12],[150,16,465,14],[150,34,465,23,"node"],[150,38,465,14],[150,40,465,29,"context"],[150,47,465,14],[150,49,465,38],[151,0,466,6],[151,15,466,13,"buildSequence"],[151,28,466,26],[151,29,467,8,"generate"],[151,37,467,16],[151,38,467,17,"node"],[151,42,467,21],[151,43,467,22,"expression"],[151,53,467,16],[151,55,467,34],[152,0,468,10,"sp"],[152,10,468,10,"sp"],[152,12,468,12],[152,14,468,18,"context"],[152,21,468,25],[152,22,468,26,"sp"],[152,24,467,34],[153,0,469,10,"env"],[153,10,469,10,"env"],[153,13,469,13],[153,15,469,18,"objects"],[153,22,469,25],[153,23,469,26,"clone"],[153,28,469,18],[153,29,469,32,"context"],[153,36,469,39],[153,37,469,40,"env"],[153,40,469,18],[153,41,467,34],[154,0,470,10,"action"],[154,10,470,10,"action"],[154,16,470,16],[154,18,470,18],[155,0,467,34],[155,9,467,16],[155,10,466,26],[155,12,472,8,"buildCondition"],[155,26,472,22],[155,27,473,10],[155,28,473,11,"op"],[155,30,473,13],[155,31,473,14,"IF_ERROR"],[155,39,473,10],[155,40,472,22],[155,42,474,10,"buildSequence"],[155,55,474,23],[155,56,474,24],[155,57,474,25,"op"],[155,59,474,27],[155,60,474,28,"POP"],[155,63,474,24],[155,64,474,23],[155,66,474,34],[155,67,474,35,"op"],[155,69,474,37],[155,70,474,38,"PUSH_NULL"],[155,79,474,34],[155,80,474,23],[155,81,472,22],[155,83,475,10],[155,85,472,22],[155,86,466,26],[155,87,466,6],[156,0,478,5],[156,7,283,31],[157,0,480,4,"zero_or_more"],[157,6,480,4,"zero_or_more"],[157,18,480,16],[157,20,480,18],[157,42,480,27,"node"],[157,46,480,18],[157,48,480,33,"context"],[157,55,480,18],[157,57,480,42],[158,0,481,6],[158,12,481,10,"expressionCode"],[158,26,481,24],[158,29,481,27,"generate"],[158,37,481,35],[158,38,481,36,"node"],[158,42,481,40],[158,43,481,41,"expression"],[158,53,481,35],[158,55,481,53],[159,0,482,12,"sp"],[159,10,482,12,"sp"],[159,12,482,14],[159,14,482,20,"context"],[159,21,482,27],[159,22,482,28,"sp"],[159,24,482,20],[159,27,482,33],[159,28,481,53],[160,0,483,12,"env"],[160,10,483,12,"env"],[160,13,483,15],[160,15,483,20,"objects"],[160,22,483,27],[160,23,483,28,"clone"],[160,28,483,20],[160,29,483,34,"context"],[160,36,483,41],[160,37,483,42,"env"],[160,40,483,20],[160,41,481,53],[161,0,484,12,"action"],[161,10,484,12,"action"],[161,16,484,18],[161,18,484,20],[162,0,481,53],[162,9,481,35],[162,10,481,6],[163,0,487,6],[163,15,487,13,"buildSequence"],[163,28,487,26],[163,29,488,8],[163,30,488,9,"op"],[163,32,488,11],[163,33,488,12,"PUSH_EMPTY_ARRAY"],[163,49,488,8],[163,50,487,26],[163,52,489,8,"expressionCode"],[163,66,487,26],[163,68,490,8,"buildAppendLoop"],[163,83,490,23],[163,84,490,24,"expressionCode"],[163,98,490,23],[163,99,487,26],[163,101,491,8],[163,102,491,9,"op"],[163,104,491,11],[163,105,491,12,"POP"],[163,108,491,8],[163,109,487,26],[163,110,487,6],[164,0,493,5],[164,7,283,31],[165,0,495,4,"one_or_more"],[165,6,495,4,"one_or_more"],[165,17,495,15],[165,19,495,17],[165,40,495,26,"node"],[165,44,495,17],[165,46,495,32,"context"],[165,53,495,17],[165,55,495,41],[166,0,496,6],[166,12,496,10,"expressionCode"],[166,26,496,24],[166,29,496,27,"generate"],[166,37,496,35],[166,38,496,36,"node"],[166,42,496,40],[166,43,496,41,"expression"],[166,53,496,35],[166,55,496,53],[167,0,497,12,"sp"],[167,10,497,12,"sp"],[167,12,497,14],[167,14,497,20,"context"],[167,21,497,27],[167,22,497,28,"sp"],[167,24,497,20],[167,27,497,33],[167,28,496,53],[168,0,498,12,"env"],[168,10,498,12,"env"],[168,13,498,15],[168,15,498,20,"objects"],[168,22,498,27],[168,23,498,28,"clone"],[168,28,498,20],[168,29,498,34,"context"],[168,36,498,41],[168,37,498,42,"env"],[168,40,498,20],[168,41,496,53],[169,0,499,12,"action"],[169,10,499,12,"action"],[169,16,499,18],[169,18,499,20],[170,0,496,53],[170,9,496,35],[170,10,496,6],[171,0,502,6],[171,15,502,13,"buildSequence"],[171,28,502,26],[171,29,503,8],[171,30,503,9,"op"],[171,32,503,11],[171,33,503,12,"PUSH_EMPTY_ARRAY"],[171,49,503,8],[171,50,502,26],[171,52,504,8,"expressionCode"],[171,66,502,26],[171,68,505,8,"buildCondition"],[171,82,505,22],[171,83,506,10],[171,84,506,11,"op"],[171,86,506,13],[171,87,506,14,"IF_NOT_ERROR"],[171,99,506,10],[171,100,505,22],[171,102,507,10,"buildSequence"],[171,115,507,23],[171,116,507,24,"buildAppendLoop"],[171,131,507,39],[171,132,507,40,"expressionCode"],[171,146,507,39],[171,147,507,23],[171,149,507,57],[171,150,507,58,"op"],[171,152,507,60],[171,153,507,61,"POP"],[171,156,507,57],[171,157,507,23],[171,158,505,22],[171,160,508,10,"buildSequence"],[171,173,508,23],[171,174,508,24],[171,175,508,25,"op"],[171,177,508,27],[171,178,508,28,"POP"],[171,181,508,24],[171,182,508,23],[171,184,508,34],[171,185,508,35,"op"],[171,187,508,37],[171,188,508,38,"POP"],[171,191,508,34],[171,192,508,23],[171,194,508,44],[171,195,508,45,"op"],[171,197,508,47],[171,198,508,48,"PUSH_FAILED"],[171,209,508,44],[171,210,508,23],[171,211,505,22],[171,212,502,26],[171,213,502,6],[172,0,511,5],[172,7,283,31],[173,0,513,4,"group"],[173,6,513,4,"group"],[173,11,513,9],[173,13,513,11],[173,28,513,20,"node"],[173,32,513,11],[173,34,513,26,"context"],[173,41,513,11],[173,43,513,35],[174,0,514,6],[174,15,514,13,"generate"],[174,23,514,21],[174,24,514,22,"node"],[174,28,514,26],[174,29,514,27,"expression"],[174,39,514,21],[174,41,514,39],[175,0,515,8,"sp"],[175,10,515,8,"sp"],[175,12,515,10],[175,14,515,16,"context"],[175,21,515,23],[175,22,515,24,"sp"],[175,24,514,39],[176,0,516,8,"env"],[176,10,516,8,"env"],[176,13,516,11],[176,15,516,16,"objects"],[176,22,516,23],[176,23,516,24,"clone"],[176,28,516,16],[176,29,516,30,"context"],[176,36,516,37],[176,37,516,38,"env"],[176,40,516,16],[176,41,514,39],[177,0,517,8,"action"],[177,10,517,8,"action"],[177,16,517,14],[177,18,517,16],[178,0,514,39],[178,9,514,21],[178,10,514,6],[179,0,519,5],[179,7,283,31],[180,0,521,4,"semantic_and"],[180,6,521,4,"semantic_and"],[180,18,521,16],[180,20,521,18],[180,42,521,27,"node"],[180,46,521,18],[180,48,521,33,"context"],[180,55,521,18],[180,57,521,42],[181,0,522,6],[181,15,522,13,"buildSemanticPredicate"],[181,37,522,35],[181,38,522,36,"node"],[181,42,522,40],[181,43,522,41,"code"],[181,47,522,35],[181,49,522,47],[181,54,522,35],[181,56,522,54,"context"],[181,63,522,35],[181,64,522,6],[182,0,523,5],[182,7,283,31],[183,0,525,4,"semantic_not"],[183,6,525,4,"semantic_not"],[183,18,525,16],[183,20,525,18],[183,42,525,27,"node"],[183,46,525,18],[183,48,525,33,"context"],[183,55,525,18],[183,57,525,42],[184,0,526,6],[184,15,526,13,"buildSemanticPredicate"],[184,37,526,35],[184,38,526,36,"node"],[184,42,526,40],[184,43,526,41,"code"],[184,47,526,35],[184,49,526,47],[184,53,526,35],[184,55,526,53,"context"],[184,62,526,35],[184,63,526,6],[185,0,527,5],[185,7,283,31],[186,0,529,4,"rule_ref"],[186,6,529,4,"rule_ref"],[186,14,529,12],[186,16,529,14],[186,34,529,23,"node"],[186,38,529,14],[186,40,529,29],[187,0,530,6],[187,15,530,13],[187,16,530,14,"op"],[187,18,530,16],[187,19,530,17,"RULE"],[187,23,530,13],[187,25,530,23,"asts"],[187,29,530,27],[187,30,530,28,"indexOfRule"],[187,41,530,23],[187,42,530,40,"ast"],[187,45,530,23],[187,47,530,45,"node"],[187,51,530,49],[187,52,530,50,"name"],[187,56,530,23],[187,57,530,13],[187,58,530,6],[188,0,531,5],[188,7,283,31],[189,0,533,4,"literal"],[189,6,533,4,"literal"],[189,13,533,11],[189,15,533,13],[189,32,533,22,"node"],[189,36,533,13],[189,38,533,28],[190,0,534,6],[190,12,534,10,"stringIndex"],[190,23,534,6],[190,25,534,23,"expectedIndex"],[190,38,534,6],[192,0,536,6],[192,12,536,10,"node"],[192,16,536,14],[192,17,536,15,"value"],[192,22,536,10],[192,23,536,21,"length"],[192,29,536,10],[192,32,536,30],[192,33,536,6],[192,35,536,33],[193,0,537,8,"stringIndex"],[193,10,537,8,"stringIndex"],[193,21,537,19],[193,24,537,22,"addConst"],[193,32,537,30],[193,33,537,31],[193,39,538,12,"js"],[193,41,538,14],[193,42,538,15,"stringEscape"],[193,54,538,12],[193,55,539,14,"node"],[193,59,539,18],[193,60,539,19,"ignoreCase"],[193,70,539,14],[193,73,539,32,"node"],[193,77,539,36],[193,78,539,37,"value"],[193,83,539,32],[193,84,539,43,"toLowerCase"],[193,95,539,32],[193,97,539,14],[193,100,539,59,"node"],[193,104,539,63],[193,105,539,64,"value"],[193,110,538,12],[193,111,537,31],[193,114,541,12],[193,117,537,30],[193,118,537,8],[194,0,543,8,"expectedIndex"],[194,10,543,8,"expectedIndex"],[194,23,543,21],[194,26,543,24,"addConst"],[194,34,543,32],[194,35,544,10],[194,63,545,14],[194,66,544,10],[194,69,545,20,"js"],[194,71,545,22],[194,72,545,23,"stringEscape"],[194,84,545,20],[194,85,545,36,"node"],[194,89,545,40],[194,90,545,41,"value"],[194,95,545,20],[194,96,544,10],[194,99,545,50],[194,104,544,10],[194,107,546,14,"node"],[194,111,546,18],[194,112,546,19,"ignoreCase"],[194,122,544,10],[194,125,547,14],[194,128,543,32],[194,129,543,8],[195,0,555,8],[195,17,555,15,"buildCondition"],[195,31,555,29],[195,32,556,10,"node"],[195,36,556,14],[195,37,556,15,"ignoreCase"],[195,47,556,10],[195,50,557,14],[195,51,557,15,"op"],[195,53,557,17],[195,54,557,18,"MATCH_STRING_IC"],[195,69,557,14],[195,71,557,35,"stringIndex"],[195,82,557,14],[195,83,556,10],[195,86,558,14],[195,87,558,15,"op"],[195,89,558,17],[195,90,558,18,"MATCH_STRING"],[195,102,558,14],[195,104,558,32,"stringIndex"],[195,115,558,14],[195,116,555,29],[195,118,559,10,"node"],[195,122,559,14],[195,123,559,15,"ignoreCase"],[195,133,559,10],[195,136,560,14],[195,137,560,15,"op"],[195,139,560,17],[195,140,560,18,"ACCEPT_N"],[195,148,560,14],[195,150,560,28,"node"],[195,154,560,32],[195,155,560,33,"value"],[195,160,560,28],[195,161,560,39,"length"],[195,167,560,14],[195,168,559,10],[195,171,561,14],[195,172,561,15,"op"],[195,174,561,17],[195,175,561,18,"ACCEPT_STRING"],[195,188,561,14],[195,190,561,33,"stringIndex"],[195,201,561,14],[195,202,555,29],[195,204,562,10],[195,205,562,11,"op"],[195,207,562,13],[195,208,562,14,"FAIL"],[195,212,562,10],[195,214,562,20,"expectedIndex"],[195,227,562,10],[195,228,555,29],[195,229,555,8],[196,0,564,7],[196,9,536,6],[196,15,564,13],[197,0,565,8,"stringIndex"],[197,10,565,8,"stringIndex"],[197,21,565,19],[197,24,565,22,"addConst"],[197,32,565,30],[197,33,565,31],[197,37,565,30],[197,38,565,8],[198,0,567,8],[198,17,567,15],[198,18,567,16,"op"],[198,20,567,18],[198,21,567,19,"PUSH"],[198,25,567,15],[198,27,567,25,"stringIndex"],[198,38,567,15],[198,39,567,8],[199,0,568,7],[200,0,569,5],[200,7,283,31],[201,0,571,4],[201,15,571,13],[201,31,571,22,"node"],[201,35,571,13],[201,37,571,28],[202,0,572,6],[202,12,572,10,"regexp"],[202,18,572,6],[202,20,572,18,"parts"],[202,25,572,6],[202,27,572,25,"regexpIndex"],[202,38,572,6],[202,40,572,38,"expectedIndex"],[202,53,572,6],[204,0,574,6],[204,12,574,10,"node"],[204,16,574,14],[204,17,574,15,"parts"],[204,22,574,10],[204,23,574,21,"length"],[204,29,574,10],[204,32,574,30],[204,33,574,6],[204,35,574,33],[205,0,575,8,"regexp"],[205,10,575,8,"regexp"],[205,16,575,14],[205,19,575,17],[205,28,576,13,"node"],[205,32,576,17],[205,33,576,18,"inverted"],[205,41,576,13],[205,44,576,29],[205,47,576,13],[205,50,576,35],[205,52,575,17],[205,56,577,12,"arrays"],[205,62,577,18],[205,63,577,19,"map"],[205,66,577,12],[205,67,577,23,"node"],[205,71,577,27],[205,72,577,28,"parts"],[205,77,577,12],[205,79,577,35],[205,89,577,44,"part"],[205,93,577,35],[205,95,577,50],[206,0,578,14],[206,19,578,21,"part"],[206,23,578,25],[206,35,578,37,"Array"],[206,40,578,21],[206,43,579,18,"js"],[206,45,579,20],[206,46,579,21,"regexpClassEscape"],[206,63,579,18],[206,64,579,39,"part"],[206,68,579,43],[206,69,579,44],[206,70,579,43],[206,71,579,18],[206,75,580,20],[206,78,579,18],[206,81,581,20,"js"],[206,83,581,22],[206,84,581,23,"regexpClassEscape"],[206,101,581,20],[206,102,581,41,"part"],[206,106,581,45],[206,107,581,46],[206,108,581,45],[206,109,581,20],[206,110,578,21],[206,113,582,18,"js"],[206,115,582,20],[206,116,582,21,"regexpClassEscape"],[206,133,582,18],[206,134,582,39,"part"],[206,138,582,18],[206,139,578,14],[207,0,583,13],[207,11,577,12],[207,13,583,15,"join"],[207,17,577,12],[207,18,583,20],[207,20,577,12],[207,21,575,17],[207,24,584,12],[207,28,575,17],[207,32,584,20,"node"],[207,36,584,24],[207,37,584,25,"ignoreCase"],[207,47,584,20],[207,50,584,38],[207,53,584,20],[207,56,584,44],[207,58,575,17],[207,59,575,8],[208,0,585,7],[208,9,574,6],[208,15,585,13],[209,0,590,8,"regexp"],[209,10,590,8,"regexp"],[209,16,590,14],[209,19,590,17,"node"],[209,23,590,21],[209,24,590,22,"inverted"],[209,32,590,17],[209,35,590,33],[209,48,590,17],[209,51,590,49],[209,60,590,8],[210,0,591,7],[212,0,593,6,"parts"],[212,8,593,6,"parts"],[212,13,593,11],[212,16,593,14],[212,22,594,10,"arrays"],[212,28,594,16],[212,29,594,17,"map"],[212,32,594,10],[212,33,594,21,"node"],[212,37,594,25],[212,38,594,26,"parts"],[212,43,594,10],[212,45,594,33],[212,55,594,42,"part"],[212,59,594,33],[212,61,594,48],[213,0,595,12],[213,17,595,19,"part"],[213,21,595,23],[213,33,595,35,"Array"],[213,38,595,19],[213,41,596,16],[213,48,596,23,"js"],[213,50,596,25],[213,51,596,26,"stringEscape"],[213,63,596,23],[213,64,596,39,"part"],[213,68,596,43],[213,69,596,44],[213,70,596,43],[213,71,596,23],[213,72,596,16],[213,75,596,50],[213,81,596,16],[213,84,596,59,"js"],[213,86,596,61],[213,87,596,62,"stringEscape"],[213,99,596,59],[213,100,596,75,"part"],[213,104,596,79],[213,105,596,80],[213,106,596,79],[213,107,596,59],[213,108,596,16],[213,111,596,86],[213,115,595,19],[213,118,597,16],[213,124,597,22,"js"],[213,126,597,24],[213,127,597,25,"stringEscape"],[213,139,597,22],[213,140,597,38,"part"],[213,144,597,22],[213,145,597,16],[213,148,597,46],[213,151,595,12],[214,0,598,11],[214,9,594,10],[214,11,598,13,"join"],[214,15,594,10],[214,16,598,18],[214,20,594,10],[214,21,593,14],[214,24,599,10],[214,27,593,6],[215,0,601,6,"regexpIndex"],[215,8,601,6,"regexpIndex"],[215,19,601,17],[215,22,601,22,"addConst"],[215,30,601,30],[215,31,601,31,"regexp"],[215,37,601,30],[215,38,601,6],[216,0,602,6,"expectedIndex"],[216,8,602,6,"expectedIndex"],[216,21,602,19],[216,24,602,22,"addConst"],[216,32,602,30],[216,33,603,8],[216,59,604,12,"parts"],[216,64,603,8],[216,67,604,20],[216,71,603,8],[216,74,605,12,"node"],[216,78,605,16],[216,79,605,17,"inverted"],[216,87,603,8],[216,90,605,28],[216,94,603,8],[216,97,606,12,"node"],[216,101,606,16],[216,102,606,17,"ignoreCase"],[216,112,603,8],[216,115,607,12],[216,118,602,30],[216,119,602,6],[217,0,610,6],[217,15,610,13,"buildCondition"],[217,29,610,27],[217,30,611,8],[217,31,611,9,"op"],[217,33,611,11],[217,34,611,12,"MATCH_REGEXP"],[217,46,611,8],[217,48,611,26,"regexpIndex"],[217,59,611,8],[217,60,610,27],[217,62,612,8],[217,63,612,9,"op"],[217,65,612,11],[217,66,612,12,"ACCEPT_N"],[217,74,612,8],[217,76,612,22],[217,77,612,8],[217,78,610,27],[217,80,613,8],[217,81,613,9,"op"],[217,83,613,11],[217,84,613,12,"FAIL"],[217,88,613,8],[217,90,613,18,"expectedIndex"],[217,103,613,8],[217,104,610,27],[217,105,610,6],[218,0,615,5],[218,7,283,31],[219,0,617,4,"any"],[219,6,617,4,"any"],[219,9,617,7],[219,11,617,9],[219,26,617,20],[220,0,618,6],[220,12,618,10,"expectedIndex"],[220,25,618,23],[220,28,618,26,"addConst"],[220,36,618,34],[220,37,618,35],[220,59,618,34],[220,60,618,6],[221,0,620,6],[221,15,620,13,"buildCondition"],[221,29,620,27],[221,30,621,8],[221,31,621,9,"op"],[221,33,621,11],[221,34,621,12,"MATCH_ANY"],[221,43,621,8],[221,44,620,27],[221,46,622,8],[221,47,622,9,"op"],[221,49,622,11],[221,50,622,12,"ACCEPT_N"],[221,58,622,8],[221,60,622,22],[221,61,622,8],[221,62,620,27],[221,64,623,8],[221,65,623,9,"op"],[221,67,623,11],[221,68,623,12,"FAIL"],[221,72,623,8],[221,74,623,18,"expectedIndex"],[221,87,623,8],[221,88,620,27],[221,89,620,6],[222,0,625,5],[223,0,283,31],[223,5,283,17],[223,6,283,2],[224,0,628,2,"generate"],[224,4,628,2,"generate"],[224,12,628,10],[224,13,628,11,"ast"],[224,16,628,10],[224,17,628,2],[225,0,629,1],[227,0,631,0,"module"],[227,2,631,0,"module"],[227,8,631,6],[227,9,631,7,"exports"],[227,16,631,0],[227,19,631,17,"generateBytecode"],[227,35,631,0]]},"type":"js/module"}]}