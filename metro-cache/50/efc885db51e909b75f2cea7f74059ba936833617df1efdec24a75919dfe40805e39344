{"dependencies":[{"name":"./_global","data":{"isAsync":false}},{"name":"./_hide","data":{"isAsync":false}},{"name":"./_has","data":{"isAsync":false}},{"name":"./_uid","data":{"isAsync":false}},{"name":"./_core","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var global = _$$_REQUIRE(_dependencyMap[0], \"./_global\");\n\n  var hide = _$$_REQUIRE(_dependencyMap[1], \"./_hide\");\n\n  var has = _$$_REQUIRE(_dependencyMap[2], \"./_has\");\n\n  var SRC = _$$_REQUIRE(_dependencyMap[3], \"./_uid\")('src');\n\n  var TO_STRING = 'toString';\n  var $toString = Function[TO_STRING];\n  var TPL = ('' + $toString).split(TO_STRING);\n\n  _$$_REQUIRE(_dependencyMap[4], \"./_core\").inspectSource = function (it) {\n    return $toString.call(it);\n  };\n\n  (module.exports = function (O, key, val, safe) {\n    var isFunction = typeof val == 'function';\n    if (isFunction) has(val, 'name') || hide(val, 'name', key);\n    if (O[key] === val) return;\n    if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n\n    if (O === global) {\n      O[key] = val;\n    } else if (!safe) {\n      delete O[key];\n      hide(O, key, val);\n    } else if (O[key]) {\n      O[key] = val;\n    } else {\n      hide(O, key, val);\n    }\n  })(Function.prototype, TO_STRING, function toString() {\n    return typeof this == 'function' && this[SRC] || $toString.call(this);\n  });\n});","map":[[2,0,1,0],[2,6,1,4,"global"],[2,12,1,10],[2,15,1,13,"require"],[2,26,1,20],[2,58,1,0],[4,0,2,0],[4,6,2,4,"hide"],[4,10,2,8],[4,13,2,11,"require"],[4,24,2,18],[4,54,2,0],[6,0,3,0],[6,6,3,4,"has"],[6,9,3,7],[6,12,3,10,"require"],[6,23,3,17],[6,52,3,0],[8,0,4,0],[8,6,4,4,"SRC"],[8,9,4,7],[8,12,4,10,"require"],[8,23,4,17],[8,52,4,10],[8,53,4,28],[8,58,4,10],[8,59,4,0],[10,0,5,0],[10,6,5,4,"TO_STRING"],[10,15,5,13],[10,18,5,16],[10,28,5,0],[11,0,6,0],[11,6,6,4,"$toString"],[11,15,6,13],[11,18,6,16,"Function"],[11,26,6,24],[11,27,6,25,"TO_STRING"],[11,36,6,24],[11,37,6,0],[12,0,7,0],[12,6,7,4,"TPL"],[12,9,7,7],[12,12,7,10],[12,13,7,11],[12,18,7,16,"$toString"],[12,27,7,10],[12,29,7,27,"split"],[12,34,7,10],[12,35,7,33,"TO_STRING"],[12,44,7,10],[12,45,7,0],[14,0,9,0,"require"],[14,2,9,0,"require"],[14,13,9,7],[14,43,9,0],[14,44,9,19,"inspectSource"],[14,57,9,0],[14,60,9,35],[14,70,9,45,"it"],[14,72,9,35],[14,74,9,49],[15,0,10,2],[15,11,10,9,"$toString"],[15,20,10,18],[15,21,10,19,"call"],[15,25,10,9],[15,26,10,24,"it"],[15,28,10,9],[15,29,10,2],[16,0,11,1],[16,3,9,0],[18,0,13,0],[18,3,13,1,"module"],[18,9,13,7],[18,10,13,8,"exports"],[18,17,13,1],[18,20,13,18],[18,30,13,28,"O"],[18,31,13,18],[18,33,13,31,"key"],[18,36,13,18],[18,38,13,36,"val"],[18,41,13,18],[18,43,13,41,"safe"],[18,47,13,18],[18,49,13,47],[19,0,14,2],[19,8,14,6,"isFunction"],[19,18,14,16],[19,21,14,19],[19,28,14,26,"val"],[19,31,14,19],[19,35,14,33],[19,45,14,2],[20,0,15,2],[20,8,15,6,"isFunction"],[20,18,15,2],[20,20,15,18,"has"],[20,23,15,21],[20,24,15,22,"val"],[20,27,15,21],[20,29,15,27],[20,35,15,21],[20,36,15,18],[20,40,15,38,"hide"],[20,44,15,42],[20,45,15,43,"val"],[20,48,15,42],[20,50,15,48],[20,56,15,42],[20,58,15,56,"key"],[20,61,15,42],[20,62,15,18],[21,0,16,2],[21,8,16,6,"O"],[21,9,16,7],[21,10,16,8,"key"],[21,13,16,7],[21,14,16,6],[21,19,16,17,"val"],[21,22,16,2],[21,24,16,22],[22,0,17,2],[22,8,17,6,"isFunction"],[22,18,17,2],[22,20,17,18,"has"],[22,23,17,21],[22,24,17,22,"val"],[22,27,17,21],[22,29,17,27,"SRC"],[22,32,17,21],[22,33,17,18],[22,37,17,35,"hide"],[22,41,17,39],[22,42,17,40,"val"],[22,45,17,39],[22,47,17,45,"SRC"],[22,50,17,39],[22,52,17,50,"O"],[22,53,17,51],[22,54,17,52,"key"],[22,57,17,51],[22,58,17,50],[22,61,17,59],[22,66,17,64,"O"],[22,67,17,65],[22,68,17,66,"key"],[22,71,17,65],[22,72,17,50],[22,75,17,73,"TPL"],[22,78,17,76],[22,79,17,77,"join"],[22,83,17,73],[22,84,17,82,"String"],[22,90,17,88],[22,91,17,89,"key"],[22,94,17,88],[22,95,17,73],[22,96,17,39],[22,97,17,18],[24,0,18,2],[24,8,18,6,"O"],[24,9,18,7],[24,14,18,12,"global"],[24,20,18,2],[24,22,18,20],[25,0,19,4,"O"],[25,6,19,4,"O"],[25,7,19,5],[25,8,19,6,"key"],[25,11,19,5],[25,12,19,4],[25,15,19,13,"val"],[25,18,19,4],[26,0,20,3],[26,5,18,2],[26,11,20,9],[26,15,20,13],[26,16,20,14,"safe"],[26,20,20,9],[26,22,20,20],[27,0,21,4],[27,13,21,11,"O"],[27,14,21,12],[27,15,21,13,"key"],[27,18,21,12],[27,19,21,4],[28,0,22,4,"hide"],[28,6,22,4,"hide"],[28,10,22,8],[28,11,22,9,"O"],[28,12,22,8],[28,14,22,12,"key"],[28,17,22,8],[28,19,22,17,"val"],[28,22,22,8],[28,23,22,4],[29,0,23,3],[29,5,20,9],[29,11,23,9],[29,15,23,13,"O"],[29,16,23,14],[29,17,23,15,"key"],[29,20,23,14],[29,21,23,9],[29,23,23,21],[30,0,24,4,"O"],[30,6,24,4,"O"],[30,7,24,5],[30,8,24,6,"key"],[30,11,24,5],[30,12,24,4],[30,15,24,13,"val"],[30,18,24,4],[31,0,25,3],[31,5,23,9],[31,11,25,9],[32,0,26,4,"hide"],[32,6,26,4,"hide"],[32,10,26,8],[32,11,26,9,"O"],[32,12,26,8],[32,14,26,12,"key"],[32,17,26,8],[32,19,26,17,"val"],[32,22,26,8],[32,23,26,4],[33,0,27,3],[34,0,29,1],[34,3,13,0],[34,5,29,3,"Function"],[34,13,29,11],[34,14,29,12,"prototype"],[34,23,13,0],[34,25,29,23,"TO_STRING"],[34,34,13,0],[34,36,29,34],[34,45,29,43,"toString"],[34,53,29,34],[34,56,29,54],[35,0,30,2],[35,11,30,9],[35,18,30,16],[35,22,30,9],[35,26,30,24],[35,36,30,9],[35,40,30,38],[35,45,30,43,"SRC"],[35,48,30,38],[35,49,30,9],[35,53,30,51,"$toString"],[35,62,30,60],[35,63,30,61,"call"],[35,67,30,51],[35,68,30,66],[35,72,30,51],[35,73,30,2],[36,0,31,1],[36,3,13,0]]},"type":"js/module"}]}