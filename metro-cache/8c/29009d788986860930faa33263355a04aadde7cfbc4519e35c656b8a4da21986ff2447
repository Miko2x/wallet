{"dependencies":[{"name":"./_flags","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var regexpFlags = _$$_REQUIRE(_dependencyMap[0], \"./_flags\");\n\n  var nativeExec = RegExp.prototype.exec;\n  var nativeReplace = String.prototype.replace;\n  var patchedExec = nativeExec;\n  var LAST_INDEX = 'lastIndex';\n\n  var UPDATES_LAST_INDEX_WRONG = function () {\n    var re1 = /a/,\n        re2 = /b*/g;\n    nativeExec.call(re1, 'a');\n    nativeExec.call(re2, 'a');\n    return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;\n  }();\n\n  var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n  var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;\n\n  if (PATCH) {\n    patchedExec = function exec(str) {\n      var re = this;\n      var lastIndex, reCopy, match, i;\n\n      if (NPCG_INCLUDED) {\n        reCopy = new RegExp('^' + re.source + '$(?!\\\\s)', regexpFlags.call(re));\n      }\n\n      if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];\n      match = nativeExec.call(re, str);\n\n      if (UPDATES_LAST_INDEX_WRONG && match) {\n        re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;\n      }\n\n      if (NPCG_INCLUDED && match && match.length > 1) {\n        nativeReplace.call(match[0], reCopy, function () {\n          for (i = 1; i < arguments.length - 2; i++) {\n            if (arguments[i] === undefined) match[i] = undefined;\n          }\n        });\n      }\n\n      return match;\n    };\n  }\n\n  module.exports = patchedExec;\n});","map":[[2,0,1,0],[4,0,3,0],[4,6,3,4,"regexpFlags"],[4,17,3,15],[4,20,3,18,"require"],[4,31,3,25],[4,62,3,0],[6,0,5,0],[6,6,5,4,"nativeExec"],[6,16,5,14],[6,19,5,17,"RegExp"],[6,25,5,23],[6,26,5,24,"prototype"],[6,35,5,17],[6,36,5,34,"exec"],[6,40,5,0],[7,0,9,0],[7,6,9,4,"nativeReplace"],[7,19,9,17],[7,22,9,20,"String"],[7,28,9,26],[7,29,9,27,"prototype"],[7,38,9,20],[7,39,9,37,"replace"],[7,46,9,0],[8,0,11,0],[8,6,11,4,"patchedExec"],[8,17,11,15],[8,20,11,18,"nativeExec"],[8,30,11,0],[9,0,13,0],[9,6,13,4,"LAST_INDEX"],[9,16,13,14],[9,19,13,17],[9,30,13,0],[11,0,15,0],[11,6,15,4,"UPDATES_LAST_INDEX_WRONG"],[11,30,15,28],[11,33,15,32],[11,45,15,44],[12,0,16,2],[12,8,16,6,"re1"],[12,11,16,9],[12,14,16,12],[12,17,16,2],[13,0,16,2],[13,8,17,6,"re2"],[13,11,17,9],[13,14,17,12],[13,19,16,2],[14,0,18,2,"nativeExec"],[14,4,18,2,"nativeExec"],[14,14,18,12],[14,15,18,13,"call"],[14,19,18,2],[14,20,18,18,"re1"],[14,23,18,2],[14,25,18,23],[14,28,18,2],[15,0,19,2,"nativeExec"],[15,4,19,2,"nativeExec"],[15,14,19,12],[15,15,19,13,"call"],[15,19,19,2],[15,20,19,18,"re2"],[15,23,19,2],[15,25,19,23],[15,28,19,2],[16,0,20,2],[16,11,20,9,"re1"],[16,14,20,12],[16,15,20,13,"LAST_INDEX"],[16,25,20,12],[16,26,20,9],[16,31,20,29],[16,32,20,9],[16,36,20,34,"re2"],[16,39,20,37],[16,40,20,38,"LAST_INDEX"],[16,50,20,37],[16,51,20,34],[16,56,20,54],[16,57,20,2],[17,0,21,1],[17,3,15,31],[17,5,15,0],[19,0,24,0],[19,6,24,4,"NPCG_INCLUDED"],[19,19,24,17],[19,22,24,20],[19,29,24,27,"exec"],[19,33,24,20],[19,34,24,32],[19,36,24,20],[19,38,24,36],[19,39,24,20],[19,45,24,43,"undefined"],[19,54,24,0],[20,0,26,0],[20,6,26,4,"PATCH"],[20,11,26,9],[20,14,26,12,"UPDATES_LAST_INDEX_WRONG"],[20,38,26,36],[20,42,26,40,"NPCG_INCLUDED"],[20,55,26,0],[22,0,28,0],[22,6,28,4,"PATCH"],[22,11,28,0],[22,13,28,11],[23,0,29,2,"patchedExec"],[23,4,29,2,"patchedExec"],[23,15,29,13],[23,18,29,16],[23,27,29,25,"exec"],[23,31,29,16],[23,32,29,30,"str"],[23,35,29,16],[23,37,29,35],[24,0,30,4],[24,10,30,8,"re"],[24,12,30,10],[24,15,30,13],[24,19,30,4],[25,0,31,4],[25,10,31,8,"lastIndex"],[25,19,31,4],[25,21,31,19,"reCopy"],[25,27,31,4],[25,29,31,27,"match"],[25,34,31,4],[25,36,31,34,"i"],[25,37,31,4],[27,0,33,4],[27,10,33,8,"NPCG_INCLUDED"],[27,23,33,4],[27,25,33,23],[28,0,34,6,"reCopy"],[28,8,34,6,"reCopy"],[28,14,34,12],[28,17,34,15],[28,21,34,19,"RegExp"],[28,27,34,15],[28,28,34,26],[28,34,34,32,"re"],[28,36,34,34],[28,37,34,35,"source"],[28,43,34,26],[28,46,34,44],[28,56,34,15],[28,58,34,56,"regexpFlags"],[28,69,34,67],[28,70,34,68,"call"],[28,74,34,56],[28,75,34,73,"re"],[28,77,34,56],[28,78,34,15],[28,79,34,6],[29,0,35,5],[31,0,36,4],[31,10,36,8,"UPDATES_LAST_INDEX_WRONG"],[31,34,36,4],[31,36,36,34,"lastIndex"],[31,45,36,43],[31,48,36,46,"re"],[31,50,36,48],[31,51,36,49,"LAST_INDEX"],[31,61,36,48],[31,62,36,34],[32,0,38,4,"match"],[32,6,38,4,"match"],[32,11,38,9],[32,14,38,12,"nativeExec"],[32,24,38,22],[32,25,38,23,"call"],[32,29,38,12],[32,30,38,28,"re"],[32,32,38,12],[32,34,38,32,"str"],[32,37,38,12],[32,38,38,4],[34,0,40,4],[34,10,40,8,"UPDATES_LAST_INDEX_WRONG"],[34,34,40,32],[34,38,40,36,"match"],[34,43,40,4],[34,45,40,43],[35,0,41,6,"re"],[35,8,41,6,"re"],[35,10,41,8],[35,11,41,9,"LAST_INDEX"],[35,21,41,8],[35,22,41,6],[35,25,41,23,"re"],[35,27,41,25],[35,28,41,26,"global"],[35,34,41,23],[35,37,41,35,"match"],[35,42,41,40],[35,43,41,41,"index"],[35,48,41,35],[35,51,41,49,"match"],[35,56,41,54],[35,57,41,55],[35,58,41,54],[35,59,41,49],[35,60,41,58,"length"],[35,66,41,23],[35,69,41,67,"lastIndex"],[35,78,41,6],[36,0,42,5],[38,0,43,4],[38,10,43,8,"NPCG_INCLUDED"],[38,23,43,21],[38,27,43,25,"match"],[38,32,43,8],[38,36,43,34,"match"],[38,41,43,39],[38,42,43,40,"length"],[38,48,43,34],[38,51,43,49],[38,52,43,4],[38,54,43,52],[39,0,47,6,"nativeReplace"],[39,8,47,6,"nativeReplace"],[39,21,47,19],[39,22,47,20,"call"],[39,26,47,6],[39,27,47,25,"match"],[39,32,47,30],[39,33,47,31],[39,34,47,30],[39,35,47,6],[39,37,47,35,"reCopy"],[39,43,47,6],[39,45,47,43],[39,57,47,55],[40,0,48,8],[40,15,48,13,"i"],[40,16,48,14],[40,19,48,17],[40,20,48,8],[40,22,48,20,"i"],[40,23,48,21],[40,26,48,24,"arguments"],[40,35,48,33],[40,36,48,34,"length"],[40,42,48,24],[40,45,48,43],[40,46,48,8],[40,48,48,46,"i"],[40,49,48,47],[40,51,48,8],[40,53,48,51],[41,0,49,10],[41,16,49,14,"arguments"],[41,25,49,23],[41,26,49,24,"i"],[41,27,49,23],[41,28,49,14],[41,33,49,31,"undefined"],[41,42,49,10],[41,44,49,42,"match"],[41,49,49,47],[41,50,49,48,"i"],[41,51,49,47],[41,52,49,42],[41,55,49,53,"undefined"],[41,64,49,42],[42,0,50,9],[43,0,51,7],[43,9,47,6],[44,0,52,5],[46,0,54,4],[46,13,54,11,"match"],[46,18,54,4],[47,0,55,3],[47,5,29,2],[48,0,56,1],[50,0,58,0,"module"],[50,2,58,0,"module"],[50,8,58,6],[50,9,58,7,"exports"],[50,16,58,0],[50,19,58,17,"patchedExec"],[50,30,58,0]]},"type":"js/module"}]}