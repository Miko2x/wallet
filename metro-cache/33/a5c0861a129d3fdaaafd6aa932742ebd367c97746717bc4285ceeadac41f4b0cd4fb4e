{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"./extractBrush","data":{"isAsync":false}},{"name":"./extractOpacity","data":{"isAsync":false}},{"name":"./extractLengthList","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _default;\n\n  var _extractBrush = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./extractBrush\"));\n\n  var _extractOpacity = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"./extractOpacity\"));\n\n  var _extractLengthList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./extractLengthList\"));\n\n  var caps = {\n    butt: 0,\n    square: 2,\n    round: 1\n  };\n  var joins = {\n    miter: 0,\n    bevel: 2,\n    round: 1\n  };\n  var strokeProps = [\"stroke\", \"strokeWidth\", \"strokeOpacity\", \"strokeDasharray\", \"strokeDashoffset\", \"strokeLinecap\", \"strokeLinejoin\", \"strokeMiterlimit\"];\n\n  function _default(props, styleProperties) {\n    strokeProps.forEach(function (name) {\n      if (props.hasOwnProperty(name)) {\n        styleProperties.push(name);\n      }\n    });\n    var stroke = props.stroke;\n    var strokeWidth = props.strokeWidth,\n        strokeDasharray = props.strokeDasharray;\n\n    if (!strokeDasharray || strokeDasharray === \"none\") {\n      strokeDasharray = null;\n    } else {\n      strokeDasharray = (0, _extractLengthList.default)(strokeDasharray);\n\n      if (strokeDasharray && strokeDasharray.length % 2 === 1) {\n        strokeDasharray = strokeDasharray.concat(strokeDasharray);\n      }\n    }\n\n    if (!strokeWidth || typeof strokeWidth !== \"string\") {\n      strokeWidth = \"\" + (strokeWidth || 1);\n    }\n\n    return {\n      stroke: (0, _extractBrush.default)(stroke),\n      strokeOpacity: (0, _extractOpacity.default)(props.strokeOpacity),\n      strokeLinecap: caps[props.strokeLinecap] || 0,\n      strokeLinejoin: joins[props.strokeLinejoin] || 0,\n      strokeDasharray: strokeDasharray,\n      strokeWidth: strokeWidth,\n      strokeDashoffset: strokeDasharray ? +props.strokeDashoffset || 0 : null,\n      strokeMiterlimit: parseFloat(props.strokeMiterlimit) || 4\n    };\n  }\n});","map":[[9,0,1,0],[11,0,2,0],[13,0,3,0],[15,0,5,0],[15,6,5,6,"caps"],[15,10,5,10],[15,13,5,13],[16,0,6,4,"butt"],[16,4,6,4,"butt"],[16,8,6,8],[16,10,6,10],[16,11,5,13],[17,0,7,4,"square"],[17,4,7,4,"square"],[17,10,7,10],[17,12,7,12],[17,13,5,13],[18,0,8,4,"round"],[18,4,8,4,"round"],[18,9,8,9],[18,11,8,11],[19,0,5,13],[19,3,5,0],[20,0,11,0],[20,6,11,6,"joins"],[20,11,11,11],[20,14,11,14],[21,0,12,4,"miter"],[21,4,12,4,"miter"],[21,9,12,9],[21,11,12,11],[21,12,11,14],[22,0,13,4,"bevel"],[22,4,13,4,"bevel"],[22,9,13,9],[22,11,13,11],[22,12,11,14],[23,0,14,4,"round"],[23,4,14,4,"round"],[23,9,14,9],[23,11,14,11],[24,0,11,14],[24,3,11,0],[25,0,17,0],[25,6,17,6,"strokeProps"],[25,17,17,17],[25,20,17,20],[25,21,18,4],[25,29,17,20],[25,31,19,4],[25,44,17,20],[25,46,20,4],[25,61,17,20],[25,63,21,4],[25,80,17,20],[25,82,22,4],[25,100,17,20],[25,102,23,4],[25,117,17,20],[25,119,24,4],[25,135,17,20],[25,137,25,4],[25,155,17,20],[25,156,17,0],[27,0,28,15],[27,20,28,24,"props"],[27,25,28,15],[27,27,28,31,"styleProperties"],[27,42,28,15],[27,44,28,48],[28,0,29,4,"strokeProps"],[28,4,29,4,"strokeProps"],[28,15,29,15],[28,16,29,16,"forEach"],[28,23,29,4],[28,24,29,24],[28,34,29,24,"name"],[28,38,29,28],[28,40,29,32],[29,0,30,8],[29,10,30,12,"props"],[29,15,30,17],[29,16,30,18,"hasOwnProperty"],[29,30,30,12],[29,31,30,33,"name"],[29,35,30,12],[29,36,30,8],[29,38,30,40],[30,0,31,12,"styleProperties"],[30,8,31,12,"styleProperties"],[30,23,31,27],[30,24,31,28,"push"],[30,28,31,12],[30,29,31,33,"name"],[30,33,31,12],[31,0,32,9],[32,0,33,5],[32,5,29,4],[33,0,28,48],[33,8,35,12,"stroke"],[33,14,28,48],[33,17,35,23,"props"],[33,22,28,48],[33,23,35,12,"stroke"],[33,29,28,48],[34,0,28,48],[34,8,36,10,"strokeWidth"],[34,19,28,48],[34,22,36,43,"props"],[34,27,28,48],[34,28,36,10,"strokeWidth"],[34,39,28,48],[35,0,28,48],[35,8,36,23,"strokeDasharray"],[35,23,28,48],[35,26,36,43,"props"],[35,31,28,48],[35,32,36,23,"strokeDasharray"],[35,47,28,48],[37,0,38,4],[37,8,38,8],[37,9,38,9,"strokeDasharray"],[37,24,38,8],[37,28,38,28,"strokeDasharray"],[37,43,38,43],[37,48,38,48],[37,54,38,4],[37,56,38,56],[38,0,39,8,"strokeDasharray"],[38,6,39,8,"strokeDasharray"],[38,21,39,23],[38,24,39,26],[38,28,39,8],[39,0,40,5],[39,5,38,4],[39,11,40,11],[40,0,45,8,"strokeDasharray"],[40,6,45,8,"strokeDasharray"],[40,21,45,23],[40,24,45,26],[40,56,45,44,"strokeDasharray"],[40,71,45,26],[40,72,45,8],[42,0,46,8],[42,10,46,12,"strokeDasharray"],[42,25,46,27],[42,29,46,31,"strokeDasharray"],[42,44,46,46],[42,45,46,47,"length"],[42,51,46,31],[42,54,46,56],[42,55,46,31],[42,60,46,62],[42,61,46,8],[42,63,46,65],[43,0,47,12,"strokeDasharray"],[43,8,47,12,"strokeDasharray"],[43,23,47,27],[43,26,47,30,"strokeDasharray"],[43,41,47,45],[43,42,47,46,"concat"],[43,48,47,30],[43,49,47,53,"strokeDasharray"],[43,64,47,30],[43,65,47,12],[44,0,48,9],[45,0,49,5],[47,0,51,4],[47,8,51,8],[47,9,51,9,"strokeWidth"],[47,20,51,8],[47,24,51,24],[47,31,51,31,"strokeWidth"],[47,42,51,24],[47,47,51,47],[47,55,51,4],[47,57,51,57],[48,0,52,8,"strokeWidth"],[48,6,52,8,"strokeWidth"],[48,17,52,19],[48,26,52,25,"strokeWidth"],[48,37,52,36],[48,41,52,40],[48,42,52,19],[48,43,52,8],[49,0,53,5],[51,0,55,4],[51,11,55,11],[52,0,56,8,"stroke"],[52,6,56,8,"stroke"],[52,12,56,14],[52,14,56,16],[52,41,56,29,"stroke"],[52,47,56,16],[52,48,55,11],[53,0,57,8,"strokeOpacity"],[53,6,57,8,"strokeOpacity"],[53,19,57,21],[53,21,57,23],[53,50,57,38,"props"],[53,55,57,43],[53,56,57,44,"strokeOpacity"],[53,69,57,23],[53,70,55,11],[54,0,58,8,"strokeLinecap"],[54,6,58,8,"strokeLinecap"],[54,19,58,21],[54,21,58,23,"caps"],[54,25,58,27],[54,26,58,28,"props"],[54,31,58,33],[54,32,58,34,"strokeLinecap"],[54,45,58,27],[54,46,58,23],[54,50,58,52],[54,51,55,11],[55,0,59,8,"strokeLinejoin"],[55,6,59,8,"strokeLinejoin"],[55,20,59,22],[55,22,59,24,"joins"],[55,27,59,29],[55,28,59,30,"props"],[55,33,59,35],[55,34,59,36,"strokeLinejoin"],[55,48,59,29],[55,49,59,24],[55,53,59,55],[55,54,55,11],[56,0,60,8,"strokeDasharray"],[56,6,60,8,"strokeDasharray"],[56,21,60,23],[56,23,60,25,"strokeDasharray"],[56,38,55,11],[57,0,61,8,"strokeWidth"],[57,6,61,8,"strokeWidth"],[57,17,61,19],[57,19,61,21,"strokeWidth"],[57,30,55,11],[58,0,62,8,"strokeDashoffset"],[58,6,62,8,"strokeDashoffset"],[58,22,62,24],[58,24,62,26,"strokeDasharray"],[58,39,62,41],[58,42,62,44],[58,43,62,45,"props"],[58,48,62,50],[58,49,62,51,"strokeDashoffset"],[58,65,62,44],[58,69,62,71],[58,70,62,41],[58,73,62,75],[58,77,55,11],[59,0,63,8,"strokeMiterlimit"],[59,6,63,8,"strokeMiterlimit"],[59,22,63,24],[59,24,63,26,"parseFloat"],[59,34,63,36],[59,35,63,37,"props"],[59,40,63,42],[59,41,63,43,"strokeMiterlimit"],[59,57,63,36],[59,58,63,26],[59,62,63,64],[60,0,55,11],[60,5,55,4],[61,0,65,1]]},"type":"js/module"}]}