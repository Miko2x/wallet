{"dependencies":[{"name":"./_redefine-all","data":{"isAsync":false}},{"name":"./_meta","data":{"isAsync":false}},{"name":"./_an-object","data":{"isAsync":false}},{"name":"./_is-object","data":{"isAsync":false}},{"name":"./_an-instance","data":{"isAsync":false}},{"name":"./_for-of","data":{"isAsync":false}},{"name":"./_array-methods","data":{"isAsync":false}},{"name":"./_has","data":{"isAsync":false}},{"name":"./_validate-collection","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var redefineAll = _$$_REQUIRE(_dependencyMap[0], \"./_redefine-all\");\n\n  var getWeak = _$$_REQUIRE(_dependencyMap[1], \"./_meta\").getWeak;\n\n  var anObject = _$$_REQUIRE(_dependencyMap[2], \"./_an-object\");\n\n  var isObject = _$$_REQUIRE(_dependencyMap[3], \"./_is-object\");\n\n  var anInstance = _$$_REQUIRE(_dependencyMap[4], \"./_an-instance\");\n\n  var forOf = _$$_REQUIRE(_dependencyMap[5], \"./_for-of\");\n\n  var createArrayMethod = _$$_REQUIRE(_dependencyMap[6], \"./_array-methods\");\n\n  var $has = _$$_REQUIRE(_dependencyMap[7], \"./_has\");\n\n  var validate = _$$_REQUIRE(_dependencyMap[8], \"./_validate-collection\");\n\n  var arrayFind = createArrayMethod(5);\n  var arrayFindIndex = createArrayMethod(6);\n  var id = 0;\n\n  var uncaughtFrozenStore = function uncaughtFrozenStore(that) {\n    return that._l || (that._l = new UncaughtFrozenStore());\n  };\n\n  var UncaughtFrozenStore = function UncaughtFrozenStore() {\n    this.a = [];\n  };\n\n  var findUncaughtFrozen = function findUncaughtFrozen(store, key) {\n    return arrayFind(store.a, function (it) {\n      return it[0] === key;\n    });\n  };\n\n  UncaughtFrozenStore.prototype = {\n    get: function get(key) {\n      var entry = findUncaughtFrozen(this, key);\n      if (entry) return entry[1];\n    },\n    has: function has(key) {\n      return !!findUncaughtFrozen(this, key);\n    },\n    set: function set(key, value) {\n      var entry = findUncaughtFrozen(this, key);\n      if (entry) entry[1] = value;else this.a.push([key, value]);\n    },\n    'delete': function _delete(key) {\n      var index = arrayFindIndex(this.a, function (it) {\n        return it[0] === key;\n      });\n      if (~index) this.a.splice(index, 1);\n      return !!~index;\n    }\n  };\n  module.exports = {\n    getConstructor: function getConstructor(wrapper, NAME, IS_MAP, ADDER) {\n      var C = wrapper(function (that, iterable) {\n        anInstance(that, C, NAME, '_i');\n        that._t = NAME;\n        that._i = id++;\n        that._l = undefined;\n        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n      });\n      redefineAll(C.prototype, {\n        'delete': function _delete(key) {\n          if (!isObject(key)) return false;\n          var data = getWeak(key);\n          if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);\n          return data && $has(data, this._i) && delete data[this._i];\n        },\n        has: function has(key) {\n          if (!isObject(key)) return false;\n          var data = getWeak(key);\n          if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);\n          return data && $has(data, this._i);\n        }\n      });\n      return C;\n    },\n    def: function def(that, key, value) {\n      var data = getWeak(anObject(key), true);\n      if (data === true) uncaughtFrozenStore(that).set(key, value);else data[that._i] = value;\n      return that;\n    },\n    ufstore: uncaughtFrozenStore\n  };\n});","map":[[2,0,1,0],[4,0,2,0],[4,6,2,4,"redefineAll"],[4,17,2,15],[4,20,2,18,"require"],[4,31,2,25],[4,69,2,0],[6,0,3,0],[6,6,3,4,"getWeak"],[6,13,3,11],[6,16,3,14,"require"],[6,27,3,21],[6,57,3,14],[6,58,3,33,"getWeak"],[6,65,3,0],[8,0,4,0],[8,6,4,4,"anObject"],[8,14,4,12],[8,17,4,15,"require"],[8,28,4,22],[8,63,4,0],[10,0,5,0],[10,6,5,4,"isObject"],[10,14,5,12],[10,17,5,15,"require"],[10,28,5,22],[10,63,5,0],[12,0,6,0],[12,6,6,4,"anInstance"],[12,16,6,14],[12,19,6,17,"require"],[12,30,6,24],[12,67,6,0],[14,0,7,0],[14,6,7,4,"forOf"],[14,11,7,9],[14,14,7,12,"require"],[14,25,7,19],[14,57,7,0],[16,0,8,0],[16,6,8,4,"createArrayMethod"],[16,23,8,21],[16,26,8,24,"require"],[16,37,8,31],[16,76,8,0],[18,0,9,0],[18,6,9,4,"$has"],[18,10,9,8],[18,13,9,11,"require"],[18,24,9,18],[18,53,9,0],[20,0,10,0],[20,6,10,4,"validate"],[20,14,10,12],[20,17,10,15,"require"],[20,28,10,22],[20,73,10,0],[22,0,11,0],[22,6,11,4,"arrayFind"],[22,15,11,13],[22,18,11,16,"createArrayMethod"],[22,35,11,33],[22,36,11,34],[22,37,11,33],[22,38,11,0],[23,0,12,0],[23,6,12,4,"arrayFindIndex"],[23,20,12,18],[23,23,12,21,"createArrayMethod"],[23,40,12,38],[23,41,12,39],[23,42,12,38],[23,43,12,0],[24,0,13,0],[24,6,13,4,"id"],[24,8,13,6],[24,11,13,9],[24,12,13,0],[26,0,16,0],[26,6,16,4,"uncaughtFrozenStore"],[26,25,16,23],[26,28,16,26],[26,37,16,4,"uncaughtFrozenStore"],[26,56,16,26],[26,57,16,36,"that"],[26,61,16,26],[26,63,16,42],[27,0,17,2],[27,11,17,9,"that"],[27,15,17,13],[27,16,17,14,"_l"],[27,18,17,9],[27,23,17,21,"that"],[27,27,17,25],[27,28,17,26,"_l"],[27,30,17,21],[27,33,17,31],[27,37,17,35,"UncaughtFrozenStore"],[27,56,17,31],[27,58,17,9],[27,59,17,2],[28,0,18,1],[28,3,16,0],[30,0,19,0],[30,6,19,4,"UncaughtFrozenStore"],[30,25,19,23],[30,28,19,26],[30,37,19,4,"UncaughtFrozenStore"],[30,56,19,26],[30,59,19,38],[31,0,20,2],[31,9,20,7,"a"],[31,10,20,2],[31,13,20,11],[31,15,20,2],[32,0,21,1],[32,3,19,0],[34,0,22,0],[34,6,22,4,"findUncaughtFrozen"],[34,24,22,22],[34,27,22,25],[34,36,22,4,"findUncaughtFrozen"],[34,54,22,25],[34,55,22,35,"store"],[34,60,22,25],[34,62,22,42,"key"],[34,65,22,25],[34,67,22,47],[35,0,23,2],[35,11,23,9,"arrayFind"],[35,20,23,18],[35,21,23,19,"store"],[35,26,23,24],[35,27,23,25,"a"],[35,28,23,18],[35,30,23,28],[35,40,23,38,"it"],[35,42,23,28],[35,44,23,42],[36,0,24,4],[36,13,24,11,"it"],[36,15,24,13],[36,16,24,14],[36,17,24,13],[36,18,24,11],[36,23,24,21,"key"],[36,26,24,4],[37,0,25,3],[37,5,23,18],[37,6,23,2],[38,0,26,1],[38,3,22,0],[40,0,27,0,"UncaughtFrozenStore"],[40,2,27,0,"UncaughtFrozenStore"],[40,21,27,19],[40,22,27,20,"prototype"],[40,31,27,0],[40,34,27,32],[41,0,28,2,"get"],[41,4,28,2,"get"],[41,7,28,5],[41,9,28,7],[41,22,28,17,"key"],[41,25,28,7],[41,27,28,22],[42,0,29,4],[42,10,29,8,"entry"],[42,15,29,13],[42,18,29,16,"findUncaughtFrozen"],[42,36,29,34],[42,37,29,35],[42,41,29,34],[42,43,29,41,"key"],[42,46,29,34],[42,47,29,4],[43,0,30,4],[43,10,30,8,"entry"],[43,15,30,4],[43,17,30,15],[43,24,30,22,"entry"],[43,29,30,27],[43,30,30,28],[43,31,30,27],[43,32,30,15],[44,0,31,3],[44,5,27,32],[45,0,32,2,"has"],[45,4,32,2,"has"],[45,7,32,5],[45,9,32,7],[45,22,32,17,"key"],[45,25,32,7],[45,27,32,22],[46,0,33,4],[46,13,33,11],[46,14,33,12],[46,15,33,13,"findUncaughtFrozen"],[46,33,33,31],[46,34,33,32],[46,38,33,31],[46,40,33,38,"key"],[46,43,33,31],[46,44,33,4],[47,0,34,3],[47,5,27,32],[48,0,35,2,"set"],[48,4,35,2,"set"],[48,7,35,5],[48,9,35,7],[48,22,35,17,"key"],[48,25,35,7],[48,27,35,22,"value"],[48,32,35,7],[48,34,35,29],[49,0,36,4],[49,10,36,8,"entry"],[49,15,36,13],[49,18,36,16,"findUncaughtFrozen"],[49,36,36,34],[49,37,36,35],[49,41,36,34],[49,43,36,41,"key"],[49,46,36,34],[49,47,36,4],[50,0,37,4],[50,10,37,8,"entry"],[50,15,37,4],[50,17,37,15,"entry"],[50,22,37,20],[50,23,37,21],[50,24,37,20],[50,25,37,15],[50,28,37,26,"value"],[50,33,37,15],[50,34,37,4],[50,39,38,9],[50,44,38,14,"a"],[50,45,38,9],[50,46,38,16,"push"],[50,50,38,9],[50,51,38,21],[50,52,38,22,"key"],[50,55,38,21],[50,57,38,27,"value"],[50,62,38,21],[50,63,38,9],[51,0,39,3],[51,5,27,32],[52,0,40,2],[52,14,40,12],[52,31,40,22,"key"],[52,34,40,12],[52,36,40,27],[53,0,41,4],[53,10,41,8,"index"],[53,15,41,13],[53,18,41,16,"arrayFindIndex"],[53,32,41,30],[53,33,41,31],[53,38,41,36,"a"],[53,39,41,30],[53,41,41,39],[53,51,41,49,"it"],[53,53,41,39],[53,55,41,53],[54,0,42,6],[54,15,42,13,"it"],[54,17,42,15],[54,18,42,16],[54,19,42,15],[54,20,42,13],[54,25,42,23,"key"],[54,28,42,6],[55,0,43,5],[55,7,41,30],[55,8,41,4],[56,0,44,4],[56,10,44,8],[56,11,44,9,"index"],[56,16,44,4],[56,18,44,16],[56,23,44,21,"a"],[56,24,44,16],[56,25,44,23,"splice"],[56,31,44,16],[56,32,44,30,"index"],[56,37,44,16],[56,39,44,37],[56,40,44,16],[57,0,45,4],[57,13,45,11],[57,14,45,12],[57,15,45,13],[57,16,45,14,"index"],[57,21,45,4],[58,0,46,3],[59,0,27,32],[59,3,27,0],[60,0,49,0,"module"],[60,2,49,0,"module"],[60,8,49,6],[60,9,49,7,"exports"],[60,16,49,0],[60,19,49,17],[61,0,50,2,"getConstructor"],[61,4,50,2,"getConstructor"],[61,18,50,16],[61,20,50,18],[61,44,50,28,"wrapper"],[61,51,50,18],[61,53,50,37,"NAME"],[61,57,50,18],[61,59,50,43,"IS_MAP"],[61,65,50,18],[61,67,50,51,"ADDER"],[61,72,50,18],[61,74,50,58],[62,0,51,4],[62,10,51,8,"C"],[62,11,51,9],[62,14,51,12,"wrapper"],[62,21,51,19],[62,22,51,20],[62,32,51,30,"that"],[62,36,51,20],[62,38,51,36,"iterable"],[62,46,51,20],[62,48,51,46],[63,0,52,6,"anInstance"],[63,8,52,6,"anInstance"],[63,18,52,16],[63,19,52,17,"that"],[63,23,52,16],[63,25,52,23,"C"],[63,26,52,16],[63,28,52,26,"NAME"],[63,32,52,16],[63,34,52,32],[63,38,52,16],[63,39,52,6],[64,0,53,6,"that"],[64,8,53,6,"that"],[64,12,53,10],[64,13,53,11,"_t"],[64,15,53,6],[64,18,53,16,"NAME"],[64,22,53,6],[65,0,54,6,"that"],[65,8,54,6,"that"],[65,12,54,10],[65,13,54,11,"_i"],[65,15,54,6],[65,18,54,16,"id"],[65,20,54,18],[65,22,54,6],[66,0,55,6,"that"],[66,8,55,6,"that"],[66,12,55,10],[66,13,55,11,"_l"],[66,15,55,6],[66,18,55,16,"undefined"],[66,27,55,6],[67,0,56,6],[67,12,56,10,"iterable"],[67,20,56,18],[67,24,56,22,"undefined"],[67,33,56,6],[67,35,56,33,"forOf"],[67,40,56,38],[67,41,56,39,"iterable"],[67,49,56,38],[67,51,56,49,"IS_MAP"],[67,57,56,38],[67,59,56,57,"that"],[67,63,56,61],[67,64,56,62,"ADDER"],[67,69,56,61],[67,70,56,38],[67,72,56,70,"that"],[67,76,56,38],[67,77,56,33],[68,0,57,5],[68,7,51,19],[68,8,51,4],[69,0,58,4,"redefineAll"],[69,6,58,4,"redefineAll"],[69,17,58,15],[69,18,58,16,"C"],[69,19,58,17],[69,20,58,18,"prototype"],[69,29,58,15],[69,31,58,29],[70,0,61,6],[70,18,61,16],[70,35,61,26,"key"],[70,38,61,16],[70,40,61,31],[71,0,62,8],[71,14,62,12],[71,15,62,13,"isObject"],[71,23,62,21],[71,24,62,22,"key"],[71,27,62,21],[71,28,62,8],[71,30,62,28],[71,37,62,35],[71,42,62,28],[72,0,63,8],[72,14,63,12,"data"],[72,18,63,16],[72,21,63,19,"getWeak"],[72,28,63,26],[72,29,63,27,"key"],[72,32,63,26],[72,33,63,8],[73,0,64,8],[73,14,64,12,"data"],[73,18,64,16],[73,23,64,21],[73,27,64,8],[73,29,64,27],[73,36,64,34,"uncaughtFrozenStore"],[73,55,64,53],[73,56,64,54,"validate"],[73,64,64,62],[73,65,64,63],[73,69,64,62],[73,71,64,69,"NAME"],[73,75,64,62],[73,76,64,53],[73,77,64,34],[73,78,64,76],[73,86,64,34],[73,88,64,86,"key"],[73,91,64,34],[73,92,64,27],[74,0,65,8],[74,17,65,15,"data"],[74,21,65,19],[74,25,65,23,"$has"],[74,29,65,27],[74,30,65,28,"data"],[74,34,65,27],[74,36,65,34],[74,41,65,39,"_i"],[74,43,65,27],[74,44,65,15],[74,48,65,46],[74,55,65,53,"data"],[74,59,65,57],[74,60,65,58],[74,65,65,63,"_i"],[74,67,65,57],[74,68,65,8],[75,0,66,7],[75,9,58,29],[76,0,69,6,"has"],[76,8,69,6,"has"],[76,11,69,9],[76,13,69,11],[76,22,69,20,"has"],[76,25,69,11],[76,26,69,24,"key"],[76,29,69,11],[76,31,69,29],[77,0,70,8],[77,14,70,12],[77,15,70,13,"isObject"],[77,23,70,21],[77,24,70,22,"key"],[77,27,70,21],[77,28,70,8],[77,30,70,28],[77,37,70,35],[77,42,70,28],[78,0,71,8],[78,14,71,12,"data"],[78,18,71,16],[78,21,71,19,"getWeak"],[78,28,71,26],[78,29,71,27,"key"],[78,32,71,26],[78,33,71,8],[79,0,72,8],[79,14,72,12,"data"],[79,18,72,16],[79,23,72,21],[79,27,72,8],[79,29,72,27],[79,36,72,34,"uncaughtFrozenStore"],[79,55,72,53],[79,56,72,54,"validate"],[79,64,72,62],[79,65,72,63],[79,69,72,62],[79,71,72,69,"NAME"],[79,75,72,62],[79,76,72,53],[79,77,72,34],[79,78,72,76,"has"],[79,81,72,34],[79,82,72,80,"key"],[79,85,72,34],[79,86,72,27],[80,0,73,8],[80,17,73,15,"data"],[80,21,73,19],[80,25,73,23,"$has"],[80,29,73,27],[80,30,73,28,"data"],[80,34,73,27],[80,36,73,34],[80,41,73,39,"_i"],[80,43,73,27],[80,44,73,8],[81,0,74,7],[82,0,58,29],[82,7,58,15],[82,8,58,4],[83,0,76,4],[83,13,76,11,"C"],[83,14,76,4],[84,0,77,3],[84,5,49,17],[85,0,78,2,"def"],[85,4,78,2,"def"],[85,7,78,5],[85,9,78,7],[85,22,78,17,"that"],[85,26,78,7],[85,28,78,23,"key"],[85,31,78,7],[85,33,78,28,"value"],[85,38,78,7],[85,40,78,35],[86,0,79,4],[86,10,79,8,"data"],[86,14,79,12],[86,17,79,15,"getWeak"],[86,24,79,22],[86,25,79,23,"anObject"],[86,33,79,31],[86,34,79,32,"key"],[86,37,79,31],[86,38,79,22],[86,40,79,38],[86,44,79,22],[86,45,79,4],[87,0,80,4],[87,10,80,8,"data"],[87,14,80,12],[87,19,80,17],[87,23,80,4],[87,25,80,23,"uncaughtFrozenStore"],[87,44,80,42],[87,45,80,43,"that"],[87,49,80,42],[87,50,80,23],[87,51,80,49,"set"],[87,54,80,23],[87,55,80,53,"key"],[87,58,80,23],[87,60,80,58,"value"],[87,65,80,23],[87,67,80,4],[87,72,81,9,"data"],[87,76,81,13],[87,77,81,14,"that"],[87,81,81,18],[87,82,81,19,"_i"],[87,84,81,13],[87,85,81,9],[87,88,81,25,"value"],[87,93,81,9],[88,0,82,4],[88,13,82,11,"that"],[88,17,82,4],[89,0,83,3],[89,5,49,17],[90,0,84,2,"ufstore"],[90,4,84,2,"ufstore"],[90,11,84,9],[90,13,84,11,"uncaughtFrozenStore"],[91,0,49,17],[91,3,49,0]]},"type":"js/module"}]}