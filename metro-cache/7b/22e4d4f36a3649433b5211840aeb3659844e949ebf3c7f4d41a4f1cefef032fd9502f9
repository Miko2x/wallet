{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"../utils/invariant","data":{"isAsync":false}},{"name":"./getScreenForRouteName","data":{"isAsync":false}},{"name":"./createConfigGetter","data":{"isAsync":false}},{"name":"../NavigationActions","data":{"isAsync":false}},{"name":"./StackActions","data":{"isAsync":false}},{"name":"./validateRouteConfigMap","data":{"isAsync":false}},{"name":"./pathUtils","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../utils/invariant\"));\n\n  var _getScreenForRouteName = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./getScreenForRouteName\"));\n\n  var _createConfigGetter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./createConfigGetter\"));\n\n  var _NavigationActions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"../NavigationActions\"));\n\n  var _StackActions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./StackActions\"));\n\n  var _validateRouteConfigMap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"./validateRouteConfigMap\"));\n\n  var _pathUtils = _$$_REQUIRE(_dependencyMap[9], \"./pathUtils\");\n\n  var defaultActionCreators = function defaultActionCreators(route, navStateKey) {\n    return {};\n  };\n\n  function childrenUpdateWithoutSwitchingIndex(actionType) {\n    return [_NavigationActions.default.SET_PARAMS, _StackActions.default.COMPLETE_TRANSITION].includes(actionType);\n  }\n\n  var _default = function _default(routeConfigs) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    (0, _validateRouteConfigMap.default)(routeConfigs);\n    var order = config.order || Object.keys(routeConfigs);\n    var getCustomActionCreators = config.getCustomActionCreators || defaultActionCreators;\n    var initialRouteParams = config.initialRouteParams;\n    var initialRouteName = config.initialRouteName || order[0];\n    var backBehavior = config.backBehavior || 'none';\n    var shouldBackNavigateToInitialRoute = backBehavior === 'initialRoute';\n    var resetOnBlur = config.hasOwnProperty('resetOnBlur') ? config.resetOnBlur : true;\n    var initialRouteIndex = order.indexOf(initialRouteName);\n    var childRouters = {};\n    order.forEach(function (routeName) {\n      var routeConfig = routeConfigs[routeName];\n      childRouters[routeName] = null;\n      var screen = (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n\n      if (screen.router) {\n        childRouters[routeName] = screen.router;\n      }\n    });\n\n    var _createPathParser = (0, _pathUtils.createPathParser)(childRouters, routeConfigs, config),\n        getPathAndParamsForRoute = _createPathParser.getPathAndParamsForRoute,\n        _getActionForPathAndParams = _createPathParser.getActionForPathAndParams;\n\n    if (initialRouteIndex === -1) {\n      throw new Error(\"Invalid initialRouteName '\" + initialRouteName + \"'.\" + (\"Should be one of \" + order.map(function (n) {\n        return \"\\\"\" + n + \"\\\"\";\n      }).join(', ')));\n    }\n\n    function resetChildRoute(routeName) {\n      var params = routeName === initialRouteName ? initialRouteParams : undefined;\n      var childRouter = childRouters[routeName];\n\n      if (childRouter) {\n        var childAction = _NavigationActions.default.init();\n\n        return (0, _objectSpread2.default)({}, childRouter.getStateForAction(childAction), {\n          key: routeName,\n          routeName: routeName,\n          params: params\n        });\n      }\n\n      return {\n        key: routeName,\n        routeName: routeName,\n        params: params\n      };\n    }\n\n    function getNextState(prevState, possibleNextState) {\n      if (!prevState) {\n        return possibleNextState;\n      }\n\n      var nextState;\n\n      if (prevState.index !== possibleNextState.index && resetOnBlur) {\n        var prevRouteName = prevState.routes[prevState.index].routeName;\n        var nextRoutes = (0, _toConsumableArray2.default)(possibleNextState.routes);\n        nextRoutes[prevState.index] = resetChildRoute(prevRouteName);\n        return (0, _objectSpread2.default)({}, possibleNextState, {\n          routes: nextRoutes\n        });\n      } else {\n        nextState = possibleNextState;\n      }\n\n      return nextState;\n    }\n\n    function getInitialState() {\n      var routes = order.map(resetChildRoute);\n      return {\n        routes: routes,\n        index: initialRouteIndex,\n        isTransitioning: false\n      };\n    }\n\n    return {\n      childRouters: childRouters,\n      getActionCreators: function getActionCreators(route, stateKey) {\n        return getCustomActionCreators(route, stateKey);\n      },\n      getStateForAction: function getStateForAction(action, inputState) {\n        var prevState = inputState ? (0, _objectSpread2.default)({}, inputState) : inputState;\n        var state = inputState || getInitialState();\n        var activeChildIndex = state.index;\n\n        if (action.type === _NavigationActions.default.INIT) {\n          var params = action.params;\n\n          if (params) {\n            state.routes = state.routes.map(function (route) {\n              return (0, _objectSpread2.default)({}, route, {\n                params: (0, _objectSpread2.default)({}, route.params, params, route.routeName === initialRouteName ? initialRouteParams : null)\n              });\n            });\n          }\n        }\n\n        var activeChildLastState = state.routes[state.index];\n        var activeChildRouter = childRouters[order[state.index]];\n\n        if (activeChildRouter) {\n          var activeChildState = activeChildRouter.getStateForAction(action, activeChildLastState);\n\n          if (!activeChildState && inputState) {\n            return null;\n          }\n\n          if (activeChildState && activeChildState !== activeChildLastState) {\n            var _routes = (0, _toConsumableArray2.default)(state.routes);\n\n            _routes[state.index] = activeChildState;\n            return getNextState(prevState, (0, _objectSpread2.default)({}, state, {\n              routes: _routes\n            }));\n          }\n        }\n\n        var isBackEligible = action.key == null || action.key === activeChildLastState.key;\n\n        if (action.type === _NavigationActions.default.BACK) {\n          if (isBackEligible && shouldBackNavigateToInitialRoute) {\n            activeChildIndex = initialRouteIndex;\n          } else {\n            return state;\n          }\n        }\n\n        var didNavigate = false;\n\n        if (action.type === _NavigationActions.default.NAVIGATE) {\n          didNavigate = !!order.find(function (childId, i) {\n            if (childId === action.routeName) {\n              activeChildIndex = i;\n              return true;\n            }\n\n            return false;\n          });\n\n          if (didNavigate) {\n            var childState = state.routes[activeChildIndex];\n            var childRouter = childRouters[action.routeName];\n            var newChildState;\n\n            if (action.action) {\n              newChildState = childRouter ? childRouter.getStateForAction(action.action, childState) : null;\n            } else if (!action.action && action.params) {\n              newChildState = (0, _objectSpread2.default)({}, childState, {\n                params: (0, _objectSpread2.default)({}, childState.params || {}, action.params)\n              });\n            }\n\n            if (newChildState && newChildState !== childState) {\n              var _routes2 = (0, _toConsumableArray2.default)(state.routes);\n\n              _routes2[activeChildIndex] = newChildState;\n              return getNextState(prevState, (0, _objectSpread2.default)({}, state, {\n                routes: _routes2,\n                index: activeChildIndex\n              }));\n            } else if (!newChildState && state.index === activeChildIndex && prevState) {\n              return null;\n            }\n          }\n        }\n\n        if (action.type === _NavigationActions.default.SET_PARAMS) {\n          var key = action.key;\n          var lastRoute = state.routes.find(function (route) {\n            return route.key === key;\n          });\n\n          if (lastRoute) {\n            var _params = (0, _objectSpread2.default)({}, lastRoute.params, action.params);\n\n            var _routes3 = (0, _toConsumableArray2.default)(state.routes);\n\n            _routes3[state.routes.indexOf(lastRoute)] = (0, _objectSpread2.default)({}, lastRoute, {\n              params: _params\n            });\n            return getNextState(prevState, (0, _objectSpread2.default)({}, state, {\n              routes: _routes3\n            }));\n          }\n        }\n\n        if (activeChildIndex !== state.index) {\n          return getNextState(prevState, (0, _objectSpread2.default)({}, state, {\n            index: activeChildIndex\n          }));\n        } else if (didNavigate && !inputState) {\n          return state;\n        } else if (didNavigate) {\n          return (0, _objectSpread2.default)({}, state);\n        }\n\n        var index = state.index;\n        var routes = state.routes;\n        order.find(function (childId, i) {\n          var childRouter = childRouters[childId];\n\n          if (i === index) {\n            return false;\n          }\n\n          var childState = routes[i];\n\n          if (childRouter) {\n            childState = childRouter.getStateForAction(action, childState);\n          }\n\n          if (!childState) {\n            index = i;\n            return true;\n          }\n\n          if (childState !== routes[i]) {\n            routes = (0, _toConsumableArray2.default)(routes);\n            routes[i] = childState;\n            index = i;\n            return true;\n          }\n\n          return false;\n        });\n\n        if (childrenUpdateWithoutSwitchingIndex(action.type)) {\n          index = state.index;\n        }\n\n        if (index !== state.index || routes !== state.routes) {\n          return getNextState(prevState, (0, _objectSpread2.default)({}, state, {\n            index: index,\n            routes: routes\n          }));\n        }\n\n        return state;\n      },\n      getComponentForState: function getComponentForState(state) {\n        var routeName = state.routes[state.index].routeName;\n        (0, _invariant.default)(routeName, \"There is no route defined for index \" + state.index + \". Check that\\n        that you passed in a navigation state with a valid tab/screen index.\");\n        var childRouter = childRouters[routeName];\n\n        if (childRouter) {\n          return childRouter.getComponentForState(state.routes[state.index]);\n        }\n\n        return (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n      },\n      getComponentForRouteName: function getComponentForRouteName(routeName) {\n        return (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n      },\n      getPathAndParamsForState: function getPathAndParamsForState(state) {\n        var route = state.routes[state.index];\n        return getPathAndParamsForRoute(route);\n      },\n      getActionForPathAndParams: function getActionForPathAndParams(path, params) {\n        return _getActionForPathAndParams(path, params);\n      },\n      getScreenOptions: (0, _createConfigGetter.default)(routeConfigs, config.navigationOptions)\n    };\n  };\n\n  exports.default = _default;\n});","map":[[13,0,1,0],[15,0,2,0],[17,0,3,0],[19,0,5,0],[21,0,6,0],[23,0,7,0],[25,0,8,0],[27,0,10,0],[27,6,10,6,"defaultActionCreators"],[27,27,10,27],[27,30,10,30],[27,39,10,6,"defaultActionCreators"],[27,60,10,30],[27,61,10,31,"route"],[27,66,10,30],[27,68,10,38,"navStateKey"],[27,79,10,30],[28,0,10,30],[28,11,10,55],[28,13,10,30],[29,0,10,30],[29,3,10,0],[31,0,12,0],[31,11,12,9,"childrenUpdateWithoutSwitchingIndex"],[31,46,12,0],[31,47,12,45,"actionType"],[31,57,12,0],[31,59,12,57],[32,0,13,2],[32,11,13,9],[32,12,14,4,"NavigationActions"],[32,39,14,22,"SET_PARAMS"],[32,49,13,9],[32,51,16,4,"StackActions"],[32,73,16,17,"COMPLETE_TRANSITION"],[32,92,13,9],[32,94,17,4,"includes"],[32,102,13,9],[32,103,17,13,"actionType"],[32,113,13,9],[32,114,13,2],[33,0,18,1],[35,17,20,15],[35,35,20,16,"routeConfigs"],[35,47,20,15],[35,49,20,46],[36,0,20,46],[36,8,20,30,"config"],[36,14,20,46],[36,85,20,39],[36,87,20,46],[37,0,22,2],[37,41,22,25,"routeConfigs"],[37,53,22,2],[38,0,24,2],[38,8,24,8,"order"],[38,13,24,13],[38,16,24,16,"config"],[38,22,24,22],[38,23,24,23,"order"],[38,28,24,16],[38,32,24,32,"Object"],[38,38,24,38],[38,39,24,39,"keys"],[38,43,24,32],[38,44,24,44,"routeConfigs"],[38,56,24,32],[38,57,24,2],[39,0,26,2],[39,8,26,8,"getCustomActionCreators"],[39,31,26,31],[39,34,27,4,"config"],[39,40,27,10],[39,41,27,11,"getCustomActionCreators"],[39,64,27,4],[39,68,27,38,"defaultActionCreators"],[39,89,26,2],[40,0,29,2],[40,8,29,8,"initialRouteParams"],[40,26,29,26],[40,29,29,29,"config"],[40,35,29,35],[40,36,29,36,"initialRouteParams"],[40,54,29,2],[41,0,30,2],[41,8,30,8,"initialRouteName"],[41,24,30,24],[41,27,30,27,"config"],[41,33,30,33],[41,34,30,34,"initialRouteName"],[41,50,30,27],[41,54,30,54,"order"],[41,59,30,59],[41,60,30,60],[41,61,30,59],[41,62,30,2],[42,0,31,2],[42,8,31,8,"backBehavior"],[42,20,31,20],[42,23,31,23,"config"],[42,29,31,29],[42,30,31,30,"backBehavior"],[42,42,31,23],[42,46,31,46],[42,52,31,2],[43,0,32,2],[43,8,32,8,"shouldBackNavigateToInitialRoute"],[43,40,32,40],[43,43,32,43,"backBehavior"],[43,55,32,55],[43,60,32,60],[43,74,32,2],[44,0,33,2],[44,8,33,8,"resetOnBlur"],[44,19,33,19],[44,22,33,22,"config"],[44,28,33,28],[44,29,33,29,"hasOwnProperty"],[44,43,33,22],[44,44,33,44],[44,57,33,22],[44,61,34,6,"config"],[44,67,34,12],[44,68,34,13,"resetOnBlur"],[44,79,33,22],[44,82,35,6],[44,86,33,2],[45,0,36,2],[45,8,36,8,"initialRouteIndex"],[45,25,36,25],[45,28,36,28,"order"],[45,33,36,33],[45,34,36,34,"indexOf"],[45,41,36,28],[45,42,36,42,"initialRouteName"],[45,58,36,28],[45,59,36,2],[46,0,37,2],[46,8,37,8,"childRouters"],[46,20,37,20],[46,23,37,23],[46,25,37,2],[47,0,38,2,"order"],[47,4,38,2,"order"],[47,9,38,7],[47,10,38,8,"forEach"],[47,17,38,2],[47,18,38,16],[47,28,38,16,"routeName"],[47,37,38,25],[47,39,38,29],[48,0,39,4],[48,10,39,10,"routeConfig"],[48,21,39,21],[48,24,39,24,"routeConfigs"],[48,36,39,36],[48,37,39,37,"routeName"],[48,46,39,36],[48,47,39,4],[49,0,40,4,"childRouters"],[49,6,40,4,"childRouters"],[49,18,40,16],[49,19,40,17,"routeName"],[49,28,40,16],[49,29,40,4],[49,32,40,30],[49,36,40,4],[50,0,41,4],[50,10,41,10,"screen"],[50,16,41,16],[50,19,41,19],[50,55,41,41,"routeConfigs"],[50,67,41,19],[50,69,41,55,"routeName"],[50,78,41,19],[50,79,41,4],[52,0,42,4],[52,10,42,8,"screen"],[52,16,42,14],[52,17,42,15,"router"],[52,23,42,4],[52,25,42,23],[53,0,43,6,"childRouters"],[53,8,43,6,"childRouters"],[53,20,43,18],[53,21,43,19,"routeName"],[53,30,43,18],[53,31,43,6],[53,34,43,32,"screen"],[53,40,43,38],[53,41,43,39,"router"],[53,47,43,6],[54,0,44,5],[55,0,45,3],[55,5,38,2],[57,0,20,46],[57,28,50,6],[57,61,50,23,"childRouters"],[57,73,50,6],[57,75,50,37,"routeConfigs"],[57,87,50,6],[57,89,50,51,"config"],[57,95,50,6],[57,96,20,46],[58,0,20,46],[58,8,48,4,"getPathAndParamsForRoute"],[58,32,20,46],[58,53,48,4,"getPathAndParamsForRoute"],[58,77,20,46],[59,0,20,46],[59,8,49,4,"getActionForPathAndParams"],[59,34,20,46],[59,55,49,4,"getActionForPathAndParams"],[59,80,20,46],[61,0,52,2],[61,8,52,6,"initialRouteIndex"],[61,25,52,23],[61,30,52,28],[61,31,52,29],[61,32,52,2],[61,34,52,32],[62,0,53,4],[62,12,53,10],[62,16,53,14,"Error"],[62,21,53,10],[62,22,54,6],[62,53,54,35,"initialRouteName"],[62,69,54,6],[62,102,55,28,"order"],[62,107,55,33],[62,108,55,34,"map"],[62,111,55,28],[62,112,55,38],[62,122,55,38,"n"],[62,123,55,39],[63,0,55,39],[63,22,55,47,"n"],[63,23,55,39],[64,0,55,39],[64,7,55,28],[64,9,55,53,"join"],[64,13,55,28],[64,14,55,58],[64,18,55,28],[64,19,54,6],[64,20,53,10],[64,21,53,4],[65,0,57,3],[67,0,59,2],[67,13,59,11,"resetChildRoute"],[67,28,59,2],[67,29,59,27,"routeName"],[67,38,59,2],[67,40,59,38],[68,0,60,4],[68,10,60,10,"params"],[68,16,60,16],[68,19,61,6,"routeName"],[68,28,61,15],[68,33,61,20,"initialRouteName"],[68,49,61,6],[68,52,61,39,"initialRouteParams"],[68,70,61,6],[68,73,61,60,"undefined"],[68,82,60,4],[69,0,62,4],[69,10,62,10,"childRouter"],[69,21,62,21],[69,24,62,24,"childRouters"],[69,36,62,36],[69,37,62,37,"routeName"],[69,46,62,36],[69,47,62,4],[71,0,63,4],[71,10,63,8,"childRouter"],[71,21,63,4],[71,23,63,21],[72,0,64,6],[72,12,64,12,"childAction"],[72,23,64,23],[72,26,64,26,"NavigationActions"],[72,53,64,44,"init"],[72,57,64,26],[72,59,64,6],[74,0,65,6],[74,47,66,11,"childRouter"],[74,58,66,22],[74,59,66,23,"getStateForAction"],[74,76,66,11],[74,77,66,41,"childAction"],[74,88,66,11],[74,89,65,6],[75,0,67,8,"key"],[75,10,67,8,"key"],[75,13,67,11],[75,15,67,13,"routeName"],[75,24,65,6],[76,0,68,8,"routeName"],[76,10,68,8,"routeName"],[76,19,68,17],[76,21,68,8,"routeName"],[76,30,65,6],[77,0,69,8,"params"],[77,10,69,8,"params"],[77,16,69,14],[77,18,69,8,"params"],[78,0,65,6],[79,0,71,5],[81,0,72,4],[81,13,72,11],[82,0,73,6,"key"],[82,8,73,6,"key"],[82,11,73,9],[82,13,73,11,"routeName"],[82,22,72,11],[83,0,74,6,"routeName"],[83,8,74,6,"routeName"],[83,17,74,15],[83,19,74,6,"routeName"],[83,28,72,11],[84,0,75,6,"params"],[84,8,75,6,"params"],[84,14,75,12],[84,16,75,6,"params"],[85,0,72,11],[85,7,72,4],[86,0,77,3],[88,0,79,2],[88,13,79,11,"getNextState"],[88,25,79,2],[88,26,79,24,"prevState"],[88,35,79,2],[88,37,79,35,"possibleNextState"],[88,54,79,2],[88,56,79,54],[89,0,80,4],[89,10,80,8],[89,11,80,9,"prevState"],[89,20,80,4],[89,22,80,20],[90,0,81,6],[90,15,81,13,"possibleNextState"],[90,32,81,6],[91,0,82,5],[93,0,84,4],[93,10,84,8,"nextState"],[93,19,84,4],[95,0,85,4],[95,10,85,8,"prevState"],[95,19,85,17],[95,20,85,18,"index"],[95,25,85,8],[95,30,85,28,"possibleNextState"],[95,47,85,45],[95,48,85,46,"index"],[95,53,85,8],[95,57,85,55,"resetOnBlur"],[95,68,85,4],[95,70,85,68],[96,0,86,6],[96,12,86,12,"prevRouteName"],[96,25,86,25],[96,28,86,28,"prevState"],[96,37,86,37],[96,38,86,38,"routes"],[96,44,86,28],[96,45,86,45,"prevState"],[96,54,86,54],[96,55,86,55,"index"],[96,60,86,28],[96,62,86,62,"routeName"],[96,71,86,6],[97,0,87,6],[97,12,87,12,"nextRoutes"],[97,22,87,22],[97,58,87,29,"possibleNextState"],[97,75,87,46],[97,76,87,47,"routes"],[97,82,87,22],[97,83,87,6],[98,0,88,6,"nextRoutes"],[98,8,88,6,"nextRoutes"],[98,18,88,16],[98,19,88,17,"prevState"],[98,28,88,26],[98,29,88,27,"index"],[98,34,88,16],[98,35,88,6],[98,38,88,36,"resetChildRoute"],[98,53,88,51],[98,54,88,52,"prevRouteName"],[98,67,88,51],[98,68,88,6],[99,0,90,6],[99,47,91,11,"possibleNextState"],[99,64,90,6],[100,0,92,8,"routes"],[100,10,92,8,"routes"],[100,16,92,14],[100,18,92,16,"nextRoutes"],[101,0,90,6],[102,0,94,5],[102,7,85,4],[102,13,94,11],[103,0,95,6,"nextState"],[103,8,95,6,"nextState"],[103,17,95,15],[103,20,95,18,"possibleNextState"],[103,37,95,6],[104,0,96,5],[106,0,98,4],[106,13,98,11,"nextState"],[106,22,98,4],[107,0,99,3],[109,0,101,2],[109,13,101,11,"getInitialState"],[109,28,101,2],[109,31,101,29],[110,0,102,4],[110,10,102,10,"routes"],[110,16,102,16],[110,19,102,19,"order"],[110,24,102,24],[110,25,102,25,"map"],[110,28,102,19],[110,29,102,29,"resetChildRoute"],[110,44,102,19],[110,45,102,4],[111,0,103,4],[111,13,103,11],[112,0,104,6,"routes"],[112,8,104,6,"routes"],[112,14,104,12],[112,16,104,6,"routes"],[112,22,103,11],[113,0,105,6,"index"],[113,8,105,6,"index"],[113,13,105,11],[113,15,105,13,"initialRouteIndex"],[113,32,103,11],[114,0,106,6,"isTransitioning"],[114,8,106,6,"isTransitioning"],[114,23,106,21],[114,25,106,23],[115,0,103,11],[115,7,103,4],[116,0,108,3],[118,0,110,2],[118,11,110,9],[119,0,111,4,"childRouters"],[119,6,111,4,"childRouters"],[119,18,111,16],[119,20,111,4,"childRouters"],[119,32,110,9],[120,0,113,4,"getActionCreators"],[120,6,113,4,"getActionCreators"],[120,23,110,9],[120,52,113,22,"route"],[120,57,110,9],[120,59,113,29,"stateKey"],[120,67,110,9],[120,69,113,39],[121,0,114,6],[121,15,114,13,"getCustomActionCreators"],[121,38,114,36],[121,39,114,37,"route"],[121,44,114,36],[121,46,114,44,"stateKey"],[121,54,114,36],[121,55,114,6],[122,0,115,5],[122,7,110,9],[123,0,117,4,"getStateForAction"],[123,6,117,4,"getStateForAction"],[123,23,110,9],[123,52,117,22,"action"],[123,58,110,9],[123,60,117,30,"inputState"],[123,70,110,9],[123,72,117,42],[124,0,118,6],[124,12,118,10,"prevState"],[124,21,118,19],[124,24,118,22,"inputState"],[124,34,118,32],[124,69,118,40,"inputState"],[124,79,118,32],[124,83,118,55,"inputState"],[124,93,118,6],[125,0,119,6],[125,12,119,10,"state"],[125,17,119,15],[125,20,119,18,"inputState"],[125,30,119,28],[125,34,119,32,"getInitialState"],[125,49,119,47],[125,51,119,6],[126,0,120,6],[126,12,120,10,"activeChildIndex"],[126,28,120,26],[126,31,120,29,"state"],[126,36,120,34],[126,37,120,35,"index"],[126,42,120,6],[128,0,122,6],[128,12,122,10,"action"],[128,18,122,16],[128,19,122,17,"type"],[128,23,122,10],[128,28,122,26,"NavigationActions"],[128,55,122,44,"INIT"],[128,59,122,6],[128,61,122,50],[129,0,122,50],[129,14,127,16,"params"],[129,20,122,50],[129,23,127,27,"action"],[129,29,122,50],[129,30,127,16,"params"],[129,36,122,50],[131,0,128,8],[131,14,128,12,"params"],[131,20,128,8],[131,22,128,20],[132,0,129,10,"state"],[132,12,129,10,"state"],[132,17,129,15],[132,18,129,16,"routes"],[132,24,129,10],[132,27,129,25,"state"],[132,32,129,30],[132,33,129,31,"routes"],[132,39,129,25],[132,40,129,38,"map"],[132,43,129,25],[132,44,129,42],[132,54,129,42,"route"],[132,59,129,47],[133,0,129,47],[133,53,130,15,"route"],[133,58,129,47],[134,0,131,12,"params"],[134,16,131,12,"params"],[134,22,131,18],[134,56,132,17,"route"],[134,61,132,22],[134,62,132,23,"params"],[134,68,131,18],[134,70,133,17,"params"],[134,76,131,18],[134,78,134,18,"route"],[134,83,134,23],[134,84,134,24,"routeName"],[134,93,134,18],[134,98,134,38,"initialRouteName"],[134,114,134,18],[134,117,135,18,"initialRouteParams"],[134,135,134,18],[134,138,136,18],[134,142,131,18],[135,0,129,47],[136,0,129,47],[136,13,129,25],[136,14,129,10],[137,0,139,9],[138,0,140,7],[140,0,143,6],[140,12,143,12,"activeChildLastState"],[140,32,143,32],[140,35,143,35,"state"],[140,40,143,40],[140,41,143,41,"routes"],[140,47,143,35],[140,48,143,48,"state"],[140,53,143,53],[140,54,143,54,"index"],[140,59,143,35],[140,60,143,6],[141,0,144,6],[141,12,144,12,"activeChildRouter"],[141,29,144,29],[141,32,144,32,"childRouters"],[141,44,144,44],[141,45,144,45,"order"],[141,50,144,50],[141,51,144,51,"state"],[141,56,144,56],[141,57,144,57,"index"],[141,62,144,50],[141,63,144,44],[141,64,144,6],[143,0,145,6],[143,12,145,10,"activeChildRouter"],[143,29,145,6],[143,31,145,29],[144,0,146,8],[144,14,146,14,"activeChildState"],[144,30,146,30],[144,33,146,33,"activeChildRouter"],[144,50,146,50],[144,51,146,51,"getStateForAction"],[144,68,146,33],[144,69,147,10,"action"],[144,75,146,33],[144,77,148,10,"activeChildLastState"],[144,97,146,33],[144,98,146,8],[146,0,150,8],[146,14,150,12],[146,15,150,13,"activeChildState"],[146,31,150,12],[146,35,150,33,"inputState"],[146,45,150,8],[146,47,150,45],[147,0,151,10],[147,19,151,17],[147,23,151,10],[148,0,152,9],[150,0,153,8],[150,14,153,12,"activeChildState"],[150,30,153,28],[150,34,153,32,"activeChildState"],[150,50,153,48],[150,55,153,53,"activeChildLastState"],[150,75,153,8],[150,77,153,75],[151,0,154,10],[151,16,154,16,"routes"],[151,23,154,22],[151,59,154,29,"state"],[151,64,154,34],[151,65,154,35,"routes"],[151,71,154,22],[151,72,154,10],[153,0,155,10,"routes"],[153,12,155,10,"routes"],[153,19,155,16],[153,20,155,17,"state"],[153,25,155,22],[153,26,155,23,"index"],[153,31,155,16],[153,32,155,10],[153,35,155,32,"activeChildState"],[153,51,155,10],[154,0,156,10],[154,19,156,17,"getNextState"],[154,31,156,29],[154,32,156,30,"prevState"],[154,41,156,29],[154,75,157,15,"state"],[154,80,156,29],[155,0,158,12,"routes"],[155,14,158,12,"routes"],[155,20,158,18],[155,22,158,12,"routes"],[156,0,156,29],[156,15,156,10],[157,0,160,9],[158,0,161,7],[160,0,165,6],[160,12,165,12,"isBackEligible"],[160,26,165,26],[160,29,166,8,"action"],[160,35,166,14],[160,36,166,15,"key"],[160,39,166,8],[160,43,166,22],[160,47,166,8],[160,51,166,30,"action"],[160,57,166,36],[160,58,166,37,"key"],[160,61,166,30],[160,66,166,45,"activeChildLastState"],[160,86,166,65],[160,87,166,66,"key"],[160,90,165,6],[162,0,167,6],[162,12,167,10,"action"],[162,18,167,16],[162,19,167,17,"type"],[162,23,167,10],[162,28,167,26,"NavigationActions"],[162,55,167,44,"BACK"],[162,59,167,6],[162,61,167,50],[163,0,168,8],[163,14,168,12,"isBackEligible"],[163,28,168,26],[163,32,168,30,"shouldBackNavigateToInitialRoute"],[163,64,168,8],[163,66,168,64],[164,0,169,10,"activeChildIndex"],[164,12,169,10,"activeChildIndex"],[164,28,169,26],[164,31,169,29,"initialRouteIndex"],[164,48,169,10],[165,0,170,9],[165,11,168,8],[165,17,170,15],[166,0,171,10],[166,19,171,17,"state"],[166,24,171,10],[167,0,172,9],[168,0,173,7],[170,0,175,6],[170,12,175,10,"didNavigate"],[170,23,175,21],[170,26,175,24],[170,31,175,6],[172,0,176,6],[172,12,176,10,"action"],[172,18,176,16],[172,19,176,17,"type"],[172,23,176,10],[172,28,176,26,"NavigationActions"],[172,55,176,44,"NAVIGATE"],[172,63,176,6],[172,65,176,54],[173,0,177,8,"didNavigate"],[173,10,177,8,"didNavigate"],[173,21,177,19],[173,24,177,22],[173,25,177,23],[173,26,177,24,"order"],[173,31,177,29],[173,32,177,30,"find"],[173,36,177,24],[173,37,177,35],[173,47,177,36,"childId"],[173,54,177,35],[173,56,177,45,"i"],[173,57,177,35],[173,59,177,51],[174,0,178,10],[174,16,178,14,"childId"],[174,23,178,21],[174,28,178,26,"action"],[174,34,178,32],[174,35,178,33,"routeName"],[174,44,178,10],[174,46,178,44],[175,0,179,12,"activeChildIndex"],[175,14,179,12,"activeChildIndex"],[175,30,179,28],[175,33,179,31,"i"],[175,34,179,12],[176,0,180,12],[176,21,180,19],[176,25,180,12],[177,0,181,11],[179,0,182,10],[179,19,182,17],[179,24,182,10],[180,0,183,9],[180,11,177,24],[180,12,177,8],[182,0,184,8],[182,14,184,12,"didNavigate"],[182,25,184,8],[182,27,184,25],[183,0,185,10],[183,16,185,16,"childState"],[183,26,185,26],[183,29,185,29,"state"],[183,34,185,34],[183,35,185,35,"routes"],[183,41,185,29],[183,42,185,42,"activeChildIndex"],[183,58,185,29],[183,59,185,10],[184,0,186,10],[184,16,186,16,"childRouter"],[184,27,186,27],[184,30,186,30,"childRouters"],[184,42,186,42],[184,43,186,43,"action"],[184,49,186,49],[184,50,186,50,"routeName"],[184,59,186,42],[184,60,186,10],[185,0,187,10],[185,16,187,14,"newChildState"],[185,29,187,10],[187,0,189,10],[187,16,189,14,"action"],[187,22,189,20],[187,23,189,21,"action"],[187,29,189,10],[187,31,189,29],[188,0,190,12,"newChildState"],[188,14,190,12,"newChildState"],[188,27,190,25],[188,30,190,28,"childRouter"],[188,41,190,39],[188,44,191,16,"childRouter"],[188,55,191,27],[188,56,191,28,"getStateForAction"],[188,73,191,16],[188,74,191,46,"action"],[188,80,191,52],[188,81,191,53,"action"],[188,87,191,16],[188,89,191,61,"childState"],[188,99,191,16],[188,100,190,39],[188,103,192,16],[188,107,190,12],[189,0,193,11],[189,13,189,10],[189,19,193,17],[189,23,193,21],[189,24,193,22,"action"],[189,30,193,28],[189,31,193,29,"action"],[189,37,193,21],[189,41,193,39,"action"],[189,47,193,45],[189,48,193,46,"params"],[189,54,193,17],[189,56,193,54],[190,0,194,12,"newChildState"],[190,14,194,12,"newChildState"],[190,27,194,25],[190,62,195,17,"childState"],[190,72,194,25],[191,0,196,14,"params"],[191,16,196,14,"params"],[191,22,196,20],[191,56,197,20,"childState"],[191,66,197,30],[191,67,197,31,"params"],[191,73,197,20],[191,77,197,41],[191,79,196,20],[191,81,198,19,"action"],[191,87,198,25],[191,88,198,26,"params"],[191,94,196,20],[192,0,194,25],[192,16,194,12],[193,0,201,11],[195,0,203,10],[195,16,203,14,"newChildState"],[195,29,203,27],[195,33,203,31,"newChildState"],[195,46,203,44],[195,51,203,49,"childState"],[195,61,203,10],[195,63,203,61],[196,0,204,12],[196,18,204,18,"routes"],[196,26,204,24],[196,62,204,31,"state"],[196,67,204,36],[196,68,204,37,"routes"],[196,74,204,24],[196,75,204,12],[198,0,205,12,"routes"],[198,14,205,12,"routes"],[198,22,205,18],[198,23,205,19,"activeChildIndex"],[198,39,205,18],[198,40,205,12],[198,43,205,39,"newChildState"],[198,56,205,12],[199,0,206,12],[199,21,206,19,"getNextState"],[199,33,206,31],[199,34,206,32,"prevState"],[199,43,206,31],[199,77,207,17,"state"],[199,82,206,31],[200,0,208,14,"routes"],[200,16,208,14,"routes"],[200,22,208,20],[200,24,208,14,"routes"],[200,32,206,31],[201,0,209,14,"index"],[201,16,209,14,"index"],[201,21,209,19],[201,23,209,21,"activeChildIndex"],[202,0,206,31],[202,17,206,12],[203,0,211,11],[203,13,203,10],[203,19,211,17],[203,23,212,12],[203,24,212,13,"newChildState"],[203,37,212,12],[203,41,213,12,"state"],[203,46,213,17],[203,47,213,18,"index"],[203,52,213,12],[203,57,213,28,"activeChildIndex"],[203,73,212,12],[203,77,214,12,"prevState"],[203,86,211,17],[203,88,215,12],[204,0,216,12],[204,21,216,19],[204,25,216,12],[205,0,217,11],[206,0,218,9],[207,0,219,7],[209,0,221,6],[209,12,221,10,"action"],[209,18,221,16],[209,19,221,17,"type"],[209,23,221,10],[209,28,221,26,"NavigationActions"],[209,55,221,44,"SET_PARAMS"],[209,65,221,6],[209,67,221,56],[210,0,222,8],[210,14,222,14,"key"],[210,17,222,17],[210,20,222,20,"action"],[210,26,222,26],[210,27,222,27,"key"],[210,30,222,8],[211,0,223,8],[211,14,223,14,"lastRoute"],[211,23,223,23],[211,26,223,26,"state"],[211,31,223,31],[211,32,223,32,"routes"],[211,38,223,26],[211,39,223,39,"find"],[211,43,223,26],[211,44,223,44],[211,54,223,44,"route"],[211,59,223,49],[212,0,223,49],[212,19,223,53,"route"],[212,24,223,58],[212,25,223,59,"key"],[212,28,223,53],[212,33,223,67,"key"],[212,36,223,49],[213,0,223,49],[213,11,223,26],[213,12,223,8],[215,0,224,8],[215,14,224,12,"lastRoute"],[215,23,224,8],[215,25,224,23],[216,0,225,10],[216,16,225,16,"params"],[216,23,225,22],[216,58,226,15,"lastRoute"],[216,67,226,24],[216,68,226,25,"params"],[216,74,225,22],[216,76,227,15,"action"],[216,82,227,21],[216,83,227,22,"params"],[216,89,225,22],[216,90,225,10],[218,0,229,10],[218,16,229,16,"routes"],[218,24,229,22],[218,60,229,29,"state"],[218,65,229,34],[218,66,229,35,"routes"],[218,72,229,22],[218,73,229,10],[220,0,230,10,"routes"],[220,12,230,10,"routes"],[220,20,230,16],[220,21,230,17,"state"],[220,26,230,22],[220,27,230,23,"routes"],[220,33,230,17],[220,34,230,30,"indexOf"],[220,41,230,17],[220,42,230,38,"lastRoute"],[220,51,230,17],[220,52,230,16],[220,53,230,10],[220,88,231,15,"lastRoute"],[220,97,230,10],[221,0,232,12,"params"],[221,14,232,12,"params"],[221,20,232,18],[221,22,232,12,"params"],[222,0,230,10],[223,0,234,10],[223,19,234,17,"getNextState"],[223,31,234,29],[223,32,234,30,"prevState"],[223,41,234,29],[223,75,235,15,"state"],[223,80,234,29],[224,0,236,12,"routes"],[224,14,236,12,"routes"],[224,20,236,18],[224,22,236,12,"routes"],[225,0,234,29],[225,15,234,10],[226,0,238,9],[227,0,239,7],[229,0,241,6],[229,12,241,10,"activeChildIndex"],[229,28,241,26],[229,33,241,31,"state"],[229,38,241,36],[229,39,241,37,"index"],[229,44,241,6],[229,46,241,44],[230,0,242,8],[230,17,242,15,"getNextState"],[230,29,242,27],[230,30,242,28,"prevState"],[230,39,242,27],[230,73,243,13,"state"],[230,78,242,27],[231,0,244,10,"index"],[231,12,244,10,"index"],[231,17,244,15],[231,19,244,17,"activeChildIndex"],[232,0,242,27],[232,13,242,8],[233,0,246,7],[233,9,241,6],[233,15,246,13],[233,19,246,17,"didNavigate"],[233,30,246,28],[233,34,246,32],[233,35,246,33,"inputState"],[233,45,246,13],[233,47,246,45],[234,0,247,8],[234,17,247,15,"state"],[234,22,247,8],[235,0,248,7],[235,9,246,13],[235,15,248,13],[235,19,248,17,"didNavigate"],[235,30,248,13],[235,32,248,30],[236,0,249,8],[236,49,249,20,"state"],[236,54,249,8],[237,0,250,7],[239,0,253,6],[239,12,253,10,"index"],[239,17,253,15],[239,20,253,18,"state"],[239,25,253,23],[239,26,253,24,"index"],[239,31,253,6],[240,0,254,6],[240,12,254,10,"routes"],[240,18,254,16],[240,21,254,19,"state"],[240,26,254,24],[240,27,254,25,"routes"],[240,33,254,6],[241,0,255,6,"order"],[241,8,255,6,"order"],[241,13,255,11],[241,14,255,12,"find"],[241,18,255,6],[241,19,255,17],[241,29,255,18,"childId"],[241,36,255,17],[241,38,255,27,"i"],[241,39,255,17],[241,41,255,33],[242,0,256,8],[242,14,256,14,"childRouter"],[242,25,256,25],[242,28,256,28,"childRouters"],[242,40,256,40],[242,41,256,41,"childId"],[242,48,256,40],[242,49,256,8],[244,0,257,8],[244,14,257,12,"i"],[244,15,257,13],[244,20,257,18,"index"],[244,25,257,8],[244,27,257,25],[245,0,258,10],[245,19,258,17],[245,24,258,10],[246,0,259,9],[248,0,260,8],[248,14,260,12,"childState"],[248,24,260,22],[248,27,260,25,"routes"],[248,33,260,31],[248,34,260,32,"i"],[248,35,260,31],[248,36,260,8],[250,0,261,8],[250,14,261,12,"childRouter"],[250,25,261,8],[250,27,261,25],[251,0,262,10,"childState"],[251,12,262,10,"childState"],[251,22,262,20],[251,25,262,23,"childRouter"],[251,36,262,34],[251,37,262,35,"getStateForAction"],[251,54,262,23],[251,55,262,53,"action"],[251,61,262,23],[251,63,262,61,"childState"],[251,73,262,23],[251,74,262,10],[252,0,263,9],[254,0,264,8],[254,14,264,12],[254,15,264,13,"childState"],[254,25,264,8],[254,27,264,25],[255,0,265,10,"index"],[255,12,265,10,"index"],[255,17,265,15],[255,20,265,18,"i"],[255,21,265,10],[256,0,266,10],[256,19,266,17],[256,23,266,10],[257,0,267,9],[259,0,268,8],[259,14,268,12,"childState"],[259,24,268,22],[259,29,268,27,"routes"],[259,35,268,33],[259,36,268,34,"i"],[259,37,268,33],[259,38,268,8],[259,40,268,38],[260,0,269,10,"routes"],[260,12,269,10,"routes"],[260,18,269,16],[260,54,269,23,"routes"],[260,60,269,16],[260,61,269,10],[261,0,270,10,"routes"],[261,12,270,10,"routes"],[261,18,270,16],[261,19,270,17,"i"],[261,20,270,16],[261,21,270,10],[261,24,270,22,"childState"],[261,34,270,10],[262,0,271,10,"index"],[262,12,271,10,"index"],[262,17,271,15],[262,20,271,18,"i"],[262,21,271,10],[263,0,272,10],[263,19,272,17],[263,23,272,10],[264,0,273,9],[266,0,274,8],[266,17,274,15],[266,22,274,8],[267,0,275,7],[267,9,255,6],[269,0,281,6],[269,12,281,10,"childrenUpdateWithoutSwitchingIndex"],[269,47,281,45],[269,48,281,46,"action"],[269,54,281,52],[269,55,281,53,"type"],[269,59,281,45],[269,60,281,6],[269,62,281,60],[270,0,282,8,"index"],[270,10,282,8,"index"],[270,15,282,13],[270,18,282,16,"state"],[270,23,282,21],[270,24,282,22,"index"],[270,29,282,8],[271,0,283,7],[273,0,285,6],[273,12,285,10,"index"],[273,17,285,15],[273,22,285,20,"state"],[273,27,285,25],[273,28,285,26,"index"],[273,33,285,10],[273,37,285,35,"routes"],[273,43,285,41],[273,48,285,46,"state"],[273,53,285,51],[273,54,285,52,"routes"],[273,60,285,6],[273,62,285,60],[274,0,286,8],[274,17,286,15,"getNextState"],[274,29,286,27],[274,30,286,28,"prevState"],[274,39,286,27],[274,73,287,13,"state"],[274,78,286,27],[275,0,288,10,"index"],[275,12,288,10,"index"],[275,17,288,15],[275,19,288,10,"index"],[275,24,286,27],[276,0,289,10,"routes"],[276,12,289,10,"routes"],[276,18,289,16],[276,20,289,10,"routes"],[277,0,286,27],[277,13,286,8],[278,0,291,7],[280,0,292,6],[280,15,292,13,"state"],[280,20,292,6],[281,0,293,5],[281,7,110,9],[282,0,295,4,"getComponentForState"],[282,6,295,4,"getComponentForState"],[282,26,110,9],[282,58,295,25,"state"],[282,63,110,9],[282,65,295,32],[283,0,296,6],[283,12,296,12,"routeName"],[283,21,296,21],[283,24,296,24,"state"],[283,29,296,29],[283,30,296,30,"routes"],[283,36,296,24],[283,37,296,37,"state"],[283,42,296,42],[283,43,296,43,"index"],[283,48,296,24],[283,50,296,50,"routeName"],[283,59,296,6],[284,0,297,6],[284,32,298,8,"routeName"],[284,41,297,6],[284,84,299,47,"state"],[284,89,299,52],[284,90,299,53,"index"],[284,95,297,6],[285,0,302,6],[285,12,302,12,"childRouter"],[285,23,302,23],[285,26,302,26,"childRouters"],[285,38,302,38],[285,39,302,39,"routeName"],[285,48,302,38],[285,49,302,6],[287,0,303,6],[287,12,303,10,"childRouter"],[287,23,303,6],[287,25,303,23],[288,0,304,8],[288,17,304,15,"childRouter"],[288,28,304,26],[288,29,304,27,"getComponentForState"],[288,49,304,15],[288,50,304,48,"state"],[288,55,304,53],[288,56,304,54,"routes"],[288,62,304,48],[288,63,304,61,"state"],[288,68,304,66],[288,69,304,67,"index"],[288,74,304,48],[288,75,304,15],[288,76,304,8],[289,0,305,7],[291,0,306,6],[291,15,306,13],[291,51,306,35,"routeConfigs"],[291,63,306,13],[291,65,306,49,"routeName"],[291,74,306,13],[291,75,306,6],[292,0,307,5],[292,7,110,9],[293,0,309,4,"getComponentForRouteName"],[293,6,309,4,"getComponentForRouteName"],[293,30,110,9],[293,66,309,29,"routeName"],[293,75,110,9],[293,77,309,40],[294,0,310,6],[294,15,310,13],[294,51,310,35,"routeConfigs"],[294,63,310,13],[294,65,310,49,"routeName"],[294,74,310,13],[294,75,310,6],[295,0,311,5],[295,7,110,9],[296,0,313,4,"getPathAndParamsForState"],[296,6,313,4,"getPathAndParamsForState"],[296,30,110,9],[296,66,313,29,"state"],[296,71,110,9],[296,73,313,36],[297,0,314,6],[297,12,314,12,"route"],[297,17,314,17],[297,20,314,20,"state"],[297,25,314,25],[297,26,314,26,"routes"],[297,32,314,20],[297,33,314,33,"state"],[297,38,314,38],[297,39,314,39,"index"],[297,44,314,20],[297,45,314,6],[298,0,315,6],[298,15,315,13,"getPathAndParamsForRoute"],[298,39,315,37],[298,40,315,38,"route"],[298,45,315,37],[298,46,315,6],[299,0,316,5],[299,7,110,9],[300,0,318,4,"getActionForPathAndParams"],[300,6,318,4,"getActionForPathAndParams"],[300,31,110,9],[300,68,318,30,"path"],[300,72,110,9],[300,74,318,36,"params"],[300,80,110,9],[300,82,318,44],[301,0,319,6],[301,15,319,13,"getActionForPathAndParams"],[301,41,319,38],[301,42,319,39,"path"],[301,46,319,38],[301,48,319,45,"params"],[301,54,319,38],[301,55,319,6],[302,0,320,5],[302,7,110,9],[303,0,322,4,"getScreenOptions"],[303,6,322,4,"getScreenOptions"],[303,22,322,20],[303,24,322,22],[303,57,323,6,"routeConfigs"],[303,69,322,22],[303,71,324,6,"config"],[303,77,324,12],[303,78,324,13,"navigationOptions"],[303,95,322,22],[304,0,110,9],[304,5,110,2],[305,0,327,1],[305,3]]},"type":"js/module"}]}