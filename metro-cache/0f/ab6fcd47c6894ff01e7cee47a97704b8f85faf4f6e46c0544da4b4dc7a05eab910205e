{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"bezier","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n\n  var _ease;\n\n  var Easing = function () {\n    function Easing() {\n      _classCallCheck(this, Easing);\n    }\n\n    _createClass(Easing, null, [{\n      key: \"step0\",\n      value: function step0(n) {\n        return n > 0 ? 1 : 0;\n      }\n    }, {\n      key: \"step1\",\n      value: function step1(n) {\n        return n >= 1 ? 1 : 0;\n      }\n    }, {\n      key: \"linear\",\n      value: function linear(t) {\n        return t;\n      }\n    }, {\n      key: \"ease\",\n      value: function ease(t) {\n        if (!_ease) {\n          _ease = Easing.bezier(0.42, 0, 1, 1);\n        }\n\n        return _ease(t);\n      }\n    }, {\n      key: \"quad\",\n      value: function quad(t) {\n        return t * t;\n      }\n    }, {\n      key: \"cubic\",\n      value: function cubic(t) {\n        return t * t * t;\n      }\n    }, {\n      key: \"poly\",\n      value: function poly(n) {\n        return function (t) {\n          return Math.pow(t, n);\n        };\n      }\n    }, {\n      key: \"sin\",\n      value: function sin(t) {\n        return 1 - Math.cos(t * Math.PI / 2);\n      }\n    }, {\n      key: \"circle\",\n      value: function circle(t) {\n        return 1 - Math.sqrt(1 - t * t);\n      }\n    }, {\n      key: \"exp\",\n      value: function exp(t) {\n        return Math.pow(2, 10 * (t - 1));\n      }\n    }, {\n      key: \"elastic\",\n      value: function elastic() {\n        var bounciness = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        var p = bounciness * Math.PI;\n        return function (t) {\n          return 1 - Math.pow(Math.cos(t * Math.PI / 2), 3) * Math.cos(t * p);\n        };\n      }\n    }, {\n      key: \"back\",\n      value: function back(s) {\n        if (s === undefined) {\n          s = 1.70158;\n        }\n\n        return function (t) {\n          return t * t * ((s + 1) * t - s);\n        };\n      }\n    }, {\n      key: \"bounce\",\n      value: function bounce(t) {\n        if (t < 1 / 2.75) {\n          return 7.5625 * t * t;\n        }\n\n        if (t < 2 / 2.75) {\n          t -= 1.5 / 2.75;\n          return 7.5625 * t * t + 0.75;\n        }\n\n        if (t < 2.5 / 2.75) {\n          t -= 2.25 / 2.75;\n          return 7.5625 * t * t + 0.9375;\n        }\n\n        t -= 2.625 / 2.75;\n        return 7.5625 * t * t + 0.984375;\n      }\n    }, {\n      key: \"bezier\",\n      value: function bezier(x1, y1, x2, y2) {\n        var _bezier = _$$_REQUIRE(_dependencyMap[2], \"bezier\");\n\n        return _bezier(x1, y1, x2, y2);\n      }\n    }, {\n      key: \"in\",\n      value: function _in(easing) {\n        return easing;\n      }\n    }, {\n      key: \"out\",\n      value: function out(easing) {\n        return function (t) {\n          return 1 - easing(1 - t);\n        };\n      }\n    }, {\n      key: \"inOut\",\n      value: function inOut(easing) {\n        return function (t) {\n          if (t < 0.5) {\n            return easing(t * 2) / 2;\n          }\n\n          return 1 - easing((1 - t) * 2) / 2;\n        };\n      }\n    }]);\n\n    return Easing;\n  }();\n\n  module.exports = Easing;\n});","map":[[2,0,11,0],[8,0,13,0],[8,6,13,4,"ease"],[8,11,13,0],[10,6,60,6,"Easing"],[10,12],[17,28,64,15,"n"],[17,29],[17,31,64,26],[18,0,65,4],[18,15,65,11,"n"],[18,16,65,12],[18,19,65,15],[18,20,65,11],[18,23,65,19],[18,24,65,11],[18,27,65,23],[18,28,65,4],[19,0,66,3],[22,28,71,15,"n"],[22,29],[22,31,71,26],[23,0,72,4],[23,15,72,11,"n"],[23,16,72,12],[23,20,72,16],[23,21,72,11],[23,24,72,20],[23,25,72,11],[23,28,72,24],[23,29,72,4],[24,0,73,3],[27,29,81,16,"t"],[27,30],[27,32,81,27],[28,0,82,4],[28,15,82,11,"t"],[28,16,82,4],[29,0,83,3],[32,27,91,14,"t"],[32,28],[32,30,91,33],[33,0,92,4],[33,12,92,8],[33,13,92,9,"ease"],[33,18,92,4],[33,20,92,15],[34,0,93,6,"ease"],[34,10,93,6,"ease"],[34,15,93,10],[34,18,93,13,"Easing"],[34,24,93,19],[34,25,93,20,"bezier"],[34,31,93,13],[34,32,93,27],[34,36,93,13],[34,38,93,33],[34,39,93,13],[34,41,93,36],[34,42,93,13],[34,44,93,39],[34,45,93,13],[34,46,93,6],[35,0,94,5],[37,0,95,4],[37,15,95,11,"ease"],[37,20,95,15],[37,21,95,16,"t"],[37,22,95,15],[37,23,95,4],[38,0,96,3],[41,27,104,14,"t"],[41,28],[41,30,104,25],[42,0,105,4],[42,15,105,11,"t"],[42,16,105,12],[42,19,105,15,"t"],[42,20,105,4],[43,0,106,3],[46,28,114,15,"t"],[46,29],[46,31,114,26],[47,0,115,4],[47,15,115,11,"t"],[47,16,115,12],[47,19,115,15,"t"],[47,20,115,11],[47,23,115,19,"t"],[47,24,115,4],[48,0,116,3],[51,27,124,14,"n"],[51,28],[51,30,124,25],[52,0,125,4],[52,15,125,11],[52,25,125,12,"t"],[52,26,125,11],[53,0,125,11],[53,17,125,26,"Math"],[53,21,125,30],[53,22,125,31,"pow"],[53,25,125,26],[53,26,125,35,"t"],[53,27,125,26],[53,29,125,38,"n"],[53,30,125,26],[53,31,125,11],[54,0,125,11],[54,9,125,4],[55,0,126,3],[58,26,133,13,"t"],[58,27],[58,29,133,24],[59,0,134,4],[59,15,134,11],[59,19,134,15,"Math"],[59,23,134,19],[59,24,134,20,"cos"],[59,27,134,15],[59,28,134,25,"t"],[59,29,134,26],[59,32,134,29,"Math"],[59,36,134,33],[59,37,134,34,"PI"],[59,39,134,24],[59,42,134,40],[59,43,134,15],[59,44,134,4],[60,0,135,3],[63,29,142,16,"t"],[63,30],[63,32,142,27],[64,0,143,4],[64,15,143,11],[64,19,143,15,"Math"],[64,23,143,19],[64,24,143,20,"sqrt"],[64,28,143,15],[64,29,143,25],[64,33,143,29,"t"],[64,34,143,30],[64,37,143,33,"t"],[64,38,143,15],[64,39,143,4],[65,0,144,3],[68,26,151,13,"t"],[68,27],[68,29,151,24],[69,0,152,4],[69,15,152,11,"Math"],[69,19,152,15],[69,20,152,16,"pow"],[69,23,152,11],[69,24,152,20],[69,25,152,11],[69,27,152,23],[69,33,152,29,"t"],[69,34,152,30],[69,37,152,33],[69,38,152,23],[69,39,152,11],[69,40,152,4],[70,0,153,3],[73,32,165,64],[74,0,165,64],[74,12,165,17,"bounciness"],[74,22,165,64],[74,93,165,38],[74,94,165,64],[75,0,166,4],[75,12,166,10,"p"],[75,13,166,11],[75,16,166,14,"bounciness"],[75,26,166,24],[75,29,166,27,"Math"],[75,33,166,31],[75,34,166,32,"PI"],[75,36,166,4],[76,0,167,4],[76,15,167,11],[76,25,167,11,"t"],[76,26,167,12],[77,0,167,12],[77,17,167,16],[77,21,167,20,"Math"],[77,25,167,24],[77,26,167,25,"pow"],[77,29,167,20],[77,30,167,29,"Math"],[77,34,167,33],[77,35,167,34,"cos"],[77,38,167,29],[77,39,167,39,"t"],[77,40,167,40],[77,43,167,43,"Math"],[77,47,167,47],[77,48,167,48,"PI"],[77,50,167,38],[77,53,167,54],[77,54,167,29],[77,55,167,20],[77,57,167,58],[77,58,167,20],[77,62,167,63,"Math"],[77,66,167,67],[77,67,167,68,"cos"],[77,70,167,63],[77,71,167,72,"t"],[77,72,167,73],[77,75,167,76,"p"],[77,76,167,63],[77,77,167,12],[78,0,167,12],[78,9,167,4],[79,0,168,3],[82,27,178,14,"s"],[82,28],[82,30,178,48],[83,0,179,4],[83,12,179,8,"s"],[83,13,179,9],[83,18,179,14,"undefined"],[83,27,179,4],[83,29,179,25],[84,0,180,6,"s"],[84,10,180,6,"s"],[84,11,180,7],[84,14,180,10],[84,21,180,6],[85,0,181,5],[87,0,182,4],[87,15,182,11],[87,25,182,11,"t"],[87,26,182,12],[88,0,182,12],[88,17,182,16,"t"],[88,18,182,17],[88,21,182,20,"t"],[88,22,182,16],[88,26,182,25],[88,27,182,26,"s"],[88,28,182,27],[88,31,182,30],[88,32,182,25],[88,36,182,35,"t"],[88,37,182,25],[88,40,182,39,"s"],[88,41,182,16],[88,42,182,12],[89,0,182,12],[89,9,182,4],[90,0,183,3],[93,29,190,16,"t"],[93,30],[93,32,190,35],[94,0,191,4],[94,12,191,8,"t"],[94,13,191,9],[94,16,191,12],[94,20,191,16],[94,24,191,4],[94,26,191,22],[95,0,192,6],[95,17,192,13],[95,26,192,22,"t"],[95,27,192,13],[95,30,192,26,"t"],[95,31,192,6],[96,0,193,5],[98,0,195,4],[98,12,195,8,"t"],[98,13,195,9],[98,16,195,12],[98,20,195,16],[98,24,195,4],[98,26,195,22],[99,0,196,6,"t"],[99,10,196,6,"t"],[99,11,196,7],[99,15,196,11],[99,21,196,17],[99,25,196,6],[100,0,197,6],[100,17,197,13],[100,26,197,22,"t"],[100,27,197,13],[100,30,197,26,"t"],[100,31,197,13],[100,34,197,30],[100,38,197,6],[101,0,198,5],[103,0,200,4],[103,12,200,8,"t"],[103,13,200,9],[103,16,200,12],[103,22,200,18],[103,26,200,4],[103,28,200,24],[104,0,201,6,"t"],[104,10,201,6,"t"],[104,11,201,7],[104,15,201,11],[104,22,201,18],[104,26,201,6],[105,0,202,6],[105,17,202,13],[105,26,202,22,"t"],[105,27,202,13],[105,30,202,26,"t"],[105,31,202,13],[105,34,202,30],[105,40,202,6],[106,0,203,5],[108,0,205,4,"t"],[108,8,205,4,"t"],[108,9,205,5],[108,13,205,9],[108,21,205,17],[108,25,205,4],[109,0,206,4],[109,15,206,11],[109,24,206,20,"t"],[109,25,206,11],[109,28,206,24,"t"],[109,29,206,11],[109,32,206,28],[109,40,206,4],[110,0,207,3],[113,29,217,4,"x1"],[113,31],[113,33,218,4,"y1"],[113,35],[113,37,219,4,"x2"],[113,39],[113,41,220,4,"y2"],[113,43],[113,45,221,27],[114,0,222,4],[114,12,222,10,"_bezier"],[114,19,222,17],[114,22,222,20,"require"],[114,33,222,27],[114,62,222,4],[116,0,223,4],[116,15,223,11,"_bezier"],[116,22,223,18],[116,23,223,19,"x1"],[116,25,223,18],[116,27,223,23,"y1"],[116,29,223,18],[116,31,223,27,"x2"],[116,33,223,18],[116,35,223,31,"y2"],[116,37,223,18],[116,38,223,4],[117,0,224,3],[120,26,229,12,"easing"],[120,32],[120,34,229,66],[121,0,230,4],[121,15,230,11,"easing"],[121,21,230,4],[122,0,231,3],[125,26,236,13,"easing"],[125,32],[125,34,236,67],[126,0,237,4],[126,15,237,11],[126,25,237,11,"t"],[126,26,237,12],[127,0,237,12],[127,17,237,16],[127,21,237,20,"easing"],[127,27,237,26],[127,28,237,27],[127,32,237,31,"t"],[127,33,237,26],[127,34,237,12],[128,0,237,12],[128,9,237,4],[129,0,238,3],[132,28,245,15,"easing"],[132,34],[132,36,245,69],[133,0,246,4],[133,15,246,11],[133,25,246,11,"t"],[133,26,246,12],[133,28,246,16],[134,0,247,6],[134,14,247,10,"t"],[134,15,247,11],[134,18,247,14],[134,21,247,6],[134,23,247,19],[135,0,248,8],[135,19,248,15,"easing"],[135,25,248,21],[135,26,248,22,"t"],[135,27,248,23],[135,30,248,26],[135,31,248,21],[135,32,248,15],[135,35,248,31],[135,36,248,8],[136,0,249,7],[138,0,250,6],[138,17,250,13],[138,21,250,17,"easing"],[138,27,250,23],[138,28,250,24],[138,29,250,25],[138,33,250,29,"t"],[138,34,250,24],[138,38,250,34],[138,39,250,23],[138,40,250,17],[138,43,250,39],[138,44,250,6],[139,0,251,5],[139,9,246,4],[140,0,252,3],[146,0,255,0,"module"],[146,2,255,0,"module"],[146,8,255,6],[146,9,255,7,"exports"],[146,16,255,0],[146,19,255,17,"Easing"],[146,25,255,0]]},"type":"js/module"}]}