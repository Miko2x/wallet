{"dependencies":[{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"fbjs/lib/invariant","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _objectSpread = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/objectSpread\");\n\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\");\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\");\n\n  var invariant = _$$_REQUIRE(_dependencyMap[4], \"fbjs/lib/invariant\");\n\n  var ViewabilityHelper = function () {\n    function ViewabilityHelper() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        viewAreaCoveragePercentThreshold: 0\n      };\n\n      _classCallCheck(this, ViewabilityHelper);\n\n      this._hasInteracted = false;\n      this._timers = new Set();\n      this._viewableIndices = [];\n      this._viewableItems = new Map();\n      this._config = config;\n    }\n\n    _createClass(ViewabilityHelper, [{\n      key: \"dispose\",\n      value: function dispose() {\n        this._timers.forEach(clearTimeout);\n      }\n    }, {\n      key: \"computeViewableItems\",\n      value: function computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange) {\n        var _this$_config = this._config,\n            itemVisiblePercentThreshold = _this$_config.itemVisiblePercentThreshold,\n            viewAreaCoveragePercentThreshold = _this$_config.viewAreaCoveragePercentThreshold;\n        var viewAreaMode = viewAreaCoveragePercentThreshold != null;\n        var viewablePercentThreshold = viewAreaMode ? viewAreaCoveragePercentThreshold : itemVisiblePercentThreshold;\n        invariant(viewablePercentThreshold != null && itemVisiblePercentThreshold != null !== (viewAreaCoveragePercentThreshold != null), 'Must set exactly one of itemVisiblePercentThreshold or viewAreaCoveragePercentThreshold');\n        var viewableIndices = [];\n\n        if (itemCount === 0) {\n          return viewableIndices;\n        }\n\n        var firstVisible = -1;\n\n        var _ref = renderRange || {\n          first: 0,\n          last: itemCount - 1\n        },\n            first = _ref.first,\n            last = _ref.last;\n\n        invariant(last < itemCount, 'Invalid render range ' + JSON.stringify({\n          renderRange: renderRange,\n          itemCount: itemCount\n        }));\n\n        for (var idx = first; idx <= last; idx++) {\n          var metrics = getFrameMetrics(idx);\n\n          if (!metrics) {\n            continue;\n          }\n\n          var top = metrics.offset - scrollOffset;\n          var bottom = top + metrics.length;\n\n          if (top < viewportHeight && bottom > 0) {\n            firstVisible = idx;\n\n            if (_isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, metrics.length)) {\n              viewableIndices.push(idx);\n            }\n          } else if (firstVisible >= 0) {\n            break;\n          }\n        }\n\n        return viewableIndices;\n      }\n    }, {\n      key: \"onUpdate\",\n      value: function onUpdate(itemCount, scrollOffset, viewportHeight, getFrameMetrics, createViewToken, onViewableItemsChanged, renderRange) {\n        var _this = this;\n\n        if (this._config.waitForInteraction && !this._hasInteracted || itemCount === 0 || !getFrameMetrics(0)) {\n          return;\n        }\n\n        var viewableIndices = [];\n\n        if (itemCount) {\n          viewableIndices = this.computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange);\n        }\n\n        if (this._viewableIndices.length === viewableIndices.length && this._viewableIndices.every(function (v, ii) {\n          return v === viewableIndices[ii];\n        })) {\n          return;\n        }\n\n        this._viewableIndices = viewableIndices;\n\n        if (this._config.minimumViewTime) {\n          var handle = setTimeout(function () {\n            _this._timers.delete(handle);\n\n            _this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n          }, this._config.minimumViewTime);\n\n          this._timers.add(handle);\n        } else {\n          this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n        }\n      }\n    }, {\n      key: \"resetViewableIndices\",\n      value: function resetViewableIndices() {\n        this._viewableIndices = [];\n      }\n    }, {\n      key: \"recordInteraction\",\n      value: function recordInteraction() {\n        this._hasInteracted = true;\n      }\n    }, {\n      key: \"_onUpdateSync\",\n      value: function _onUpdateSync(viewableIndicesToCheck, onViewableItemsChanged, createViewToken) {\n        var _this2 = this;\n\n        viewableIndicesToCheck = viewableIndicesToCheck.filter(function (ii) {\n          return _this2._viewableIndices.includes(ii);\n        });\n        var prevItems = this._viewableItems;\n        var nextItems = new Map(viewableIndicesToCheck.map(function (ii) {\n          var viewable = createViewToken(ii, true);\n          return [viewable.key, viewable];\n        }));\n        var changed = [];\n\n        for (var _iterator = nextItems, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n          var _ref4;\n\n          if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref4 = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref4 = _i.value;\n          }\n\n          var _ref8 = _ref4;\n\n          var _ref3 = _slicedToArray(_ref8, 2);\n\n          var _key2 = _ref3[0];\n          var _viewable2 = _ref3[1];\n\n          if (!prevItems.has(_key2)) {\n            changed.push(_viewable2);\n          }\n        }\n\n        for (var _iterator2 = prevItems, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n          var _ref7;\n\n          if (_isArray2) {\n            if (_i2 >= _iterator2.length) break;\n            _ref7 = _iterator2[_i2++];\n          } else {\n            _i2 = _iterator2.next();\n            if (_i2.done) break;\n            _ref7 = _i2.value;\n          }\n\n          var _ref9 = _ref7;\n\n          var _ref6 = _slicedToArray(_ref9, 2);\n\n          var _key3 = _ref6[0];\n          var _viewable3 = _ref6[1];\n\n          if (!nextItems.has(_key3)) {\n            changed.push(_objectSpread({}, _viewable3, {\n              isViewable: false\n            }));\n          }\n        }\n\n        if (changed.length > 0) {\n          this._viewableItems = nextItems;\n          onViewableItemsChanged({\n            viewableItems: Array.from(nextItems.values()),\n            changed: changed,\n            viewabilityConfig: this._config\n          });\n        }\n      }\n    }]);\n\n    return ViewabilityHelper;\n  }();\n\n  function _isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, itemLength) {\n    if (_isEntirelyVisible(top, bottom, viewportHeight)) {\n      return true;\n    } else {\n      var pixels = _getPixelsVisible(top, bottom, viewportHeight);\n\n      var percent = 100 * (viewAreaMode ? pixels / viewportHeight : pixels / itemLength);\n      return percent >= viewablePercentThreshold;\n    }\n  }\n\n  function _getPixelsVisible(top, bottom, viewportHeight) {\n    var visibleHeight = Math.min(bottom, viewportHeight) - Math.max(top, 0);\n    return Math.max(0, visibleHeight);\n  }\n\n  function _isEntirelyVisible(top, bottom, viewportHeight) {\n    return top >= 0 && bottom <= viewportHeight && bottom > top;\n  }\n\n  module.exports = ViewabilityHelper;\n});","map":[[2,0,10,0],[12,0,12,0],[12,6,12,6,"invariant"],[12,15,12,15],[12,18,12,18,"require"],[12,29,12,25],[12,70,12,0],[14,6,71,6,"ViewabilityHelper"],[14,23],[15,0,81,2],[15,33,83,4],[16,0,83,4],[16,10,82,4,"config"],[16,16,83,4],[16,87,82,32],[17,0,82,33,"viewAreaCoveragePercentThreshold"],[17,8,82,33,"viewAreaCoveragePercentThreshold"],[17,40,82,65],[17,42,82,67],[18,0,82,32],[18,7,83,4],[20,0,83,4],[22,0,83,4],[22,11,73,2,"_hasInteracted"],[22,25,83,4],[22,28,73,28],[22,33,83,4],[23,0,83,4],[23,11,77,2,"_timers"],[23,18,83,4],[23,21,77,25],[23,25,77,29,"Set"],[23,28,77,25],[23,30,83,4],[24,0,83,4],[24,11,78,2,"_viewableIndices"],[24,27,83,4],[24,30,78,36],[24,32,83,4],[25,0,83,4],[25,11,79,2,"_viewableItems"],[25,25,83,4],[25,28,79,43],[25,32,79,47,"Map"],[25,35,79,43],[25,37,83,4],[26,0,84,4],[26,11,84,9,"_config"],[26,18,84,4],[26,21,84,19,"config"],[26,27,84,4],[27,0,85,3],[31,32,90,12],[32,0,91,4],[32,13,91,9,"_timers"],[32,20,91,4],[32,21,91,17,"forEach"],[32,28,91,4],[32,29,91,25,"clearTimeout"],[32,41,91,4],[33,0,92,3],[36,43,98,4,"itemCount"],[36,52],[36,54,99,4,"scrollOffset"],[36,66],[36,68,100,4,"viewportHeight"],[36,82],[36,84,101,4,"getFrameMetrics"],[36,99],[36,101,102,4,"renderRange"],[36,112],[36,114,103,19],[37,0,103,19],[37,28,107,8],[37,33,107,13,"_config"],[37,40,103,19],[38,0,103,19],[38,12,105,6,"itemVisiblePercentThreshold"],[38,39,103,19],[38,56,105,6,"itemVisiblePercentThreshold"],[38,83,103,19],[39,0,103,19],[39,12,106,6,"viewAreaCoveragePercentThreshold"],[39,44,103,19],[39,61,106,6,"viewAreaCoveragePercentThreshold"],[39,93,103,19],[40,0,108,4],[40,12,108,10,"viewAreaMode"],[40,24,108,22],[40,27,108,25,"viewAreaCoveragePercentThreshold"],[40,59,108,57],[40,63,108,61],[40,67,108,4],[41,0,109,4],[41,12,109,10,"viewablePercentThreshold"],[41,36,109,34],[41,39,109,37,"viewAreaMode"],[41,51,109,49],[41,54,110,8,"viewAreaCoveragePercentThreshold"],[41,86,109,49],[41,89,111,8,"itemVisiblePercentThreshold"],[41,116,109,4],[42,0,112,4,"invariant"],[42,8,112,4,"invariant"],[42,17,112,13],[42,18,113,6,"viewablePercentThreshold"],[42,42,113,30],[42,46,113,34],[42,50,113,6],[42,54,114,9,"itemVisiblePercentThreshold"],[42,81,114,36],[42,85,114,40],[42,89,114,8],[42,95,115,11,"viewAreaCoveragePercentThreshold"],[42,127,115,43],[42,131,115,47],[42,135,114,8],[42,136,112,13],[42,138,116,6],[42,227,112,13],[42,228,112,4],[43,0,118,4],[43,12,118,10,"viewableIndices"],[43,27,118,25],[43,30,118,28],[43,32,118,4],[45,0,119,4],[45,12,119,8,"itemCount"],[45,21,119,17],[45,26,119,22],[45,27,119,4],[45,29,119,25],[46,0,120,6],[46,17,120,13,"viewableIndices"],[46,32,120,6],[47,0,121,5],[49,0,122,4],[49,12,122,8,"firstVisible"],[49,24,122,20],[49,27,122,23],[49,28,122,24],[49,29,122,4],[51,0,103,19],[51,19,123,26,"renderRange"],[51,30,123,37],[51,34,123,41],[52,0,123,42,"first"],[52,10,123,42,"first"],[52,15,123,47],[52,17,123,49],[52,18,123,41],[53,0,123,52,"last"],[53,10,123,52,"last"],[53,14,123,56],[53,16,123,58,"itemCount"],[53,25,123,67],[53,28,123,70],[54,0,123,41],[54,9,103,19],[55,0,103,19],[55,12,123,11,"first"],[55,17,103,19],[55,25,123,11,"first"],[55,30,103,19],[56,0,103,19],[56,12,123,18,"last"],[56,16,103,19],[56,24,123,18,"last"],[56,28,103,19],[58,0,124,4,"invariant"],[58,8,124,4,"invariant"],[58,17,124,13],[58,18,125,6,"last"],[58,22,125,10],[58,25,125,13,"itemCount"],[58,34,124,13],[58,36,126,6],[58,62,126,32,"JSON"],[58,66,126,36],[58,67,126,37,"stringify"],[58,76,126,32],[58,77,126,47],[59,0,126,48,"renderRange"],[59,10,126,48,"renderRange"],[59,21,126,59],[59,23,126,48,"renderRange"],[59,34,126,47],[60,0,126,61,"itemCount"],[60,10,126,61,"itemCount"],[60,19,126,70],[60,21,126,61,"itemCount"],[61,0,126,47],[61,9,126,32],[61,10,124,13],[61,11,124,4],[63,0,128,4],[63,13,128,9],[63,17,128,13,"idx"],[63,20,128,16],[63,23,128,19,"first"],[63,28,128,4],[63,30,128,26,"idx"],[63,33,128,29],[63,37,128,33,"last"],[63,41,128,4],[63,43,128,39,"idx"],[63,46,128,42],[63,48,128,4],[63,50,128,46],[64,0,129,6],[64,14,129,12,"metrics"],[64,21,129,19],[64,24,129,22,"getFrameMetrics"],[64,39,129,37],[64,40,129,38,"idx"],[64,43,129,37],[64,44,129,6],[66,0,130,6],[66,14,130,10],[66,15,130,11,"metrics"],[66,22,130,6],[66,24,130,20],[67,0,131,8],[68,0,132,7],[70,0,133,6],[70,14,133,12,"top"],[70,17,133,15],[70,20,133,18,"metrics"],[70,27,133,25],[70,28,133,26,"offset"],[70,34,133,18],[70,37,133,35,"scrollOffset"],[70,49,133,6],[71,0,134,6],[71,14,134,12,"bottom"],[71,20,134,18],[71,23,134,21,"top"],[71,26,134,24],[71,29,134,27,"metrics"],[71,36,134,34],[71,37,134,35,"length"],[71,43,134,6],[73,0,135,6],[73,14,135,10,"top"],[73,17,135,13],[73,20,135,16,"viewportHeight"],[73,34,135,10],[73,38,135,34,"bottom"],[73,44,135,40],[73,47,135,43],[73,48,135,6],[73,50,135,46],[74,0,136,8,"firstVisible"],[74,12,136,8,"firstVisible"],[74,24,136,20],[74,27,136,23,"idx"],[74,30,136,8],[76,0,137,8],[76,16,138,10,"_isViewable"],[76,27,138,21],[76,28,139,12,"viewAreaMode"],[76,40,138,21],[76,42,140,12,"viewablePercentThreshold"],[76,66,138,21],[76,68,141,12,"top"],[76,71,138,21],[76,73,142,12,"bottom"],[76,79,138,21],[76,81,143,12,"viewportHeight"],[76,95,138,21],[76,97,144,12,"metrics"],[76,104,144,19],[76,105,144,20,"length"],[76,111,138,21],[76,112,137,8],[76,114,146,10],[77,0,147,10,"viewableIndices"],[77,14,147,10,"viewableIndices"],[77,29,147,25],[77,30,147,26,"push"],[77,34,147,10],[77,35,147,31,"idx"],[77,38,147,10],[78,0,148,9],[79,0,149,7],[79,11,135,6],[79,17,149,13],[79,21,149,17,"firstVisible"],[79,33,149,29],[79,37,149,33],[79,38,149,13],[79,40,149,36],[80,0,150,8],[81,0,151,7],[82,0,152,5],[84,0,153,4],[84,15,153,11,"viewableIndices"],[84,30,153,4],[85,0,154,3],[88,31,161,4,"itemCount"],[88,40],[88,42,162,4,"scrollOffset"],[88,54],[88,56,163,4,"viewportHeight"],[88,70],[88,72,164,4,"getFrameMetrics"],[88,87],[88,89,165,4,"createViewToken"],[88,104],[88,106,166,4,"onViewableItemsChanged"],[88,128],[88,130,170,4,"renderRange"],[88,141],[88,143,171,10],[89,0,171,10],[91,0,172,4],[91,12,173,7],[91,17,173,12,"_config"],[91,24,173,7],[91,25,173,20,"waitForInteraction"],[91,43,173,7],[91,47,173,42],[91,48,173,43],[91,53,173,48,"_hasInteracted"],[91,67,173,6],[91,71,174,6,"itemCount"],[91,80,174,15],[91,85,174,20],[91,86,173,6],[91,90,175,6],[91,91,175,7,"getFrameMetrics"],[91,106,175,22],[91,107,175,23],[91,108,175,22],[91,109,172,4],[91,111,176,6],[92,0,177,6],[93,0,178,5],[95,0,179,4],[95,12,179,8,"viewableIndices"],[95,27,179,23],[95,30,179,26],[95,32,179,4],[97,0,180,4],[97,12,180,8,"itemCount"],[97,21,180,4],[97,23,180,19],[98,0,181,6,"viewableIndices"],[98,10,181,6,"viewableIndices"],[98,25,181,21],[98,28,181,24],[98,33,181,29,"computeViewableItems"],[98,53,181,24],[98,54,182,8,"itemCount"],[98,63,181,24],[98,65,183,8,"scrollOffset"],[98,77,181,24],[98,79,184,8,"viewportHeight"],[98,93,181,24],[98,95,185,8,"getFrameMetrics"],[98,110,181,24],[98,112,186,8,"renderRange"],[98,123,181,24],[98,124,181,6],[99,0,188,5],[101,0,189,4],[101,12,190,6],[101,17,190,11,"_viewableIndices"],[101,33,190,6],[101,34,190,28,"length"],[101,40,190,6],[101,45,190,39,"viewableIndices"],[101,60,190,54],[101,61,190,55,"length"],[101,67,190,6],[101,71,191,6],[101,76,191,11,"_viewableIndices"],[101,92,191,6],[101,93,191,28,"every"],[101,98,191,6],[101,99,191,34],[101,109,191,35,"v"],[101,110,191,34],[101,112,191,38,"ii"],[101,114,191,34],[102,0,191,34],[102,17,191,45,"v"],[102,18,191,46],[102,23,191,51,"viewableIndices"],[102,38,191,66],[102,39,191,67,"ii"],[102,41,191,66],[102,42,191,34],[103,0,191,34],[103,9,191,6],[103,10,189,4],[103,12,192,6],[104,0,195,6],[105,0,196,5],[107,0,197,4],[107,13,197,9,"_viewableIndices"],[107,29,197,4],[107,32,197,28,"viewableIndices"],[107,47,197,4],[109,0,198,4],[109,12,198,8],[109,17,198,13,"_config"],[109,24,198,8],[109,25,198,21,"minimumViewTime"],[109,40,198,4],[109,42,198,38],[110,0,199,6],[110,14,199,12,"handle"],[110,20,199,18],[110,23,199,21,"setTimeout"],[110,33,199,31],[110,34,199,32],[110,46,199,38],[111,0,200,8],[111,12,200,8],[111,17,200,12],[111,18,200,13,"_timers"],[111,25,200,8],[111,26,200,21,"delete"],[111,32,200,8],[111,33,200,28,"handle"],[111,39,200,8],[113,0,201,8],[113,12,201,8],[113,17,201,12],[113,18,201,13,"_onUpdateSync"],[113,31,201,8],[113,32,202,10,"viewableIndices"],[113,47,201,8],[113,49,203,10,"onViewableItemsChanged"],[113,71,201,8],[113,73,204,10,"createViewToken"],[113,88,201,8],[114,0,206,7],[114,11,199,31],[114,13,206,9],[114,18,206,14,"_config"],[114,25,206,9],[114,26,206,22,"minimumViewTime"],[114,41,199,31],[114,42,199,6],[116,0,207,6],[116,15,207,11,"_timers"],[116,22,207,6],[116,23,207,19,"add"],[116,26,207,6],[116,27,207,23,"handle"],[116,33,207,6],[117,0,208,5],[117,9,198,4],[117,15,208,11],[118,0,209,6],[118,15,209,11,"_onUpdateSync"],[118,28,209,6],[118,29,210,8,"viewableIndices"],[118,44,209,6],[118,46,211,8,"onViewableItemsChanged"],[118,68,209,6],[118,70,212,8,"createViewToken"],[118,85,209,6],[119,0,214,5],[120,0,215,3],[123,45,220,25],[124,0,221,4],[124,13,221,9,"_viewableIndices"],[124,29,221,4],[124,32,221,28],[124,34,221,4],[125,0,222,3],[128,42,227,22],[129,0,228,4],[129,13,228,9,"_hasInteracted"],[129,27,228,4],[129,30,228,26],[129,34,228,4],[130,0,229,3],[133,36,232,4,"viewableIndicesToCheck"],[133,58],[133,60,233,4,"onViewableItemsChanged"],[133,82],[133,84,234,4,"createViewToken"],[133,99],[133,101,235,4],[134,0,235,4],[136,0,237,4,"viewableIndicesToCheck"],[136,8,237,4,"viewableIndicesToCheck"],[136,30,237,26],[136,33,237,29,"viewableIndicesToCheck"],[136,55,237,51],[136,56,237,52,"filter"],[136,62,237,29],[136,63,237,59],[136,73,237,59,"ii"],[136,75,237,61],[137,0,237,61],[137,17,238,6],[137,23,238,10],[137,24,238,11,"_viewableIndices"],[137,40,238,6],[137,41,238,28,"includes"],[137,49,238,6],[137,50,238,37,"ii"],[137,52,238,6],[137,53,237,61],[138,0,237,61],[138,9,237,29],[138,10,237,4],[139,0,240,4],[139,12,240,10,"prevItems"],[139,21,240,19],[139,24,240,22],[139,29,240,27,"_viewableItems"],[139,43,240,4],[140,0,241,4],[140,12,241,10,"nextItems"],[140,21,241,19],[140,24,241,22],[140,28,241,26,"Map"],[140,31,241,22],[140,32,242,6,"viewableIndicesToCheck"],[140,54,242,28],[140,55,242,29,"map"],[140,58,242,6],[140,59,242,33],[140,69,242,33,"ii"],[140,71,242,35],[140,73,242,39],[141,0,243,8],[141,14,243,14,"viewable"],[141,22,243,22],[141,25,243,25,"createViewToken"],[141,40,243,40],[141,41,243,41,"ii"],[141,43,243,40],[141,45,243,45],[141,49,243,40],[141,50,243,8],[142,0,244,8],[142,17,244,15],[142,18,244,16,"viewable"],[142,26,244,24],[142,27,244,25,"key"],[142,30,244,15],[142,32,244,30,"viewable"],[142,40,244,15],[142,41,244,8],[143,0,245,7],[143,9,242,6],[143,10,241,22],[143,11,241,4],[144,0,248,4],[144,12,248,10,"changed"],[144,19,248,17],[144,22,248,20],[144,24,248,4],[146,0,249,4],[146,29,249,34,"nextItems"],[146,38,249,4],[146,198,249,45],[147,0,249,45],[149,0,249,45],[150,0,249,45],[151,0,249,45],[152,0,249,45],[153,0,249,45],[154,0,249,45],[155,0,249,45],[156,0,249,45],[158,0,249,45],[160,0,249,45],[162,0,249,45],[162,14,249,16,"key"],[162,19,249,45],[163,0,249,45],[163,14,249,21,"viewable"],[163,24,249,45],[165,0,250,6],[165,14,250,10],[165,15,250,11,"prevItems"],[165,24,250,20],[165,25,250,21,"has"],[165,28,250,11],[165,29,250,25,"key"],[165,34,250,11],[165,35,250,6],[165,37,250,31],[166,0,251,8,"changed"],[166,12,251,8,"changed"],[166,19,251,15],[166,20,251,16,"push"],[166,24,251,8],[166,25,251,21,"viewable"],[166,35,251,8],[167,0,252,7],[168,0,253,5],[170,0,254,4],[170,30,254,34,"prevItems"],[170,39,254,4],[170,206,254,45],[171,0,254,45],[173,0,254,45],[174,0,254,45],[175,0,254,45],[176,0,254,45],[177,0,254,45],[178,0,254,45],[179,0,254,45],[180,0,254,45],[182,0,254,45],[184,0,254,45],[186,0,254,45],[186,14,254,16,"key"],[186,19,254,45],[187,0,254,45],[187,14,254,21,"viewable"],[187,24,254,45],[189,0,255,6],[189,14,255,10],[189,15,255,11,"nextItems"],[189,24,255,20],[189,25,255,21,"has"],[189,28,255,11],[189,29,255,25,"key"],[189,34,255,11],[189,35,255,6],[189,37,255,31],[190,0,256,8,"changed"],[190,12,256,8,"changed"],[190,19,256,15],[190,20,256,16,"push"],[190,24,256,8],[190,43,256,25,"viewable"],[190,53,256,8],[191,0,256,35,"isViewable"],[191,14,256,35,"isViewable"],[191,24,256,45],[191,26,256,47],[192,0,256,8],[193,0,257,7],[194,0,258,5],[196,0,259,4],[196,12,259,8,"changed"],[196,19,259,15],[196,20,259,16,"length"],[196,26,259,8],[196,29,259,25],[196,30,259,4],[196,32,259,28],[197,0,260,6],[197,15,260,11,"_viewableItems"],[197,29,260,6],[197,32,260,28,"nextItems"],[197,41,260,6],[198,0,261,6,"onViewableItemsChanged"],[198,10,261,6,"onViewableItemsChanged"],[198,32,261,28],[198,33,261,29],[199,0,262,8,"viewableItems"],[199,12,262,8,"viewableItems"],[199,25,262,21],[199,27,262,23,"Array"],[199,32,262,28],[199,33,262,29,"from"],[199,37,262,23],[199,38,262,34,"nextItems"],[199,47,262,43],[199,48,262,44,"values"],[199,54,262,34],[199,56,262,23],[199,57,261,29],[200,0,263,8,"changed"],[200,12,263,8,"changed"],[200,19,263,15],[200,21,263,8,"changed"],[200,28,261,29],[201,0,264,8,"viewabilityConfig"],[201,12,264,8,"viewabilityConfig"],[201,29,264,25],[201,31,264,27],[201,36,264,32,"_config"],[202,0,261,29],[202,11,261,28],[202,12,261,6],[203,0,266,5],[204,0,267,3],[210,0,270,0],[210,11,270,9,"_isViewable"],[210,22,270,0],[210,23,271,2,"viewAreaMode"],[210,35,270,0],[210,37,272,2,"viewablePercentThreshold"],[210,61,270,0],[210,63,273,2,"top"],[210,66,270,0],[210,68,274,2,"bottom"],[210,74,270,0],[210,76,275,2,"viewportHeight"],[210,90,270,0],[210,92,276,2,"itemLength"],[210,102,270,0],[210,104,277,11],[211,0,278,2],[211,8,278,6,"_isEntirelyVisible"],[211,26,278,24],[211,27,278,25,"top"],[211,30,278,24],[211,32,278,30,"bottom"],[211,38,278,24],[211,40,278,38,"viewportHeight"],[211,54,278,24],[211,55,278,2],[211,57,278,55],[212,0,279,4],[212,13,279,11],[212,17,279,4],[213,0,280,3],[213,5,278,2],[213,11,280,9],[214,0,281,4],[214,10,281,10,"pixels"],[214,16,281,16],[214,19,281,19,"_getPixelsVisible"],[214,36,281,36],[214,37,281,37,"top"],[214,40,281,36],[214,42,281,42,"bottom"],[214,48,281,36],[214,50,281,50,"viewportHeight"],[214,64,281,36],[214,65,281,4],[216,0,282,4],[216,10,282,10,"percent"],[216,17,282,17],[216,20,283,6],[216,27,283,13,"viewAreaMode"],[216,39,283,25],[216,42,283,28,"pixels"],[216,48,283,34],[216,51,283,37,"viewportHeight"],[216,65,283,25],[216,68,283,54,"pixels"],[216,74,283,60],[216,77,283,63,"itemLength"],[216,87,283,6],[216,88,282,4],[217,0,284,4],[217,13,284,11,"percent"],[217,20,284,18],[217,24,284,22,"viewablePercentThreshold"],[217,48,284,4],[218,0,285,3],[219,0,286,1],[221,0,288,0],[221,11,288,9,"_getPixelsVisible"],[221,28,288,0],[221,29,289,2,"top"],[221,32,288,0],[221,34,290,2,"bottom"],[221,40,288,0],[221,42,291,2,"viewportHeight"],[221,56,288,0],[221,58,292,10],[222,0,293,2],[222,8,293,8,"visibleHeight"],[222,21,293,21],[222,24,293,24,"Math"],[222,28,293,28],[222,29,293,29,"min"],[222,32,293,24],[222,33,293,33,"bottom"],[222,39,293,24],[222,41,293,41,"viewportHeight"],[222,55,293,24],[222,59,293,59,"Math"],[222,63,293,63],[222,64,293,64,"max"],[222,67,293,59],[222,68,293,68,"top"],[222,71,293,59],[222,73,293,73],[222,74,293,59],[222,75,293,2],[223,0,294,2],[223,11,294,9,"Math"],[223,15,294,13],[223,16,294,14,"max"],[223,19,294,9],[223,20,294,18],[223,21,294,9],[223,23,294,21,"visibleHeight"],[223,36,294,9],[223,37,294,2],[224,0,295,1],[226,0,297,0],[226,11,297,9,"_isEntirelyVisible"],[226,29,297,0],[226,30,298,2,"top"],[226,33,297,0],[226,35,299,2,"bottom"],[226,41,297,0],[226,43,300,2,"viewportHeight"],[226,57,297,0],[226,59,301,11],[227,0,302,2],[227,11,302,9,"top"],[227,14,302,12],[227,18,302,16],[227,19,302,9],[227,23,302,21,"bottom"],[227,29,302,27],[227,33,302,31,"viewportHeight"],[227,47,302,9],[227,51,302,49,"bottom"],[227,57,302,55],[227,60,302,58,"top"],[227,63,302,2],[228,0,303,1],[230,0,305,0,"module"],[230,2,305,0,"module"],[230,8,305,6],[230,9,305,7,"exports"],[230,16,305,0],[230,19,305,17,"ViewabilityHelper"],[230,36,305,0]]},"type":"js/module"}]}