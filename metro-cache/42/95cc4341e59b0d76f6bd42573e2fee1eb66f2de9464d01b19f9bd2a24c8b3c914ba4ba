{"dependencies":[{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"Platform","data":{"isAsync":false}},{"name":"React","data":{"isAsync":false}},{"name":"prop-types","data":{"isAsync":false}},{"name":"ReactNative","data":{"isAsync":false}},{"name":"Touchable","data":{"isAsync":false}},{"name":"TouchableWithoutFeedback","data":{"isAsync":false}},{"name":"UIManager","data":{"isAsync":false}},{"name":"View","data":{"isAsync":false}},{"name":"create-react-class","data":{"isAsync":false}},{"name":"ensurePositiveDelayProps","data":{"isAsync":false}},{"name":"processColor","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _defineProperty = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/defineProperty\");\n\n  var _objectSpread = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/objectSpread\");\n\n  var Platform = _$$_REQUIRE(_dependencyMap[2], \"Platform\");\n\n  var React = _$$_REQUIRE(_dependencyMap[3], \"React\");\n\n  var PropTypes = _$$_REQUIRE(_dependencyMap[4], \"prop-types\");\n\n  var ReactNative = _$$_REQUIRE(_dependencyMap[5], \"ReactNative\");\n\n  var Touchable = _$$_REQUIRE(_dependencyMap[6], \"Touchable\");\n\n  var TouchableWithoutFeedback = _$$_REQUIRE(_dependencyMap[7], \"TouchableWithoutFeedback\");\n\n  var UIManager = _$$_REQUIRE(_dependencyMap[8], \"UIManager\");\n\n  var View = _$$_REQUIRE(_dependencyMap[9], \"View\");\n\n  var createReactClass = _$$_REQUIRE(_dependencyMap[10], \"create-react-class\");\n\n  var ensurePositiveDelayProps = _$$_REQUIRE(_dependencyMap[11], \"ensurePositiveDelayProps\");\n\n  var processColor = _$$_REQUIRE(_dependencyMap[12], \"processColor\");\n\n  var rippleBackgroundPropType = PropTypes.shape({\n    type: PropTypes.oneOf(['RippleAndroid']),\n    color: PropTypes.number,\n    borderless: PropTypes.bool\n  });\n  var themeAttributeBackgroundPropType = PropTypes.shape({\n    type: PropTypes.oneOf(['ThemeAttrAndroid']),\n    attribute: PropTypes.string.isRequired\n  });\n  var backgroundPropType = PropTypes.oneOfType([rippleBackgroundPropType, themeAttributeBackgroundPropType]);\n  var PRESS_RETENTION_OFFSET = {\n    top: 20,\n    left: 20,\n    right: 20,\n    bottom: 30\n  };\n  var TouchableNativeFeedback = createReactClass({\n    displayName: 'TouchableNativeFeedback',\n    propTypes: _objectSpread({}, TouchableWithoutFeedback.propTypes, {\n      background: backgroundPropType,\n      hasTVPreferredFocus: PropTypes.bool,\n      useForeground: PropTypes.bool\n    }),\n    statics: {\n      SelectableBackground: function SelectableBackground() {\n        return {\n          type: 'ThemeAttrAndroid',\n          attribute: 'selectableItemBackground'\n        };\n      },\n      SelectableBackgroundBorderless: function SelectableBackgroundBorderless() {\n        return {\n          type: 'ThemeAttrAndroid',\n          attribute: 'selectableItemBackgroundBorderless'\n        };\n      },\n      Ripple: function Ripple(color, borderless) {\n        return {\n          type: 'RippleAndroid',\n          color: processColor(color),\n          borderless: borderless\n        };\n      },\n      canUseNativeForeground: function canUseNativeForeground() {\n        return Platform.OS === 'android' && Platform.Version >= 23;\n      }\n    },\n    mixins: [Touchable.Mixin],\n    getDefaultProps: function getDefaultProps() {\n      return {\n        background: this.SelectableBackground()\n      };\n    },\n    getInitialState: function getInitialState() {\n      return this.touchableGetInitialState();\n    },\n    componentDidMount: function componentDidMount() {\n      ensurePositiveDelayProps(this.props);\n    },\n    UNSAFE_componentWillReceiveProps: function UNSAFE_componentWillReceiveProps(nextProps) {\n      ensurePositiveDelayProps(nextProps);\n    },\n    touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {\n      this.props.onPressIn && this.props.onPressIn(e);\n\n      this._dispatchPressedStateChange(true);\n\n      if (this.pressInLocation) {\n        this._dispatchHotspotUpdate(this.pressInLocation.locationX, this.pressInLocation.locationY);\n      }\n    },\n    touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {\n      this.props.onPressOut && this.props.onPressOut(e);\n\n      this._dispatchPressedStateChange(false);\n    },\n    touchableHandlePress: function touchableHandlePress(e) {\n      this.props.onPress && this.props.onPress(e);\n    },\n    touchableHandleLongPress: function touchableHandleLongPress(e) {\n      this.props.onLongPress && this.props.onLongPress(e);\n    },\n    touchableGetPressRectOffset: function touchableGetPressRectOffset() {\n      return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;\n    },\n    touchableGetHitSlop: function touchableGetHitSlop() {\n      return this.props.hitSlop;\n    },\n    touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {\n      return this.props.delayPressIn;\n    },\n    touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {\n      return this.props.delayLongPress;\n    },\n    touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {\n      return this.props.delayPressOut;\n    },\n    _handleResponderMove: function _handleResponderMove(e) {\n      this.touchableHandleResponderMove(e);\n\n      this._dispatchHotspotUpdate(e.nativeEvent.locationX, e.nativeEvent.locationY);\n    },\n    _dispatchHotspotUpdate: function _dispatchHotspotUpdate(destX, destY) {\n      UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(this), UIManager.RCTView.Commands.hotspotUpdate, [destX || 0, destY || 0]);\n    },\n    _dispatchPressedStateChange: function _dispatchPressedStateChange(pressed) {\n      UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(this), UIManager.RCTView.Commands.setPressed, [pressed]);\n    },\n    render: function render() {\n      var _objectSpread2;\n\n      var child = React.Children.only(this.props.children);\n      var children = child.props.children;\n\n      if (Touchable.TOUCH_TARGET_DEBUG && child.type === View) {\n        if (!Array.isArray(children)) {\n          children = [children];\n        }\n\n        children.push(Touchable.renderDebugView({\n          color: 'brown',\n          hitSlop: this.props.hitSlop\n        }));\n      }\n\n      if (this.props.useForeground && !TouchableNativeFeedback.canUseNativeForeground()) {\n        console.warn('Requested foreground ripple, but it is not available on this version of Android. ' + 'Consider calling TouchableNativeFeedback.canUseNativeForeground() and using a different ' + 'Touchable if the result is false.');\n      }\n\n      var drawableProp = this.props.useForeground && TouchableNativeFeedback.canUseNativeForeground() ? 'nativeForegroundAndroid' : 'nativeBackgroundAndroid';\n\n      var childProps = _objectSpread({}, child.props, (_objectSpread2 = {}, _defineProperty(_objectSpread2, drawableProp, this.props.background), _defineProperty(_objectSpread2, \"accessible\", this.props.accessible !== false), _defineProperty(_objectSpread2, \"accessibilityLabel\", this.props.accessibilityLabel), _defineProperty(_objectSpread2, \"accessibilityRole\", this.props.accessibilityRole), _defineProperty(_objectSpread2, \"accessibilityStates\", this.props.accessibilityStates), _defineProperty(_objectSpread2, \"children\", children), _defineProperty(_objectSpread2, \"testID\", this.props.testID), _defineProperty(_objectSpread2, \"onLayout\", this.props.onLayout), _defineProperty(_objectSpread2, \"hitSlop\", this.props.hitSlop), _defineProperty(_objectSpread2, \"isTVSelectable\", true), _defineProperty(_objectSpread2, \"hasTVPreferredFocus\", this.props.hasTVPreferredFocus), _defineProperty(_objectSpread2, \"onStartShouldSetResponder\", this.touchableHandleStartShouldSetResponder), _defineProperty(_objectSpread2, \"onResponderTerminationRequest\", this.touchableHandleResponderTerminationRequest), _defineProperty(_objectSpread2, \"onResponderGrant\", this.touchableHandleResponderGrant), _defineProperty(_objectSpread2, \"onResponderMove\", this._handleResponderMove), _defineProperty(_objectSpread2, \"onResponderRelease\", this.touchableHandleResponderRelease), _defineProperty(_objectSpread2, \"onResponderTerminate\", this.touchableHandleResponderTerminate), _objectSpread2));\n\n      return React.cloneElement(child, childProps);\n    }\n  });\n  module.exports = TouchableNativeFeedback;\n});","map":[[2,0,10,0],[8,0,12,0],[8,6,12,6,"Platform"],[8,14,12,14],[8,17,12,17,"require"],[8,28,12,24],[8,59,12,0],[10,0,13,0],[10,6,13,6,"React"],[10,11,13,11],[10,14,13,14,"require"],[10,25,13,21],[10,53,13,0],[12,0,14,0],[12,6,14,6,"PropTypes"],[12,15,14,15],[12,18,14,18,"require"],[12,29,14,25],[12,62,14,0],[14,0,15,0],[14,6,15,6,"ReactNative"],[14,17,15,17],[14,20,15,20,"require"],[14,31,15,27],[14,65,15,0],[16,0,16,0],[16,6,16,6,"Touchable"],[16,15,16,15],[16,18,16,18,"require"],[16,29,16,25],[16,61,16,0],[18,0,17,0],[18,6,17,6,"TouchableWithoutFeedback"],[18,30,17,30],[18,33,17,33,"require"],[18,44,17,40],[18,91,17,0],[20,0,18,0],[20,6,18,6,"UIManager"],[20,15,18,15],[20,18,18,18,"require"],[20,29,18,25],[20,61,18,0],[22,0,19,0],[22,6,19,6,"View"],[22,10,19,10],[22,13,19,13,"require"],[22,24,19,20],[22,51,19,0],[24,0,21,0],[24,6,21,6,"createReactClass"],[24,22,21,22],[24,25,21,25,"require"],[24,36,21,32],[24,78,21,0],[26,0,22,0],[26,6,22,6,"ensurePositiveDelayProps"],[26,30,22,30],[26,33,22,33,"require"],[26,44,22,40],[26,92,22,0],[28,0,23,0],[28,6,23,6,"processColor"],[28,18,23,18],[28,21,23,21,"require"],[28,32,23,28],[28,68,23,0],[30,0,25,0],[30,6,25,6,"rippleBackgroundPropType"],[30,30,25,30],[30,33,25,33,"PropTypes"],[30,42,25,42],[30,43,25,43,"shape"],[30,48,25,33],[30,49,25,49],[31,0,26,2,"type"],[31,4,26,2,"type"],[31,8,26,6],[31,10,26,8,"PropTypes"],[31,19,26,17],[31,20,26,18,"oneOf"],[31,25,26,8],[31,26,26,24],[31,27,26,25],[31,42,26,24],[31,43,26,8],[31,44,25,49],[32,0,27,2,"color"],[32,4,27,2,"color"],[32,9,27,7],[32,11,27,9,"PropTypes"],[32,20,27,18],[32,21,27,19,"number"],[32,27,25,49],[33,0,28,2,"borderless"],[33,4,28,2,"borderless"],[33,14,28,12],[33,16,28,14,"PropTypes"],[33,25,28,23],[33,26,28,24,"bool"],[34,0,25,49],[34,3,25,33],[34,4,25,0],[35,0,31,0],[35,6,31,6,"themeAttributeBackgroundPropType"],[35,38,31,38],[35,41,31,41,"PropTypes"],[35,50,31,50],[35,51,31,51,"shape"],[35,56,31,41],[35,57,31,57],[36,0,32,2,"type"],[36,4,32,2,"type"],[36,8,32,6],[36,10,32,8,"PropTypes"],[36,19,32,17],[36,20,32,18,"oneOf"],[36,25,32,8],[36,26,32,24],[36,27,32,25],[36,45,32,24],[36,46,32,8],[36,47,31,57],[37,0,33,2,"attribute"],[37,4,33,2,"attribute"],[37,13,33,11],[37,15,33,13,"PropTypes"],[37,24,33,22],[37,25,33,23,"string"],[37,31,33,13],[37,32,33,30,"isRequired"],[38,0,31,57],[38,3,31,41],[38,4,31,0],[39,0,36,0],[39,6,36,6,"backgroundPropType"],[39,24,36,24],[39,27,36,27,"PropTypes"],[39,36,36,36],[39,37,36,37,"oneOfType"],[39,46,36,27],[39,47,36,47],[39,48,37,2,"rippleBackgroundPropType"],[39,72,36,47],[39,74,38,2,"themeAttributeBackgroundPropType"],[39,106,36,47],[39,107,36,27],[39,108,36,0],[40,0,43,0],[40,6,43,6,"PRESS_RETENTION_OFFSET"],[40,28,43,28],[40,31,43,31],[41,0,43,32,"top"],[41,4,43,32,"top"],[41,7,43,35],[41,9,43,37],[41,11,43,31],[42,0,43,41,"left"],[42,4,43,41,"left"],[42,8,43,45],[42,10,43,47],[42,12,43,31],[43,0,43,51,"right"],[43,4,43,51,"right"],[43,9,43,56],[43,11,43,58],[43,13,43,31],[44,0,43,62,"bottom"],[44,4,43,62,"bottom"],[44,10,43,68],[44,12,43,70],[45,0,43,31],[45,3,43,0],[46,0,74,0],[46,6,74,6,"TouchableNativeFeedback"],[46,29,74,29],[46,32,74,32,"createReactClass"],[46,48,74,48],[46,49,74,49],[47,0,75,2,"displayName"],[47,4,75,2,"displayName"],[47,15,75,13],[47,17,75,15],[47,42,74,49],[48,0,76,2,"propTypes"],[48,4,76,2,"propTypes"],[48,13,76,11],[48,33,77,7,"TouchableWithoutFeedback"],[48,57,77,31],[48,58,77,32,"propTypes"],[48,67,76,11],[49,0,85,4,"background"],[49,6,85,4,"background"],[49,16,85,14],[49,18,85,16,"backgroundPropType"],[49,36,76,11],[50,0,90,4,"hasTVPreferredFocus"],[50,6,90,4,"hasTVPreferredFocus"],[50,25,90,23],[50,27,90,25,"PropTypes"],[50,36,90,34],[50,37,90,35,"bool"],[50,41,76,11],[51,0,101,4,"useForeground"],[51,6,101,4,"useForeground"],[51,19,101,17],[51,21,101,19,"PropTypes"],[51,30,101,28],[51,31,101,29,"bool"],[52,0,76,11],[52,6,74,49],[53,0,104,2,"statics"],[53,4,104,2,"statics"],[53,11,104,9],[53,13,104,11],[54,0,109,4,"SelectableBackground"],[54,6,109,4,"SelectableBackground"],[54,26,109,24],[54,28,109,26],[54,60,109,37],[55,0,110,6],[55,15,110,13],[56,0,110,14,"type"],[56,10,110,14,"type"],[56,14,110,18],[56,16,110,20],[56,34,110,13],[57,0,110,40,"attribute"],[57,10,110,40,"attribute"],[57,19,110,49],[57,21,110,51],[58,0,110,13],[58,9,110,6],[59,0,111,5],[59,7,104,11],[60,0,117,4,"SelectableBackgroundBorderless"],[60,6,117,4,"SelectableBackgroundBorderless"],[60,36,117,34],[60,38,117,36],[60,80,117,47],[61,0,118,6],[61,15,118,13],[62,0,119,8,"type"],[62,10,119,8,"type"],[62,14,119,12],[62,16,119,14],[62,34,118,13],[63,0,120,8,"attribute"],[63,10,120,8,"attribute"],[63,19,120,17],[63,21,120,19],[64,0,118,13],[64,9,118,6],[65,0,122,5],[65,7,104,11],[66,0,133,4,"Ripple"],[66,6,133,4,"Ripple"],[66,12,133,10],[66,14,133,12],[66,30,133,21,"color"],[66,35,133,12],[66,37,133,36,"borderless"],[66,47,133,12],[66,49,133,57],[67,0,134,6],[67,15,134,13],[68,0,135,8,"type"],[68,10,135,8,"type"],[68,14,135,12],[68,16,135,14],[68,31,134,13],[69,0,136,8,"color"],[69,10,136,8,"color"],[69,15,136,13],[69,17,136,15,"processColor"],[69,29,136,27],[69,30,136,28,"color"],[69,35,136,27],[69,36,134,13],[70,0,137,8,"borderless"],[70,10,137,8,"borderless"],[70,20,137,18],[70,22,137,20,"borderless"],[71,0,134,13],[71,9,134,6],[72,0,139,5],[72,7,104,11],[73,0,141,4,"canUseNativeForeground"],[73,6,141,4,"canUseNativeForeground"],[73,28,141,26],[73,30,141,28],[73,64,141,39],[74,0,142,6],[74,15,142,13,"Platform"],[74,23,142,21],[74,24,142,22,"OS"],[74,26,142,13],[74,31,142,29],[74,40,142,13],[74,44,142,42,"Platform"],[74,52,142,50],[74,53,142,51,"Version"],[74,60,142,42],[74,64,142,62],[74,66,142,6],[75,0,143,5],[76,0,104,11],[76,5,74,49],[77,0,146,2,"mixins"],[77,4,146,2,"mixins"],[77,10,146,8],[77,12,146,10],[77,13,146,11,"Touchable"],[77,22,146,20],[77,23,146,21,"Mixin"],[77,28,146,10],[77,29,74,49],[78,0,148,2,"getDefaultProps"],[78,4,148,2,"getDefaultProps"],[78,19,148,17],[78,21,148,19],[78,48,148,30],[79,0,149,4],[79,13,149,11],[80,0,150,6,"background"],[80,8,150,6,"background"],[80,18,150,16],[80,20,150,18],[80,25,150,23,"SelectableBackground"],[80,45,150,18],[81,0,149,11],[81,7,149,4],[82,0,152,3],[82,5,74,49],[83,0,154,2,"getInitialState"],[83,4,154,2,"getInitialState"],[83,19,154,17],[83,21,154,19],[83,48,154,30],[84,0,155,4],[84,13,155,11],[84,18,155,16,"touchableGetInitialState"],[84,42,155,11],[84,44,155,4],[85,0,156,3],[85,5,74,49],[86,0,158,2,"componentDidMount"],[86,4,158,2,"componentDidMount"],[86,21,158,19],[86,23,158,21],[86,52,158,32],[87,0,159,4,"ensurePositiveDelayProps"],[87,6,159,4,"ensurePositiveDelayProps"],[87,30,159,28],[87,31,159,29],[87,36,159,34,"props"],[87,41,159,28],[87,42,159,4],[88,0,160,3],[88,5,74,49],[89,0,162,2,"UNSAFE_componentWillReceiveProps"],[89,4,162,2,"UNSAFE_componentWillReceiveProps"],[89,36,162,34],[89,38,162,36],[89,80,162,45,"nextProps"],[89,89,162,36],[89,91,162,56],[90,0,163,4,"ensurePositiveDelayProps"],[90,6,163,4,"ensurePositiveDelayProps"],[90,30,163,28],[90,31,163,29,"nextProps"],[90,40,163,28],[90,41,163,4],[91,0,164,3],[91,5,74,49],[92,0,170,2,"touchableHandleActivePressIn"],[92,4,170,2,"touchableHandleActivePressIn"],[92,32,170,30],[92,34,170,32],[92,72,170,41,"e"],[92,73,170,32],[92,75,170,51],[93,0,171,4],[93,11,171,9,"props"],[93,16,171,4],[93,17,171,15,"onPressIn"],[93,26,171,4],[93,30,171,28],[93,35,171,33,"props"],[93,40,171,28],[93,41,171,39,"onPressIn"],[93,50,171,28],[93,51,171,49,"e"],[93,52,171,28],[93,53,171,4],[95,0,172,4],[95,11,172,9,"_dispatchPressedStateChange"],[95,38,172,4],[95,39,172,37],[95,43,172,4],[97,0,173,4],[97,10,173,8],[97,15,173,13,"pressInLocation"],[97,30,173,4],[97,32,173,30],[98,0,174,6],[98,13,174,11,"_dispatchHotspotUpdate"],[98,35,174,6],[98,36,175,8],[98,41,175,13,"pressInLocation"],[98,56,175,8],[98,57,175,29,"locationX"],[98,66,174,6],[98,68,176,8],[98,73,176,13,"pressInLocation"],[98,88,176,8],[98,89,176,29,"locationY"],[98,98,174,6],[99,0,178,5],[100,0,179,3],[100,5,74,49],[101,0,181,2,"touchableHandleActivePressOut"],[101,4,181,2,"touchableHandleActivePressOut"],[101,33,181,31],[101,35,181,33],[101,74,181,42,"e"],[101,75,181,33],[101,77,181,52],[102,0,182,4],[102,11,182,9,"props"],[102,16,182,4],[102,17,182,15,"onPressOut"],[102,27,182,4],[102,31,182,29],[102,36,182,34,"props"],[102,41,182,29],[102,42,182,40,"onPressOut"],[102,52,182,29],[102,53,182,51,"e"],[102,54,182,29],[102,55,182,4],[104,0,183,4],[104,11,183,9,"_dispatchPressedStateChange"],[104,38,183,4],[104,39,183,37],[104,44,183,4],[105,0,184,3],[105,5,74,49],[106,0,186,2,"touchableHandlePress"],[106,4,186,2,"touchableHandlePress"],[106,24,186,22],[106,26,186,24],[106,56,186,33,"e"],[106,57,186,24],[106,59,186,43],[107,0,187,4],[107,11,187,9,"props"],[107,16,187,4],[107,17,187,15,"onPress"],[107,24,187,4],[107,28,187,26],[107,33,187,31,"props"],[107,38,187,26],[107,39,187,37,"onPress"],[107,46,187,26],[107,47,187,45,"e"],[107,48,187,26],[107,49,187,4],[108,0,188,3],[108,5,74,49],[109,0,190,2,"touchableHandleLongPress"],[109,4,190,2,"touchableHandleLongPress"],[109,28,190,26],[109,30,190,28],[109,64,190,37,"e"],[109,65,190,28],[109,67,190,47],[110,0,191,4],[110,11,191,9,"props"],[110,16,191,4],[110,17,191,15,"onLongPress"],[110,28,191,4],[110,32,191,30],[110,37,191,35,"props"],[110,42,191,30],[110,43,191,41,"onLongPress"],[110,54,191,30],[110,55,191,53,"e"],[110,56,191,30],[110,57,191,4],[111,0,192,3],[111,5,74,49],[112,0,194,2,"touchableGetPressRectOffset"],[112,4,194,2,"touchableGetPressRectOffset"],[112,31,194,29],[112,33,194,31],[112,72,194,42],[113,0,196,4],[113,13,196,11],[113,18,196,16,"props"],[113,23,196,11],[113,24,196,22,"pressRetentionOffset"],[113,44,196,11],[113,48,196,46,"PRESS_RETENTION_OFFSET"],[113,70,196,4],[114,0,197,3],[114,5,74,49],[115,0,199,2,"touchableGetHitSlop"],[115,4,199,2,"touchableGetHitSlop"],[115,23,199,21],[115,25,199,23],[115,56,199,34],[116,0,200,4],[116,13,200,11],[116,18,200,16,"props"],[116,23,200,11],[116,24,200,22,"hitSlop"],[116,31,200,4],[117,0,201,3],[117,5,74,49],[118,0,203,2,"touchableGetHighlightDelayMS"],[118,4,203,2,"touchableGetHighlightDelayMS"],[118,32,203,30],[118,34,203,32],[118,74,203,43],[119,0,204,4],[119,13,204,11],[119,18,204,16,"props"],[119,23,204,11],[119,24,204,22,"delayPressIn"],[119,36,204,4],[120,0,205,3],[120,5,74,49],[121,0,207,2,"touchableGetLongPressDelayMS"],[121,4,207,2,"touchableGetLongPressDelayMS"],[121,32,207,30],[121,34,207,32],[121,74,207,43],[122,0,208,4],[122,13,208,11],[122,18,208,16,"props"],[122,23,208,11],[122,24,208,22,"delayLongPress"],[122,38,208,4],[123,0,209,3],[123,5,74,49],[124,0,211,2,"touchableGetPressOutDelayMS"],[124,4,211,2,"touchableGetPressOutDelayMS"],[124,31,211,29],[124,33,211,31],[124,72,211,42],[125,0,212,4],[125,13,212,11],[125,18,212,16,"props"],[125,23,212,11],[125,24,212,22,"delayPressOut"],[125,37,212,4],[126,0,213,3],[126,5,74,49],[127,0,215,2,"_handleResponderMove"],[127,4,215,2,"_handleResponderMove"],[127,24,215,22],[127,26,215,24],[127,56,215,33,"e"],[127,57,215,24],[127,59,215,36],[128,0,216,4],[128,11,216,9,"touchableHandleResponderMove"],[128,39,216,4],[128,40,216,38,"e"],[128,41,216,4],[130,0,217,4],[130,11,217,9,"_dispatchHotspotUpdate"],[130,33,217,4],[130,34,218,6,"e"],[130,35,218,7],[130,36,218,8,"nativeEvent"],[130,47,218,6],[130,48,218,20,"locationX"],[130,57,217,4],[130,59,219,6,"e"],[130,60,219,7],[130,61,219,8,"nativeEvent"],[130,72,219,6],[130,73,219,20,"locationY"],[130,82,217,4],[131,0,221,3],[131,5,74,49],[132,0,223,2,"_dispatchHotspotUpdate"],[132,4,223,2,"_dispatchHotspotUpdate"],[132,26,223,24],[132,28,223,26],[132,60,223,35,"destX"],[132,65,223,26],[132,67,223,42,"destY"],[132,72,223,26],[132,74,223,49],[133,0,224,4,"UIManager"],[133,6,224,4,"UIManager"],[133,15,224,13],[133,16,224,14,"dispatchViewManagerCommand"],[133,42,224,4],[133,43,225,6,"ReactNative"],[133,54,225,17],[133,55,225,18,"findNodeHandle"],[133,69,225,6],[133,70,225,33],[133,74,225,6],[133,75,224,4],[133,77,226,6,"UIManager"],[133,86,226,15],[133,87,226,16,"RCTView"],[133,94,226,6],[133,95,226,24,"Commands"],[133,103,226,6],[133,104,226,33,"hotspotUpdate"],[133,117,224,4],[133,119,227,6],[133,120,227,7,"destX"],[133,125,227,12],[133,129,227,16],[133,130,227,6],[133,132,227,19,"destY"],[133,137,227,24],[133,141,227,28],[133,142,227,6],[133,143,224,4],[134,0,229,3],[134,5,74,49],[135,0,231,2,"_dispatchPressedStateChange"],[135,4,231,2,"_dispatchPressedStateChange"],[135,31,231,29],[135,33,231,31],[135,70,231,40,"pressed"],[135,77,231,31],[135,79,231,49],[136,0,232,4,"UIManager"],[136,6,232,4,"UIManager"],[136,15,232,13],[136,16,232,14,"dispatchViewManagerCommand"],[136,42,232,4],[136,43,233,6,"ReactNative"],[136,54,233,17],[136,55,233,18,"findNodeHandle"],[136,69,233,6],[136,70,233,33],[136,74,233,6],[136,75,232,4],[136,77,234,6,"UIManager"],[136,86,234,15],[136,87,234,16,"RCTView"],[136,94,234,6],[136,95,234,24,"Commands"],[136,103,234,6],[136,104,234,33,"setPressed"],[136,114,232,4],[136,116,235,6],[136,117,235,7,"pressed"],[136,124,235,6],[136,125,232,4],[137,0,237,3],[137,5,74,49],[138,0,239,2,"render"],[138,4,239,2,"render"],[138,10,239,8],[138,12,239,10],[138,30,239,21],[139,0,239,21],[141,0,240,4],[141,10,240,10,"child"],[141,15,240,15],[141,18,240,18,"React"],[141,23,240,23],[141,24,240,24,"Children"],[141,32,240,18],[141,33,240,33,"only"],[141,37,240,18],[141,38,240,38],[141,43,240,43,"props"],[141,48,240,38],[141,49,240,49,"children"],[141,57,240,18],[141,58,240,4],[142,0,241,4],[142,10,241,8,"children"],[142,18,241,16],[142,21,241,19,"child"],[142,26,241,24],[142,27,241,25,"props"],[142,32,241,19],[142,33,241,31,"children"],[142,41,241,4],[144,0,242,4],[144,10,242,8,"Touchable"],[144,19,242,17],[144,20,242,18,"TOUCH_TARGET_DEBUG"],[144,38,242,8],[144,42,242,40,"child"],[144,47,242,45],[144,48,242,46,"type"],[144,52,242,40],[144,57,242,55,"View"],[144,61,242,4],[144,63,242,61],[145,0,243,6],[145,12,243,10],[145,13,243,11,"Array"],[145,18,243,16],[145,19,243,17,"isArray"],[145,26,243,11],[145,27,243,25,"children"],[145,35,243,11],[145,36,243,6],[145,38,243,36],[146,0,244,8,"children"],[146,10,244,8,"children"],[146,18,244,16],[146,21,244,19],[146,22,244,20,"children"],[146,30,244,19],[146,31,244,8],[147,0,245,7],[149,0,246,6,"children"],[149,8,246,6,"children"],[149,16,246,14],[149,17,246,15,"push"],[149,21,246,6],[149,22,247,8,"Touchable"],[149,31,247,17],[149,32,247,18,"renderDebugView"],[149,47,247,8],[149,48,247,34],[150,0,248,10,"color"],[150,10,248,10,"color"],[150,15,248,15],[150,17,248,17],[150,24,247,34],[151,0,249,10,"hitSlop"],[151,10,249,10,"hitSlop"],[151,17,249,17],[151,19,249,19],[151,24,249,24,"props"],[151,29,249,19],[151,30,249,30,"hitSlop"],[152,0,247,34],[152,9,247,8],[152,10,246,6],[153,0,252,5],[155,0,253,4],[155,10,254,6],[155,15,254,11,"props"],[155,20,254,6],[155,21,254,17,"useForeground"],[155,34,254,6],[155,38,255,6],[155,39,255,7,"TouchableNativeFeedback"],[155,62,255,30],[155,63,255,31,"canUseNativeForeground"],[155,85,255,7],[155,87,253,4],[155,89,256,6],[156,0,257,6,"console"],[156,8,257,6,"console"],[156,15,257,13],[156,16,257,14,"warn"],[156,20,257,6],[156,21,258,8],[156,107,259,10],[156,197,258,8],[156,200,260,10],[156,235,257,6],[157,0,262,5],[159,0,263,4],[159,10,263,10,"drawableProp"],[159,22,263,22],[159,25,264,6],[159,30,264,11,"props"],[159,35,264,6],[159,36,264,17,"useForeground"],[159,49,264,6],[159,53,265,6,"TouchableNativeFeedback"],[159,76,265,29],[159,77,265,30,"canUseNativeForeground"],[159,99,265,6],[159,101,264,6],[159,104,266,10],[159,129,264,6],[159,132,267,10],[159,157,263,4],[161,0,268,4],[161,10,268,10,"childProps"],[161,20,268,20],[161,41,269,9,"child"],[161,46,269,14],[161,47,269,15,"props"],[161,52,268,20],[161,108,270,7,"drawableProp"],[161,120,268,20],[161,122,270,22],[161,127,270,27,"props"],[161,132,270,22],[161,133,270,33,"background"],[161,143,268,20],[161,192,271,18],[161,197,271,23,"props"],[161,202,271,18],[161,203,271,29,"accessible"],[161,213,271,18],[161,218,271,44],[161,223,268,20],[161,280,272,26],[161,285,272,31,"props"],[161,290,272,26],[161,291,272,37,"accessibilityLabel"],[161,309,268,20],[161,365,273,25],[161,370,273,30,"props"],[161,375,273,25],[161,376,273,36,"accessibilityRole"],[161,393,268,20],[161,451,274,27],[161,456,274,32,"props"],[161,461,274,27],[161,462,274,38,"accessibilityStates"],[161,481,268,20],[161,528,275,6,"children"],[161,536,268,20],[161,581,276,14],[161,586,276,19,"props"],[161,591,276,14],[161,592,276,25,"testID"],[161,598,268,20],[161,645,277,16],[161,650,277,21,"props"],[161,655,277,16],[161,656,277,27,"onLayout"],[161,664,268,20],[161,710,278,15],[161,715,278,20,"props"],[161,720,278,15],[161,721,278,26,"hitSlop"],[161,728,268,20],[161,781,279,22],[161,785,268,20],[161,843,280,27],[161,848,280,32,"props"],[161,853,280,27],[161,854,280,38,"hasTVPreferredFocus"],[161,873,268,20],[161,937,281,33],[161,942,281,38,"touchableHandleStartShouldSetResponder"],[161,980,268,20],[161,1048,282,37],[161,1053,283,9,"touchableHandleResponderTerminationRequest"],[161,1095,268,20],[161,1150,284,24],[161,1155,284,29,"touchableHandleResponderGrant"],[161,1184,268,20],[161,1238,285,23],[161,1243,285,28,"_handleResponderMove"],[161,1263,268,20],[161,1320,286,26],[161,1325,286,31,"touchableHandleResponderRelease"],[161,1356,268,20],[161,1415,287,28],[161,1420,287,33,"touchableHandleResponderTerminate"],[161,1453,268,20],[161,1472,268,4],[163,0,293,4],[163,13,293,11,"React"],[163,18,293,16],[163,19,293,17,"cloneElement"],[163,31,293,11],[163,32,293,30,"child"],[163,37,293,11],[163,39,293,37,"childProps"],[163,49,293,11],[163,50,293,4],[164,0,294,3],[165,0,74,49],[165,3,74,48],[165,4,74,0],[166,0,297,0,"module"],[166,2,297,0,"module"],[166,8,297,6],[166,9,297,7,"exports"],[166,16,297,0],[166,19,297,17,"TouchableNativeFeedback"],[166,42,297,0]]},"type":"js/module"}]}